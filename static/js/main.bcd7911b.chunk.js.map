{"version":3,"sources":["collections/CollectionsProvider.js","pages/index.js","cards/LearningCard.js","pages/learning.js","cards/TrainingCard.js","helpers/array.js","helpers/card.js","pages/training.js","components/ResultsTable.js","pages/testing.js","App.js","reportWebVitals.js","index.js"],"names":["CollectionsContext","React","createContext","useCollections","useContext","CollectionsProvider","children","useState","index","data","stateCollections","setCollections","useEffect","reduce","acc","item","idx","findIndex","f","label","group","push","options","name","value","code","processData","_hiragana","_katakana","_kanji_numbers","_kanji_study","_kanji_calendar","Provider","Home","Helmet","className","to","text","map","section","cn","LearningCard","blind","style","willChange","height","jp","onyomi","kunyomi","native","transliteration","en","Learning","stateCollectionData","setCollectionData","stateCollection","setCollection","stateKanaAndKanjiMode","setKanaAndKanjiMode","collections","FormControl","variant","InputLabel","id","Select","labelId","defaultValue","onChange","event","target","ListSubheader","option","optionIdx","MenuItem","ToggleButtonGroup","aria-labelledby","exclusive","ToggleButton","aria-label","length","card","TrainingCard","checkAnswerHandler","dir","riddle","onMouseUp","indexOfCorrect","Math","random","toString","shuffle","array","i","j","floor","pickElement","arr","exclude","Array","isArray","p","indexOf","CreateCard","picks","mode","spelling","this","modeRiddle","split","modeOptions","createData","pick","isCorrect","opt","$riddle","$options","undefined","Training","stateTotalAnswers","setTotalAnswers","stateCorrectAnswers","setCorrectAnswers","stateMode","setMode","stateSpelling","setSpelling","stateDifficulty","setDifficulty","stateCardElements","setCardElements","cardElements","exportTrainingCardElements","ResultsTable","cards","answers","cardIdx","prototype","exportResultsCardElements","call","optIdx","Testing","stateCollectionsValue","setCollectionsValue","stateGeneralCollection","setGeneralCollection","stateNumberOfQuestions","setNumberOfQuestions","stateTestingCollection","setTestingCollection","stateCards","setCards","stateAnswers","setAnswers","stateCurrentQuestion","setCurrentQuestion","stateSetup","setSetup","stateTest","setTest","stateResult","setResult","collection","cardData","testingCardElements","exportTestingCardElements","state","Button","color","onClick","2","3","4","join","Autocomplete","multiple","disableCloseOnSelect","autoHighlight","groupBy","getOptionLabel","getOptionSelected","renderInput","params","TextField","concat","disabled","disableElevation","size","theme","createMuiTheme","palette","primary","teal","overrides","MuiToggleButton","root","backgroundColor","selected","Nav","location","useLocation","pathname","icon","faHome","faBookOpen","faBookReader","faUserGraduate","App","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"gxZAQMA,EAAqBC,IAAMC,gBAkB1B,IAAMC,EAAiB,kBAAMC,qBAAWJ,IAElCK,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACRC,mBAAS,CAAEC,MAAO,GAAIC,KAAM,KADpB,mBAC5CC,EAD4C,KAC1BC,EAD0B,KAanD,OAVAC,qBAAU,WACRD,EAtBJ,WACE,OAD8B,uDAAJ,IACdE,QAAO,SAACC,EAAKC,GACvB,IAAMC,EAAMF,EAAIN,MAAMS,WAAU,SAAAC,GAAC,OAAIA,EAAEC,QAAUJ,EAAKK,SAUtD,OARa,IAATJ,EACFF,EAAIN,MAAMa,KAAK,CAAEF,MAAOJ,EAAKK,MAAOE,QAAS,CAAC,CAAEH,MAAOJ,EAAKQ,KAAOC,MAAOT,EAAKU,SAE/EX,EAAIN,MAAMQ,GAAKM,QAAQD,KAAK,CAAEF,MAAOJ,EAAKQ,KAAOC,MAAOT,EAAKU,OAG/DX,EAAIL,KAAKM,EAAKU,MAAQV,EAAKN,KAEpBK,IACN,CAACN,MAAO,GAAIC,KAAM,KASJiB,CAAY,CACzBC,EACAC,EACAC,EACAC,EACAC,OAED,IAGD,cAAC/B,EAAmBgC,SAApB,CAA6BR,MAAOd,EAApC,SACIJ,KCWO2B,MAlDf,WAeE,OACE,qCACE,cAACC,EAAA,EAAD,UACE,wEAEF,oBAAIC,UAAU,wCAAd,SACE,sBAAMA,UAAU,8BAAhB,6CAIF,mBAAGA,UAAU,oBAAb,qGAGA,qBAAKA,UAAU,wEAAf,SA3Ba,CACf,CACEC,GAAI,YACJC,KAAM,8BAER,CACED,GAAI,YACJC,KAAM,YAER,CACED,GAAI,WACJC,KAAM,wBAkBOC,KAAI,SAACC,EAASvB,GAAV,OACX,cAAC,IAAD,CAEEoB,GAAIG,EAAQH,GACZD,UAAWK,IACT,iFACA,CACE,qDAAsDxB,IAN5D,SAUGuB,EAAQF,MATJrB,Y,uEClCnB,SAASyB,EAAT,GAGI,IAFFhC,EAEC,EAFDA,KACAiC,EACC,EADDA,MAEA,OACE,sBACEP,UAAU,4DADZ,UAGE,qBACEA,UAAU,mEACVQ,MAAO,CAAEC,WAAY,mBAAoBC,OAAQ,QAFnD,SAIE,sBAAMV,UAAWK,IACf,gEACA,CACE,YAAaE,IAHjB,SAMIjC,EAAKqC,QAIRrC,EAAKsC,QAAUtC,EAAKuC,UACnB,sBACEb,UAAU,oFACVQ,MAAO,CAAEC,WAAY,mBAAoBC,OAAQ,SAFnD,UAIE,sBAAKV,UAAU,kCAAf,UACE,mBAAGA,UAAU,eAAb,sBACA,4BAAK1B,EAAKuC,QAAQC,QAAU,gDAC5B,4BAAKxC,EAAKuC,QAAQE,iBAAmB,mDAEvC,sBAAKf,UAAU,YAAf,UACE,mBAAGA,UAAU,eAAb,qBACA,4BAAK1B,EAAKsC,OAAOE,QAAU,gDAC3B,4BAAKxC,EAAKsC,OAAOG,iBAAmB,sDAI5C,qBACEf,UAAU,mFACVQ,MAAO,CAAEC,WAAY,mBAAoBC,OAAQ,QAFnD,SAIE,4BAAKpC,EAAK0C,UCnCH,SAASC,IAAY,IAAD,EACgB7C,mBAAS,IADzB,mBAC1B8C,EAD0B,KACLC,EADK,OAEQ/C,mBAAS,IAFjB,mBAE1BgD,EAF0B,KAETC,EAFS,OAGoBjD,mBAAS,WAH7B,mBAG1BkD,EAH0B,KAGHC,EAHG,KAI3BC,EAAcxD,IAEpB,OACE,qCACE,cAAC+B,EAAA,EAAD,UACE,uEAEF,sBAAKC,UAAU,+BAAf,UACE,qBAAKA,UAAU,OAAf,SACE,eAACyB,EAAA,EAAD,CACEC,QAAQ,WACR1B,UAAU,SAFZ,UAIE,cAAC2B,EAAA,EAAD,CAAYC,GAAG,mBAAf,wBACA,cAACC,EAAA,EAAD,CACEC,QAAQ,mBACRC,aAAa,GACb1C,MAAQ+B,EACRpC,MAAM,aACNgD,SAAU,SAAAC,GACRZ,EAAcY,EAAMC,OAAO7C,OAC3B8B,EAAkBK,EAAYlD,KAAK2D,EAAMC,OAAO7C,SAPpD,SAWImC,EAAYnD,MAAMK,QAAO,SAACC,EAAKM,GAC7B,MAAM,GAAN,mBACKN,GADL,CAEE,cAACwD,EAAA,EAAD,UAAqClD,EAAMD,OAAtBC,EAAMD,OAC3BC,EAAME,QAAQgB,KAAI,SAACiC,EAAQC,GAAT,OAChB,cAACC,EAAA,EAAD,CAA4BjD,MAAQ+C,EAAO/C,MAA3C,SACI+C,EAAOpD,OADKqD,UAKnB,WAKX,8BACE,eAACZ,EAAA,EAAD,CAAazB,UAAU,SAAvB,UACE,uBACE4B,GAAG,4BACH5B,UAAU,6BAFZ,iCAMA,eAACuC,EAAA,EAAD,CACEC,kBAAgB,4BAChBnD,MAAOiC,EACPmB,WAAS,EACTT,SAAU,SAACC,EAAO5C,GAA0B,OAAVA,GAAgBkC,EAAoBlC,IACtEW,UAAU,SALZ,UAOE,cAAC0C,EAAA,EAAD,CAAcrD,MAAM,UAAUsD,aAAW,eAAe3C,UAAU,SAAlE,qBAGA,cAAC0C,EAAA,EAAD,CAAcrD,MAAM,SAASsD,aAAW,cAAc3C,UAAU,SAAhE,+BAQyB,IAA/BkB,EAAoB0B,QAClB,qBACE5C,UAAU,4CADZ,gDAMJ,qBAAKA,UAAU,sEAAf,SAEIkB,EAAoBf,KAAI,SAAC0C,EAAMhE,GAAP,OACtB,cAACyB,EAAD,CAEEhC,KAAOuE,EACPtC,MAAkC,WAA1Be,GAFFzC,WCzFpB,SAASiE,EAAT,GAII,IAAD,IAHDxE,YAGC,MAHM,KAGN,EAFDyE,EAEC,EAFDA,mBAEC,IADDC,WACC,MADK,MACL,EACD,OAAa,OAAT1E,EACK,qBAAK0B,UAAU,qBAAf,uCAIP,sBACEA,UAAU,wDACVQ,MAAO,CAAEE,OAAQ,SAFnB,UAIE,qBAAKV,UAAWK,IACd,iEACA,CACE,QAAiB,QAAR2C,EACT,QAAiB,QAARA,IAJb,SAOI1E,EAAK2E,SAET,qBAAKjD,UAAWK,IACd,6BACA,CACE,mCAA4C,QAAR2C,EACpC,mCAA4C,QAARA,IAJxC,SAQI1E,EAAKa,QAAQgB,KAAI,SAACiC,EAAQvD,GAAT,OACf,qBAEEmB,UAAWK,IACT,gIACA,CAAE,wBAAyBxB,EAAM,GAAa,QAARmE,GACtC,CAAE,wBAAyBnE,EAAM,GAAa,QAARmE,IAExCE,UAAW,kBAAMH,EAAmBlE,IAAQP,EAAK6E,eAAgBtE,IAPnE,SASIuD,GARIgB,KAAKC,SAASC,oBClC3B,SAASC,EAAQC,GACtB,IAAK,IAAIC,EAAID,EAAMZ,OAAS,EAAGa,EAAI,EAAGA,IAAK,CACzC,IAAIC,EAAIN,KAAKO,MAAMP,KAAKC,UAAYI,EAAI,IADC,EAElB,CAACD,EAAME,GAAIF,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAME,GAFwB,KAK3C,OAAOF,EAGF,SAASI,EAAYC,EAAKC,GAC/B,GAAmB,IAAfD,EAAIjB,OAAc,OAAO,KAE7B,GAAKmB,MAAMC,QAAQF,GAEZ,CACL,IAAMG,EAAIJ,EAAIT,KAAKO,MAAMP,KAAKC,SAAWQ,EAAIjB,SAE7C,OAA4B,IAAxBkB,EAAQI,QAAQD,GACXA,EAEAL,EAAYC,EAAKC,GAP1B,OAAOD,EAAIT,KAAKO,MAAMP,KAAKC,SAAWQ,EAAIjB,S,oBCZjCuB,EAAb,WACE,cAAwC,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAAY,oBACrCC,KAAKH,MAAQA,EACbG,KAAKF,KAAOA,EACZE,KAAKD,SAAWA,EAChBC,KAAKC,WAAaH,EAAKI,MAAM,KAAK,GAClCF,KAAKG,YAAcL,EAAKI,MAAM,KAAK,GAEnCF,KAAKtB,OAAS,GACdsB,KAAKpF,QAAU,GACfoF,KAAKpB,gBAAkB,EAEvBoB,KAAKI,aAZT,8CAeE,WAAc,IAAD,eACX,OAAQJ,KAAKC,YACX,IAAK,KACHD,KAAKtB,OAAS,CACZtC,GAAI4D,KAAKH,MAAM,GAAGzD,GAClBC,OAAM,UAAE2D,KAAKH,MAAM,GAAGxD,cAAhB,aAAE,EAAuB2D,KAAKD,UACpCzD,QAAO,UAAE0D,KAAKH,MAAM,GAAGvD,eAAhB,aAAE,EAAwB0D,KAAKD,WAE1C,MAEA,IAAK,KACHC,KAAKtB,OAAS,CACZjC,GAAIuD,KAAKH,MAAM,GAAGpD,GAClBJ,OAAM,UAAE2D,KAAKH,MAAM,GAAGxD,cAAhB,aAAE,EAAuB2D,KAAKD,UACpCzD,QAAO,UAAE0D,KAAKH,MAAM,GAAGvD,eAAhB,aAAE,EAAwB0D,KAAKD,WAE1C,MAEA,QACEC,KAAKtB,OAAS,GAIlB,OAAQsB,KAAKG,aACX,IAAK,KACHH,KAAKpF,QAAUoE,EAAQgB,KAAKH,MAAMjE,KAAI,SAACyE,EAAM/F,GAAP,cAAgB,CACpDgG,WAAYhG,EACZ8B,GAAIiE,EAAKjE,GACTC,OAAM,UAAEgE,EAAKhE,cAAP,aAAE,EAAc,EAAK0D,UAC3BzD,QAAO,UAAE+D,EAAK/D,eAAP,aAAE,EAAe,EAAKyD,eAEjC,MAEA,IAAK,KACHC,KAAKpF,QAAUoE,EAAQgB,KAAKH,MAAMjE,KAAI,SAACyE,EAAM/F,GAAP,cAAgB,CACpDgG,WAAYhG,EACZmC,GAAI4D,EAAK5D,GACTJ,OAAM,UAAEgE,EAAKhE,cAAP,aAAE,EAAc,EAAK0D,UAC3BzD,QAAO,UAAE+D,EAAK/D,eAAP,aAAE,EAAe,EAAKyD,eAEjC,MAEA,QACEC,KAAKpF,QAAU,GAInBoF,KAAKpB,eAAiBoB,KAAKpF,QAAQL,WAAU,SAAAgG,GAAG,OAAIA,EAAID,eA9D5D,uCAiEE,WACE,IAAIE,EACAC,EAEJ,OAAQT,KAAKF,MACX,IAAK,QACHU,EACE,sBAAM/E,UAAU,WAAhB,SACIuE,KAAKtB,OAAOtC,KAElBqE,EAAWT,KAAKpF,QAAQgB,KAAI,SAAC2E,EAAKjG,GAAN,OAC1B,sBAAKmB,UAAU,mBAAf,UACE,4BAAK8E,EAAI9D,WAESiE,IAAfH,EAAIlE,aAAwCqE,IAAhBH,EAAIjE,UAC/B,uBAAMb,UAAU,UAAhB,8DAE0B8E,EAAIlE,QAAU,KAFxC,oDAI0BkE,EAAIjE,SAAW,cAKnD,MAEA,IAAK,QACHkE,EACE,mBAAG/E,UAAU,UAAb,SACIuE,KAAKtB,OAAOjC,KAElBgE,EAAWT,KAAKpF,QAAQgB,KAAI,SAAC2E,EAAKjG,GAAN,OAC1B,sBAAKmB,UAAU,mBAAf,UACE8E,EAAInE,SAEYsE,IAAfH,EAAIlE,aAAwCqE,IAAhBH,EAAIjE,UAC/B,uBAAMb,UAAU,UAAhB,8DAE0B8E,EAAIlE,QAAU,KAFxC,oDAI0BkE,EAAIjE,SAAW,cAWnD,MAAO,CACLoC,OAAQ8B,EACR5F,QAAS6F,EACT7B,eAAgBoB,KAAKpB,kBAvH3B,wCA2HE,WACE,IAAI4B,EACAC,EAEJ,OAAQT,KAAKF,MACX,IAAK,QACHU,EACE,qBAAK/E,UAAU,uBAAf,SACIuE,KAAKtB,OAAOtC,KAElBqE,EAAWT,KAAKpF,QAAQgB,KAAI,SAAC2E,EAAKjG,GAAN,OAC1B,sBAAKmB,UAAU,cAAf,UACE,4BAAK8E,EAAI9D,WAESiE,IAAfH,EAAIlE,aAAwCqE,IAAhBH,EAAIjE,UAC/B,sBAAKb,UAAU,UAAf,gCAC6B8E,EAAIlE,QAAU,KACzC,uBAFF,uBAG8BkE,EAAIjE,SAAW,cAKvD,MAEA,IAAK,QACHkE,EACE,sBAAK/E,UAAU,cAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,4BAAKuE,KAAKtB,OAAOjC,aAGOiE,IAAvBV,KAAKtB,OAAOrC,aAAgDqE,IAAxBV,KAAKtB,OAAOpC,UAC/C,2DAC6B0D,KAAKtB,OAAOrC,QAAU,KACjD,uBAFF,uBAG8B2D,KAAKtB,OAAOpC,SAAW,WAI7DmE,EAAWT,KAAKpF,QAAQgB,KAAI,SAAC2E,EAAKjG,GAAN,OAC1B,qBAAKmB,UAAU,6BAAf,SACI8E,EAAInE,QASd,MAAO,CACLsC,OAAQ8B,EACR5F,QAAS6F,EACT7B,eAAgBoB,KAAKpB,kBAjL3B,uCAqLE,WACE,IAAI4B,EACAC,EAEJ,OAAQT,KAAKF,MACX,IAAK,QACHU,EACE,qBAAK/E,UAAU,uBAAf,SACIuE,KAAKtB,OAAOtC,KAElBqE,EAAWT,KAAKpF,QAAQgB,KAAI,SAAC2E,EAAKjG,GAAN,OAC1B,sBAAKmB,UAAU,mBAAf,UACI8E,EAAI9D,SAEYiE,IAAfH,EAAIlE,aAAwCqE,IAAhBH,EAAIjE,UAC/B,sBAAKb,UAAU,+BAAf,oCACc8E,EAAIlE,QAAU,KAC1B,uBAFF,0BAGckE,EAAIjE,SAAW,cAKvC,MAEA,IAAK,QACHkE,EACE,qBAAK/E,UAAU,uBAAf,SACIuE,KAAKtB,OAAOjC,KAElBgE,EAAWT,KAAKpF,QAAQgB,KAAI,SAAC2E,EAAKjG,GAAN,OAC1B,sBAAKmB,UAAU,cAAf,UACI8E,EAAInE,SAEasE,IAAfH,EAAIlE,aAAwCqE,IAAhBH,EAAIjE,UAChC,sBAAKb,UAAU,+BAAf,4CAC0B8E,EAAIlE,QAAU,KACtC,uBAFF,kCAG0BkE,EAAIjE,SAAW,cAWrD,MAAO,CACLoC,OAAQ8B,EACR5F,QAAS6F,EACT7B,eAAgBoB,KAAKpB,oBAzO3B,KCUe,SAAS+B,IAAY,IAAD,EACY9G,mBAAS,GADrB,mBAC1B+G,EAD0B,KACPC,EADO,OAEgBhH,mBAAS,GAFzB,mBAE1BiH,EAF0B,KAELC,EAFK,OAIJlH,mBAAS,SAJL,mBAI1BmH,EAJ0B,KAIfC,EAJe,OAKIpH,mBAAS,mBALb,mBAK1BqH,EAL0B,KAKXC,EALW,OAMQtH,mBAAS,GANjB,mBAM1BuH,EAN0B,KAMTC,EANS,OAOQxH,qBAPR,mBAO1BgD,EAP0B,KAOTC,EAPS,OAQgBjD,mBAAS,IARzB,mBAQ1B8C,EAR0B,KAQLC,EARK,OAUY/C,mBAAS,MAVrB,mBAU1ByH,EAV0B,KAUPC,EAVO,KAW3BtE,EAAcxD,IAyBpB,OAvBAS,qBAAU,WACR,GAAIyC,EAAoB0B,OAAS,EAAG,CAIlC,IAHA,IACIwB,EAAQ,CADCR,EAAY1C,IAGhBuC,EAAI,EAAGA,EAAIkC,EAAkB,EAAGlC,IACvCW,EAAMlF,KAAK0E,EAAY1C,EAAqBkD,IAG9C,IAAM2B,EAAgB,IAAI5B,EAAW,CAAEC,QAAOC,KAAMkB,EAAWjB,SAAUmB,IAAkBO,6BAE3FF,EAAgBC,MAEjB,CAACZ,EAAmBjE,EAAqByE,EAAiBJ,EAAWE,IAWtE,qCACE,cAAC1F,EAAA,EAAD,UACE,uEAEF,sBAAKC,UAAU,mCAAf,UACE,qBAAKA,UAAU,OAAf,SACE,eAACyB,EAAA,EAAD,CAAazB,UAAU,SAAvB,UACE,uBAAOA,UAAU,6BAAjB,kBACA,eAACuC,EAAA,EAAD,CACElD,MAAOkG,EACP9C,WAAS,EACTT,SAAU,SAACC,EAAO5C,GAA0B,OAAVA,GAAgBmG,EAAQnG,IAC1DsD,aAAW,aACX3C,UAAU,SALZ,UAOE,cAAC0C,EAAA,EAAD,CAAcrD,MAAM,QAAQsD,aAAW,gBAAgB3C,UAAU,SAAjE,gCAGA,cAAC0C,EAAA,EAAD,CAAcrD,MAAM,QAAQsD,aAAW,eAAe3C,UAAU,SAAhE,6BAON,qBAAKA,UAAU,OAAf,SACE,eAACyB,EAAA,EAAD,CAAazB,UAAU,SAAvB,UACE,uBAAOA,UAAU,6BAAjB,sBACA,eAACuC,EAAA,EAAD,CACElD,MAAOoG,EACPhD,WAAS,EACTT,SAAU,SAACC,EAAO5C,GAA0B,OAAVA,GAAgBqG,EAAYrG,IAC9DsD,aAAW,WACX3C,UAAU,SALZ,UAOE,cAAC0C,EAAA,EAAD,CAAcrD,MAAM,kBAAkBsD,aAAW,kBAAkB3C,UAAU,SAA7E,6BAGA,cAAC0C,EAAA,EAAD,CAAcrD,MAAM,SAASsD,aAAW,SAAS3C,UAAU,SAA3D,4BAON,qBAAKA,UAAU,QAAf,SACE,eAACyB,EAAA,EAAD,CAAazB,UAAU,SAAvB,UACE,uBAAOA,UAAU,6BAAjB,wBACA,eAACuC,EAAA,EAAD,CACElD,MAAOsG,EACPlD,WAAS,EACTT,SAAU,SAACC,EAAO5C,GAA0B,OAAVA,GAAgBuG,EAAcvG,IAChEsD,aAAW,aACX3C,UAAU,SALZ,UAOE,cAAC0C,EAAA,EAAD,CAAcrD,MAAO,EAAGsD,aAAW,OAAO3C,UAAU,SAApD,kBAGA,cAAC0C,EAAA,EAAD,CAAcrD,MAAO,EAAGsD,aAAW,SAAS3C,UAAU,SAAtD,oBAGA,cAAC0C,EAAA,EAAD,CAAcrD,MAAO,EAAGsD,aAAW,OAAO3C,UAAU,SAApD,0BAON,qBAAKA,UAAU,OAAf,SACE,eAACyB,EAAA,EAAD,CACEC,QAAQ,WACR1B,UAAU,SAFZ,UAIE,cAAC2B,EAAA,EAAD,CAAYC,GAAG,mBAAf,wBACA,cAACC,EAAA,EAAD,CACEC,QAAQ,mBACRC,aAAa,GACb1C,MAAQ+B,EACRpC,MAAM,aACNgD,SAAU,SAAAC,GACRZ,EAAcY,EAAMC,OAAO7C,OAC3B8B,EAAkBK,EAAYlD,KAAK2D,EAAMC,OAAO7C,SAPpD,SAWImC,EAAYnD,MAAMK,QAAO,SAACC,EAAKM,GAC7B,MAAM,GAAN,mBACKN,GADL,CAEE,cAACwD,EAAA,EAAD,UAAqClD,EAAMD,OAAtBC,EAAMD,OAC3BC,EAAME,QAAQgB,KAAI,SAACiC,EAAQC,GAAT,OAChB,cAACC,EAAA,EAAD,CAA4BjD,MAAQ+C,EAAO/C,MAA3C,SACI+C,EAAOpD,OADKqD,UAKnB,WAMX,qBAAKrC,UAAU,OAAf,SACE,sBAAKA,UAAU,+DAAf,oBACS,8BAAKmF,EAAL,MAA6BE,UAIhB,OAAtBQ,GACA,qBACE7F,UAAU,4CADZ,mDAOsB,OAAtB6F,GACE,qBAAK7F,UAAU,sBAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAAC8C,EAAD,CACEE,IAAM,MACN1E,KAAMuH,EACN9C,mBAjIhB,SAA4B8B,GAC1BO,EAAgBD,EAAoB,GAChCN,GACFS,EAAkBD,EAAsB,gB,uCCzCvC,SAASY,EAAT,GAIH,IAAD,IAHDC,aAGC,MAHO,GAGP,MAFDC,eAEC,MAFS,GAET,MADDnD,WACC,MADG,MACH,EACD,OACE,qBAAKhD,UAAU,wDAAf,SAEIkG,EAAM/F,KAAI,SAAC0C,EAAMuD,GAAa,IAAD,EACiBjC,EAAWkC,UAAUC,0BAA0BC,KAAK1D,GAAxFI,EADmB,EACnBA,OAAQ9D,EADW,EACXA,QAASgE,EADE,EACFA,eAEzB,OACE,sBAEEnD,UAAWK,IACT,wCACA,CACE,0BAA2B+F,EAC3B,gBAAiBA,EAAU,IAAM,EACjC,gBAAiBA,EAAU,IAAM,IAPvC,UAWE,qBACEpG,UAAWK,IACT,yDACA,CACE,WAAoB,QAAR2C,EACZ,WAAoB,QAARA,IALlB,SASIC,IAEJ,qBACEjD,UAAWK,IACT,8DACA,CACE,sCAA+C,QAAR2C,EACvC,sCAA+C,QAARA,IAL7C,SAUI7D,EAAQgB,KAAI,SAACiC,EAAQoE,GAAT,OACV,qBAEExG,UAAWK,IACT,yDACA,CACE,wBAAyBmG,GAAkB,QAARxD,EACnC,wBAAyBwD,GAAkB,QAARxD,EACnC,8BAA+BG,IAAmBqD,EAClD,0BAA2BL,EAAQC,KAAaI,GAAUrD,IAAmBqD,IARnF,SAYIpE,GAXGoE,UAjCRJ,QCAJ,SAASK,IAAW,IAAD,EACHrI,mBAAS,SADN,mBACzBmH,EADyB,KACdC,EADc,OAESpH,mBAAS,GAFlB,mBAEzBuH,EAFyB,KAERC,EAFQ,OAGqBxH,mBAAS,IAH9B,mBAGzBsI,EAHyB,KAGFC,EAHE,OAIuBvI,mBAAS,IAJhC,mBAIzBwI,EAJyB,KAIDC,EAJC,OAKuBzI,mBAAS,MALhC,mBAKzB0I,EALyB,KAKDC,EALC,OAOuB3I,mBAAS,IAPhC,mBAOzB4I,EAPyB,KAODC,EAPC,OAQa7I,mBAAS,MARtB,mBAQzByH,EARyB,KAQNC,EARM,OASD1H,mBAAS,IATR,mBASzB8I,EATyB,KASbC,EATa,OAUG/I,mBAAS,IAVZ,mBAUzBgJ,EAVyB,KAUXC,EAVW,OAYmBjJ,mBAAS,MAZ5B,oBAYzBkJ,GAZyB,MAYHC,GAZG,SAaiBnJ,mBAAS,GAb1B,qBAazBiH,GAbyB,MAaJC,GAbI,SAeDlH,oBAAS,GAfR,qBAezBoJ,GAfyB,MAebC,GAfa,SAgBHrJ,oBAAS,GAhBN,qBAgBzBsJ,GAhByB,MAgBdC,GAhBc,SAiBCvJ,oBAAS,GAjBV,qBAiBzBwJ,GAjByB,MAiBZC,GAjBY,MAmB1BrG,GAAcxD,IAgFpB,OAnEAS,qBAAU,WACR,GAAIiJ,GAAW,CAGb,IAFA,IAAII,EAAa,GAERrE,EAAI,EAAGA,EAAIqD,EAAwBrD,IAC1CqE,EAAW5I,KAAK0E,EAAYgD,EAAwBkB,IAGtDb,EAAqBa,GACrBP,GAAmB,MAEpB,CAACG,GAAkBZ,EAAwBF,IAG9CnI,qBAAU,WACR,GAAIiJ,GAAkD,CAIpD,IAHA,IACItD,EAAQ,CADC4C,EAAuBM,KAG3B7D,EAAI,EAAGA,EAAIkC,EAAkB,EAAGlC,IACvCW,EAAMlF,KAAK0E,EAAYgD,EAAwBxC,IAGjD,IAAM2D,EAAW,IAAI5D,EAAW,CAAEC,QAAOC,KAAMkB,EAAWjB,SAAU,WAC9D0D,EAAsBD,EAASE,4BAGrCnC,EAAgBkC,GAChBb,GAAS,SAAAe,GAAK,4BAAQA,GAAR,CAAeH,UAE9B,CAACT,GAA6BN,EAAwBrB,EAAiBiB,EAAwBrB,IAGlG9G,qBAAU,WACJmI,EAAuBhE,OAASkE,GAClCC,EAAqB,QAEtB,CAACH,EAA+BE,IA+BjC,qCACE,cAAC/G,EAAA,EAAD,UACE,sEAGA6H,IACE,qCACE,sBAAK5H,UAAU,wCAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,sBAAf,yBACA,sBAAKA,UAAU,uCAAf,UAAwDqF,GAAxD,MAAkF2B,EAAuBpE,aAE3G,cAACuF,EAAA,EAAD,CACEzG,QAAQ,WACR0G,MAAM,UACNpI,UAAU,SACVqI,QA9Bd,WACEZ,IAAS,GACTE,IAAQ,GACRE,IAAU,GAEV/B,EAAgB,MAChBqB,EAAS,IACTE,EAAW,IAEXE,GAAmB,MACnBjC,GAAkB,IAgBR,SAME,sBAAMtF,UAAU,UAAhB,4BAGJ,oBAAIA,UAAU,4BAAd,qBACA,sBAAKA,UAAU,oEAAf,UACE,0CAAc,4BAtGb,CACX,QAAS,sBACT,QAAS,uBAoGyBuF,QACxB,gDAAoB,4BAnGb,CACjB+C,EAAG,OACHC,EAAG,SACHC,EAAG,QAgG2C7C,QACpC,iDAEE,4BAEEe,EAAsBhI,QAAO,SAACC,EAAKC,GAEjC,OADAD,EAAIO,KAAKN,EAAKI,OACPL,IACN,IAAI8J,KAAK,WAIhB,wDAA4B,4BAAK3B,UAEnC,cAACb,EAAD,CACEjD,IAAM,MACNkD,MAAQgB,EACRf,QAAUiB,OAKhBM,IACE,sBAAK1H,UAAU,mCAAf,UACE,oBAAGA,UAAU,4BAAb,yBAAuDsH,GAAuB,KAEtD,OAAtBzB,GACE,cAAC/C,EAAD,CACEE,IAAM,MACN1E,KAAMuH,EACN9C,mBAnFhB,SAA4B8B,EAAWhG,GACrCwI,GAAW,SAAAa,GAAK,4BAAQA,GAAR,CAAerJ,OAE3BgG,GACFS,GAAkBD,GAAsB,GAGtCiC,GAAuBN,EAAuBpE,OAAS,EACzD2E,GAAmBD,GAAuB,IAE1CK,IAAQ,GACRE,IAAU,UA8ERL,IACE,sBAAKxH,UAAU,mCAAf,UACE,qBAAKA,UAAU,OAAf,SACE,eAACyB,EAAA,EAAD,CAAazB,UAAU,SAAvB,UACE,uBAAOA,UAAU,6BAAjB,kBACA,eAACuC,EAAA,EAAD,CACElD,MAAOkG,EACP9C,WAAS,EACTT,SAAU,SAACC,EAAO5C,GAAR,OAAkBmG,EAAQnG,IACpCsD,aAAW,aACX3C,UAAU,SALZ,UAOE,cAAC0C,EAAA,EAAD,CAAcrD,MAAM,QAAQsD,aAAW,gBAAgB3C,UAAU,SAAjE,gCAGA,cAAC0C,EAAA,EAAD,CAAcrD,MAAM,QAAQsD,aAAW,eAAe3C,UAAU,SAAhE,6BAON,qBAAKA,UAAU,QAAf,SACE,eAACyB,EAAA,EAAD,CAAazB,UAAU,SAAvB,UACE,uBAAOA,UAAU,6BAAjB,wBACA,eAACuC,EAAA,EAAD,CACElD,MAAOsG,EACPlD,WAAS,EACTT,SAAU,SAACC,EAAO5C,GAAR,OAAkBuG,EAAcvG,IAC1CsD,aAAW,aACX3C,UAAU,SALZ,UAOE,cAAC0C,EAAA,EAAD,CAAcrD,MAAO,EAAGsD,aAAW,OAAO3C,UAAU,SAApD,kBAGA,cAAC0C,EAAA,EAAD,CAAcrD,MAAO,EAAGsD,aAAW,SAAS3C,UAAU,SAAtD,oBAGA,cAAC0C,EAAA,EAAD,CAAcrD,MAAO,EAAGsD,aAAW,OAAO3C,UAAU,SAApD,0BAON,qBAAKA,UAAU,OAAf,SACE,cAACyB,EAAA,EAAD,CACEC,QAAQ,WACR1B,UAAU,SAFZ,SAIE,cAAC0I,EAAA,EAAD,CACEC,UAAQ,EACRC,sBAAoB,EACpBC,eAAa,EACb1J,QACEqC,GAAYnD,MAAMK,QAAO,SAACC,EAAKM,GAAN,4BACpBN,GADoB,YAEpBM,EAAME,QAAQgB,KACf,SAACiC,EAAQvD,GAAT,MAAkB,CAChBG,MAAOoD,EAAOpD,MAAOK,MAAO+C,EAAO/C,MAAOJ,MAAOA,EAAMD,cAGzD,IAEN8J,QAAU,SAAA1G,GAAM,OAAIA,EAAOnD,OAC3B8J,eAAiB,SAAA3G,GAAM,OAAIA,EAAOpD,OAClCgK,kBAAoB,SAAC5G,EAAQ/C,GAAT,OAAmB+C,EAAO/C,QAAUA,EAAMA,OAC9D4J,YAAc,SAAAC,GAAM,OAAI,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBlK,MAAM,kBACrDK,MAAQqH,EACR1E,SAAU,SAACC,EAAO5C,GAChBsH,EAAoBtH,GACpBwH,EACExH,EAAMX,QAAO,SAACC,EAAKC,GACjB,OAAOD,EAAIyK,OAAO5H,GAAYlD,KAAKM,EAAKS,UACvC,YAOb,qBAAKW,UAAU,OAAf,SACE,eAACyB,EAAA,EAAD,CAAazB,UAAU,SAAvB,UACE,uBAAOA,UAAU,6BAAjB,iCACA,eAACuC,EAAA,EAAD,CACElD,MAAOyH,EACPrE,WAAS,EACTT,SAAU,SAACC,EAAO5C,GAAR,OAAkB0H,EAAqB1H,IACjDsD,aAAW,sBACX3C,UAAU,SALZ,UAOE,cAAC0C,EAAA,EAAD,CAAcrD,MAAO,EAAGsD,aAAW,IAAI3C,UAAU,SAASqJ,SAAWzC,EAAuBhE,OAAS,EAArG,SACE,mBAAG5C,UAAU,UAAb,iBAEF,cAAC0C,EAAA,EAAD,CAAcrD,MAAO,GAAIsD,aAAW,KAAK3C,UAAU,SAASqJ,SAAWzC,EAAuBhE,OAAS,GAAvG,SACA,mBAAG5C,UAAU,UAAb,kBAEA,cAAC0C,EAAA,EAAD,CAAcrD,MAAO,GAAIsD,aAAW,KAAK3C,UAAU,SAASqJ,SAAWzC,EAAuBhE,OAAS,GAAvG,SACA,mBAAG5C,UAAU,UAAb,kBAEA,cAAC0C,EAAA,EAAD,CAAcrD,MAAO,GAAIsD,aAAW,KAAK3C,UAAU,SAASqJ,SAAWzC,EAAuBhE,OAAS,GAAvG,SACA,mBAAG5C,UAAU,UAAb,0BAMN,cAACmI,EAAA,EAAD,CACEzG,QAAQ,YACR4H,kBAAgB,EAChBlB,MAAM,YACNmB,KAAK,QACLvJ,UAAU,SACVqI,QAAS,WACPZ,IAAS,GACTE,IAAQ,IAEV0B,SAA4C,IAAjC3C,EAAsB9D,QAA2C,OAA3BkE,EAVnD,iC,oBCrQN0C,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAASC,KAEXC,UAAW,CACTC,gBAAiB,CACfC,KAAM,CACJ3B,MAAOwB,IAAK,KACZI,gBAAiBJ,IAAK,IACtB,aAAc,CACZxB,MAAO,QACP4B,gBAAiBJ,IAAK,KACtB,UAAW,CACTI,gBAAiBJ,IAAK,OAG1B,UAAW,CACTI,gBAAiBJ,IAAK,OAG1BK,SAAU,OAMhB,SAASC,IACP,IAAMC,EAAWC,cAEjB,OACE,wBAAQpK,UAAU,mDAAlB,SACE,qBAAKA,UAAU,yBAAf,SACE,qBAAKA,UAAU,SAAf,SACE,qBAAIA,UAAU,uBAAd,UACE,oBAAIA,UAAU,OAAd,SACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAWK,IACT,WACA,CAAC,eAAsC,MAAtB8J,EAASE,WAJ9B,SAOE,cAAC,IAAD,CAAiBC,KAAMC,UAG3B,oBAAIvK,UAAU,OAAd,SACE,cAAC,IAAD,CACEC,GAAG,YACHD,UAAWK,IACT,WACA,CAAC,eAAsC,cAAtB8J,EAASE,WAJ9B,SAOE,cAAC,IAAD,CAAiBC,KAAME,UAG3B,oBAAIxK,UAAU,OAAd,SACE,cAAC,IAAD,CACEC,GAAG,YACHD,UAAWK,IACT,WACA,CAAC,eAAsC,cAAtB8J,EAASE,WAJ9B,SAOE,cAAC,IAAD,CAAiBC,KAAMG,UAG3B,oBAAIzK,UAAU,OAAd,SACE,cAAC,IAAD,CACEC,GAAG,WACHD,UAAWK,IACT,WACA,CAAC,eAAsC,aAAtB8J,EAASE,WAJ9B,SAOE,cAAC,IAAD,CAAiBC,KAAMI,mBA6CxBC,MAnCf,WACE,OACE,cAAC,EAAD,UACE,eAACC,EAAA,EAAD,CAAepB,MAAOA,EAAtB,UACE,cAACzJ,EAAA,EAAD,UACE,4DAEF,cAAC,IAAD,UACE,sBAAKC,UAAU,gBAAf,UACE,sBAAMA,UAAU,2BAAhB,SACE,qBAAKA,UAAU,yBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6K,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC7J,EAAD,MAEF,cAAC,IAAD,CAAO4J,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC5F,EAAD,MAEF,cAAC,IAAD,CAAO2F,OAAK,EAACC,KAAK,WAAlB,SACE,cAACrE,EAAD,aAKR,cAACyD,EAAD,eC1HGa,I,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,GAAgBc,QAAQC,M","file":"static/js/main.bcd7911b.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\n\nimport _hiragana from './json/hiragana.json'\nimport _katakana from './json/katakana.json'\nimport _kanji_numbers from './json/kanji-numbers.json'\nimport _kanji_study from './json/kanji-study.json'\nimport _kanji_calendar from './json/kanji-calendar.json'\n\nconst CollectionsContext = React.createContext()\n\nfunction processData(data = []) {\n  return data.reduce((acc, item) => {\n    const idx = acc.index.findIndex(f => f.label === item.group)\n\n    if (idx === -1) {\n      acc.index.push({ label: item.group, options: [{ label: item.name , value: item.code }] })\n    } else {\n      acc.index[idx].options.push({ label: item.name , value: item.code })\n    }\n\n    acc.data[item.code] = item.data\n\n    return acc\n  }, {index: [], data: {}})\n}\n\nexport const useCollections = () => useContext(CollectionsContext)\n\nexport const CollectionsProvider = ({ children }) => {\n  const [stateCollections, setCollections] = useState({ index: [], data: {} })\n\n  useEffect(() => {\n    setCollections(processData([\n      _hiragana,\n      _katakana,\n      _kanji_numbers,\n      _kanji_study,\n      _kanji_calendar\n    ]))\n  }, [])\n\n  return (\n    <CollectionsContext.Provider value={stateCollections}>\n      { children }\n    </CollectionsContext.Provider>\n  )\n}","import { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport cn from 'classnames'\n\nfunction Home() {\n  const SECTIONS = [\n    {\n      to: '/learning',\n      text: 'Start learn kana and kanji'\n    },\n    {\n      to: '/training',\n      text: 'Practice'\n    },\n    {\n      to: '/testing',\n      text: 'Test your knowledge'\n    }\n  ]\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Home page</title>\n      </Helmet>\n      <h1 className='mb-8 text-3xl md:text-7xl text-center'>\n        <span className='bg-gray-700 text-yellow-400'>\n          &nbsp;正解 (Seikai)&nbsp;\n        </span>\n      </h1>\n      <p className='mb-20 text-center'>\n        The simple and fast web application for learning and practicing your japanese language!\n      </p>\n      <div className='flex flex-col md:flex-row items-stretch w-full border border-gray-800'>\n        {\n          SECTIONS.map((section, idx) => (\n            <Link\n              key={idx}\n              to={section.to}\n              className={cn(\n                'flex justify-center items-center w-full py-6 bg-yellow-400 text-xl text-center',\n                {\n                  'border-t md:border-l md:border-t-0 border-gray-800': idx \n                }\n              )}\n            >\n              {section.text}\n            </Link>\n          ))\n        }\n      </div>\n    </>\n  )\n}\n\nexport default Home","import cn from 'classnames'\n\nfunction LearningCard({\n  data,\n  blind,  \n}) {\n  return (\n    <div\n      className='group flex flex-col w-full cursor-pointer overflow-hidden'\n    >\n      <div\n        className='flex justify-center items-center text-5xl bg-blue-700 text-white'\n        style={{ willChange: 'background-color', height: '90px' }}\n      >\n        <span className={cn(\n          'font-thin group-hover:opacity-100 transition-all duration-300',\n          {\n            'opacity-0': blind\n          }\n        )}>\n          { data.jp }\n        </span>\n      </div>\n      {\n        (data.onyomi || data.kunyomi) &&\n          <div\n            className='flex justify-center items-stretch border-t border-white bg-gray-100 text-blue-800'\n            style={{ willChange: 'background-color', height: '120px' }}\n          >\n            <div className='w-1/2 p-2 border-r border-white'>\n              <p className='mb-2 text-sm'>Kunyomi:</p>\n              <p>{ data.kunyomi.native || <>&mdash;</> }</p>\n              <p>{ data.kunyomi.transliteration || <>&mdash;</> }</p>\n            </div>\n            <div className='w-1/2 p-2'>\n              <p className='mb-2 text-sm'>Onyomi:</p>\n              <p>{ data.onyomi.native || <>&mdash;</> }</p>\n              <p>{ data.onyomi.transliteration || <>&mdash;</> }</p>\n            </div>\n          </div>\n      }\n      <div\n        className='flex justify-center items-center border-t border-white bg-gray-200 text-blue-800'\n        style={{ willChange: 'background-color', height: '40px' }}\n      >\n        <b>{ data.en }</b>\n      </div>\n    </div>\n  )\n}\n\nexport { LearningCard }","import { useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport {\n  Select, MenuItem, ListSubheader, InputLabel, FormControl,\n  ToggleButtonGroup, ToggleButton\n} from '@material-ui/core'\n\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { LearningCard } from '../cards/LearningCard'\n\nexport default function Learning() {\n  const [stateCollectionData, setCollectionData] = useState([])\n  const [stateCollection, setCollection] = useState('')\n  const [stateKanaAndKanjiMode, setKanaAndKanjiMode] = useState('visible')\n  const collections = useCollections()\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Learning</title>\n      </Helmet>\n      <div className='w-full md:w-1/3 mx-auto mb-8'>\n        <div className='mb-4'>\n          <FormControl\n            variant='outlined'\n            className='w-full'\n          >\n            <InputLabel id='collection-label'>Collection</InputLabel>\n            <Select\n              labelId='collection-label'\n              defaultValue=''\n              value={ stateCollection }\n              label='Collection'\n              onChange={event => {\n                setCollection(event.target.value)\n                setCollectionData(collections.data[event.target.value])\n              }}\n            >\n              {\n                collections.index.reduce((acc, group) => {\n                  return [\n                    ...acc,\n                    <ListSubheader key={ group.label }>{ group.label }</ListSubheader>,\n                    group.options.map((option, optionIdx) => (\n                      <MenuItem key={ optionIdx } value={ option.value }>\n                        { option.label }\n                      </MenuItem>\n                    ))\n                  ]\n                }, [])\n              }\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className='w-full'>\n            <label\n              id='kana-and-kanji-mode-label'\n              className='mb-1 text-sm text-gray-500'\n            >\n              Kana and Kanji mode\n            </label>\n            <ToggleButtonGroup\n              aria-labelledby='kana-and-kanji-mode-label'\n              value={stateKanaAndKanjiMode}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setKanaAndKanjiMode(value) }}\n              className='w-full'\n            >\n              <ToggleButton value='visible' aria-label='visible mode' className='w-full'>\n                Visible\n              </ToggleButton>\n              <ToggleButton value='hidden' aria-label='hidden mode' className='w-full'>\n                Hidden\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n      </div>\n      {\n        stateCollectionData.length === 0 &&\n          <div\n            className='text-3xl italic text-center text-gray-400'\n          >\n            Please, select collection to learn\n          </div>\n      }\n      <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4'>\n        {\n          stateCollectionData.map((card, idx) => (\n            <LearningCard\n              key={ idx }\n              data={ card }\n              blind={ stateKanaAndKanjiMode === 'hidden' }\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}","import cn from 'classnames'\n\nfunction TrainingCard({\n  data = null,\n  checkAnswerHandler,\n  dir = 'row'\n}) {\n  if (data === null) {\n    return <div className='w-full text-center'>No data provided for card</div>\n  }\n\n  return (\n    <div\n      className='border border-white w-full rounded-xl overflow-hidden'\n      style={{ height: '500px' }}\n    >\n      <div className={cn(\n        'flex justify-center items-center bg-purple-100 text-purple-800',\n        {\n          'h-2/3': dir === 'row',\n          'h-1/3': dir === 'col'\n        }\n      )}>\n        { data.riddle }\n      </div>\n      <div className={cn(\n        'grid border-t border-white',\n        {\n          'grid-flow-col auto-cols-fr h-1/3': dir === 'row',\n          'grid-flow-row auto-rows-fr h-2/3': dir === 'col'\n        }\n      )}>\n        {\n          data.options.map((option, idx) => (\n            <div\n              key={ Math.random().toString() }\n              className={cn(\n                'flex justify-center items-center bg-indigo-100 hover:bg-indigo-200 text-indigo-900 cursor-pointer transition-all duration-300',\n                { 'border-l border-white': idx > 0 && dir === 'row' },\n                { 'border-t border-white': idx > 0 && dir === 'col' }\n              )}\n              onMouseUp={() => checkAnswerHandler(idx === data.indexOfCorrect, idx)}\n            >\n              { option }\n            </div>    \n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport { TrainingCard }","// https://javascript.info/task/shuffle\nexport function shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array\n}\n\nexport function pickElement(arr, exclude) {\n  if (arr.length === 0) return null\n\n  if (!Array.isArray(exclude)) {\n    return arr[Math.floor(Math.random() * arr.length)]\n  } else {\n    const p = arr[Math.floor(Math.random() * arr.length)]\n\n    if (exclude.indexOf(p) === -1) {\n      return p\n    } else {\n      return pickElement(arr, exclude)\n    }\n  }\n}","import { shuffle } from './array'\n\nexport class CreateCard {\n  constructor({ picks, mode, spelling }) {\n    this.picks = picks\n    this.mode = mode\n    this.spelling = spelling\n    this.modeRiddle = mode.split('-')[0]\n    this.modeOptions = mode.split('-')[1]\n\n    this.riddle = {}\n    this.options = []\n    this.indexOfCorrect = -1\n\n    this.createData()\n  }\n\n  createData() {\n    switch (this.modeRiddle) {\n      case 'jp':\n        this.riddle = {\n          jp: this.picks[0].jp,\n          onyomi: this.picks[0].onyomi?.[this.spelling],\n          kunyomi: this.picks[0].kunyomi?.[this.spelling]\n        }\n      break\n\n      case 'en':\n        this.riddle = {\n          en: this.picks[0].en,\n          onyomi: this.picks[0].onyomi?.[this.spelling],\n          kunyomi: this.picks[0].kunyomi?.[this.spelling]\n        }\n      break\n\n      default: \n        this.riddle = {}\n      break\n    }\n\n    switch (this.modeOptions) {\n      case 'jp':\n        this.options = shuffle(this.picks.map((pick, idx) => ({\n          isCorrect: !idx,\n          jp: pick.jp,\n          onyomi: pick.onyomi?.[this.spelling],\n          kunyomi: pick.kunyomi?.[this.spelling]\n        })))\n      break\n\n      case 'en':\n        this.options = shuffle(this.picks.map((pick, idx) => ({\n          isCorrect: !idx,\n          en: pick.en,\n          onyomi: pick.onyomi?.[this.spelling],\n          kunyomi: pick.kunyomi?.[this.spelling]\n        })))\n      break\n\n      default:\n        this.options = []\n      break\n    }\n\n    this.indexOfCorrect = this.options.findIndex(opt => opt.isCorrect)\n  }\n\n  exportResultsCardElements() {\n    let $riddle\n    let $options\n\n    switch (this.mode) {\n      case 'jp-en':\n        $riddle = \n          <span className='text-3xl'>\n            { this.riddle.jp }\n          </span>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-2 py-1'>\n            <b>{ opt.en }</b>\n            {\n              (opt.onyomi !== undefined || opt.kunyomi !== undefined) &&\n                <span className='text-sm'>\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\n                  音読み:&nbsp;&nbsp;&nbsp;{ opt.onyomi || null }\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\n                  訓読み:&nbsp;&nbsp;&nbsp;{ opt.kunyomi || null }\n                </span>\n            }\n          </div>\n        ))\n      break\n      \n      case 'en-jp':\n        $riddle =\n          <b className='text-xl'>\n            { this.riddle.en }\n          </b>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-2 py-1'>\n          { opt.jp }\n          {\n            (opt.onyomi !== undefined || opt.kunyomi !== undefined) &&\n              <span className='text-sm'>\n                &nbsp;&nbsp;|&nbsp;&nbsp;\n                音読み:&nbsp;&nbsp;&nbsp;{ opt.onyomi || null }\n                &nbsp;&nbsp;|&nbsp;&nbsp;\n                訓読み:&nbsp;&nbsp;&nbsp;{ opt.kunyomi || null }\n              </span>\n          }\n        </div>\n        ))\n      break\n      \n      default:\n      break\n    }\n\n    return { \n      riddle: $riddle,\n      options: $options,\n      indexOfCorrect: this.indexOfCorrect\n    }\n  }\n\n  exportTrainingCardElements() {\n    let $riddle\n    let $options\n\n    switch (this.mode) {\n      case 'jp-en':\n        $riddle =\n          <div className='text-5xl text-center'>\n            { this.riddle.jp }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-4'>\n            <b>{ opt.en }</b>\n            {\n              (opt.onyomi !== undefined || opt.kunyomi !== undefined) &&\n                <div className='text-sm'>\n                  Onyomi:&nbsp;&nbsp;&nbsp;{ opt.onyomi || null }\n                  <br/>\n                  Kunyomi:&nbsp;&nbsp;&nbsp;{ opt.kunyomi || null }\n                </div>\n            }\n          </div>\n        ))\n      break\n\n      case 'en-jp':\n        $riddle =\n          <div className='w-full px-4'>\n            <div className='mb-2 text-2xl text-center'>\n              <b>{ this.riddle.en }</b>\n            </div>\n            {\n              (this.riddle.onyomi !== undefined || this.riddle.kunyomi !== undefined) &&\n                <>\n                  Onyomi:&nbsp;&nbsp;&nbsp;{ this.riddle.onyomi || null }\n                  <br/>\n                  Kunyomi:&nbsp;&nbsp;&nbsp;{ this.riddle.kunyomi || null }\n                </>\n            }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='flex items-center text-4xl'>\n            { opt.jp }\n          </div>\n        ))\n      break\n\n      default:\n      break\n    }\n    \n    return { \n      riddle: $riddle,\n      options: $options,\n      indexOfCorrect: this.indexOfCorrect\n    }\n  }\n\n  exportTestingCardElements() {\n    let $riddle\n    let $options\n\n    switch (this.mode) {\n      case 'jp-en':\n        $riddle =\n          <div className='text-5xl text-center'>\n            { this.riddle.jp }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-4 py-1'>\n            { opt.en }\n            {\n              (opt.onyomi !== undefined || opt.kunyomi !== undefined) &&\n                <div className='w-full border-t border-white'>\n                  音読み:&nbsp;{ opt.onyomi || null }\n                  <br/>\n                  訓読み:&nbsp;{ opt.kunyomi || null }\n                </div>\n            }\n          </div>\n        ))\n      break\n\n      case 'en-jp':\n        $riddle =\n          <div className='text-3xl text-center'>\n            { this.riddle.en }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-8'>\n            { opt.jp }\n            {\n              ( opt.onyomi !== undefined || opt.kunyomi !== undefined) &&\n                <div className='w-full border-t border-white'>\n                  音読み:&nbsp;&nbsp;&nbsp;{ opt.onyomi || null }\n                  <br/>\n                  訓読み:&nbsp;&nbsp;&nbsp;{ opt.kunyomi || null }\n                </div>\n            }\n          </div>\n        ))\n      break\n\n      default:\n      break\n    }\n    \n    return { \n      riddle: $riddle,\n      options: $options,\n      indexOfCorrect: this.indexOfCorrect\n    }\n  }\n}","import { useEffect, useState } from 'react'\nimport {\n  Select, MenuItem, ListSubheader, InputLabel, FormControl,\n  ToggleButtonGroup, ToggleButton\n} from '@material-ui/core'\nimport { Helmet } from 'react-helmet'\n\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { TrainingCard } from '../cards/TrainingCard'\nimport { pickElement } from '../helpers/array'\nimport { CreateCard } from '../helpers/card'\n\nexport default function Training() {\n  const [stateTotalAnswers, setTotalAnswers] = useState(0)\n  const [stateCorrectAnswers, setCorrectAnswers] = useState(0)\n\n  const [stateMode, setMode] = useState('jp-en')\n  const [stateSpelling, setSpelling] = useState('transliteration')\n  const [stateDifficulty, setDifficulty] = useState(2)\n  const [stateCollection, setCollection] = useState()\n  const [stateCollectionData, setCollectionData] = useState([])\n  \n  const [stateCardElements, setCardElements] = useState(null)\n  const collections = useCollections()\n  \n  useEffect(() => {\n    if (stateCollectionData.length > 0) {\n      const pick = pickElement(stateCollectionData)\n      let picks = [pick]\n  \n      for (let i = 0; i < stateDifficulty - 1; i++) {\n        picks.push(pickElement(stateCollectionData, picks));\n      }\n\n      const cardElements = (new CreateCard({ picks, mode: stateMode, spelling: stateSpelling })).exportTrainingCardElements()\n\n      setCardElements(cardElements)\n    }\n  }, [stateTotalAnswers, stateCollectionData, stateDifficulty, stateMode, stateSpelling])\n\n\n  function checkAnswerHandler(isCorrect) {\n    setTotalAnswers(stateTotalAnswers + 1)\n    if (isCorrect) {\n      setCorrectAnswers(stateCorrectAnswers + 1)\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Training</title>\n      </Helmet>\n      <div className='w-full md:w-1/2 lg:w-1/3 mx-auto'>\n        <div className='mb-4'>\n          <FormControl className='w-full'>\n            <label className='mb-1 text-sm text-gray-500'>Mode</label>\n            <ToggleButtonGroup\n              value={stateMode}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setMode(value) }}\n              aria-label='difficulty'\n              className='w-full'\n            >\n              <ToggleButton value='jp-en' aria-label='japanese mode' className='w-full'>\n                日本語\n              </ToggleButton>\n              <ToggleButton value='en-jp' aria-label='english mode' className='w-full'>\n                English\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n\n        <div className='mb-4'>\n          <FormControl className='w-full'>\n            <label className='mb-1 text-sm text-gray-500'>Spelling</label>\n            <ToggleButtonGroup\n              value={stateSpelling}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setSpelling(value) }}\n              aria-label='spelling'\n              className='w-full'\n            >\n              <ToggleButton value='transliteration' aria-label='transliteration' className='w-full'>\n                Transliteration\n              </ToggleButton>\n              <ToggleButton value='native' aria-label='native' className='w-full'>\n                Native\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n\n        <div className='mb-10'>\n          <FormControl className='w-full'>\n            <label className='mb-1 text-sm text-gray-500'>Difficulty</label>\n            <ToggleButtonGroup\n              value={stateDifficulty}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setDifficulty(value) }}\n              aria-label='difficulty'\n              className='w-full'\n            >\n              <ToggleButton value={2} aria-label='easy' className='w-full'>\n                Easy\n              </ToggleButton>\n              <ToggleButton value={3} aria-label='medium' className='w-full'>\n                Medium\n              </ToggleButton>\n              <ToggleButton value={4} aria-label='hard' className='w-full'>\n                Hard\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n\n        <div className='mb-8'>\n          <FormControl\n            variant='outlined'\n            className='w-full'\n          >\n            <InputLabel id='collection-label'>Collection</InputLabel>\n            <Select\n              labelId='collection-label'\n              defaultValue=''\n              value={ stateCollection }\n              label='Collection'\n              onChange={event => {\n                setCollection(event.target.value)\n                setCollectionData(collections.data[event.target.value])\n              }}\n            >\n              {\n                collections.index.reduce((acc, group) => {\n                  return [\n                    ...acc,\n                    <ListSubheader key={ group.label }>{ group.label }</ListSubheader>,\n                    group.options.map((option, optionIdx) => (\n                      <MenuItem key={ optionIdx } value={ option.value }>\n                        { option.label }\n                      </MenuItem>\n                    ))\n                  ]\n                }, [])\n              }\n            </Select>\n          </FormControl>\n        </div>\n        \n        <div className='mb-8'>\n          <div className='table mx-auto px-2 py-1 bg-blue-100 rounded-md text-blue-700'>\n            Score: <b>{ stateTotalAnswers } / { stateCorrectAnswers }</b>\n          </div>\n        </div>\n        {\n          stateCardElements === null &&\n          <div\n            className='text-3xl italic text-center text-gray-400'\n          >\n            Please, select collection to practice\n          </div>\n        }\n        {\n          stateCardElements !== null &&\n            <div className='flex justify-center'>\n              <div className='w-full'>\n                <TrainingCard\n                  dir={ 'col'/* stateMode === 'jp-en' ? 'col' : 'row' */ }\n                  data={stateCardElements}\n                  checkAnswerHandler={checkAnswerHandler}\n                />\n              </div>\n            </div>\n        }\n      </div>\n    </>\n  )\n}","import cn from 'classnames'\nimport { CreateCard } from '../helpers/card'\n\nexport function ResultsTable({\n  cards = [],\n  answers = [],\n  dir='row'\n}) {\n  return (\n    <div className='w-full border border-white rounded-xl overflow-hidden'>\n      {\n        cards.map((card, cardIdx) => {\n          const { riddle, options, indexOfCorrect } = CreateCard.prototype.exportResultsCardElements.call(card)\n\n          return (\n            <div\n              key={cardIdx}\n              className={cn(\n                'flex flex-wrap w-full text-indigo-900',\n                {\n                  'border-t-4 border-white': cardIdx,\n                  'bg-indigo-100': cardIdx % 2 === 0,\n                  'bg-indigo-200': cardIdx % 2 === 1\n                }\n              )}\n            >\n              <div\n                className={cn(\n                  'flex justify-center items-center w-full h-20 md:h-auto',\n                  {\n                    'md:w-1/2': dir === 'row',\n                    'md:w-1/3': dir === 'col',\n                  }\n                )}\n              >\n                { riddle }\n              </div>\n              <div\n                className={cn(\n                  'grid w-full border-t md:border-t-0 md:border-l border-white',\n                  {\n                    'grid-flow-col auto-cols-fr md:w-1/2': dir === 'row',\n                    'grid-flow-row auto-rows-fr md:w-2/3': dir === 'col'\n                  }\n                )}\n              >\n                {\n                  options.map((option, optIdx) => (\n                    <div\n                      key={optIdx}\n                      className={cn(\n                        'flex justify-center items-center w-full h-20 md:h-auto',\n                        {\n                          'border-l border-white': optIdx && dir === 'row',\n                          'border-t border-white': optIdx && dir === 'col',\n                          'bg-green-200 text-green-700': indexOfCorrect === optIdx,\n                          'bg-red-200 text-red-700': answers[cardIdx] === optIdx && indexOfCorrect !== optIdx\n                        },\n                      )}\n                    >\n                      { option }\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}","import { useEffect, useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport {\n  Autocomplete, TextField,\n  FormControl,\n  ToggleButtonGroup, ToggleButton,\n  Button\n} from '@material-ui/core'\n// import cn from 'classnames'\n\nimport { TrainingCard } from '../cards/TrainingCard'\nimport { ResultsTable } from '../components/ResultsTable'\nimport { pickElement } from '../helpers/array'\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { CreateCard } from '../helpers/card'\n\nexport default function Testing() {\n  const [stateMode, setMode] = useState('jp-en')\n  const [stateDifficulty, setDifficulty] = useState(2)\n  const [stateCollectionsValue, setCollectionsValue] = useState([])\n  const [stateGeneralCollection, setGeneralCollection] = useState([])\n  const [stateNumberOfQuestions, setNumberOfQuestions] = useState(null)\n  \n  const [stateTestingCollection, setTestingCollection] = useState([])\n  const [stateCardElements, setCardElements] = useState(null)\n  const [stateCards, setCards] = useState([])\n  const [stateAnswers, setAnswers] = useState([])\n  \n  const [stateCurrentQuestion, setCurrentQuestion] = useState(null)\n  const [stateCorrectAnswers, setCorrectAnswers] = useState(0)\n  \n  const [stateSetup, setSetup] = useState(true)\n  const [stateTest, setTest] = useState(false)\n  const [stateResult, setResult] = useState(false)\n\n  const collections = useCollections()\n\n  const mode = {\n    'jp-en': 'Japanese to English',\n    'en-jp': 'English to Japanese',\n  }\n  const difficulty = {\n    2: 'Easy',\n    3: 'Medium',\n    4: 'Hard',\n  }\n\n  /* Generate testing collection */\n  useEffect(() => {\n    if (stateTest) {\n      let collection = []\n  \n      for (let i = 0; i < stateNumberOfQuestions; i++) {\n        collection.push(pickElement(stateGeneralCollection, collection))\n      }\n\n      setTestingCollection(collection)\n      setCurrentQuestion(0)\n    }\n  }, [stateTest /*  */, stateNumberOfQuestions, stateGeneralCollection])\n\n  /* Generate question card */\n  useEffect(() => {\n    if (stateTest /* && stateCurrentQuestion !== null */) {\n      const pick = stateTestingCollection[stateCurrentQuestion]\n      let picks = [pick]\n  \n      for (let i = 0; i < stateDifficulty - 1; i++) {\n        picks.push(pickElement(stateGeneralCollection, picks));\n      }\n\n      const cardData = new CreateCard({ picks, mode: stateMode, spelling: 'native' })\n      const testingCardElements = cardData.exportTestingCardElements()\n      // const resultsCardElements = cardData.exportResultsCardElements()\n  \n      setCardElements(testingCardElements)\n      setCards(state => [...state, cardData])\n    }\n  }, [stateCurrentQuestion /*  */, stateTestingCollection, stateDifficulty, stateGeneralCollection, stateMode/* , stateTest */])\n\n  /* Validate number of question */\n  useEffect(() => {\n    if (stateGeneralCollection.length < stateNumberOfQuestions) {\n      setNumberOfQuestions(null)\n    }\n  }, [stateGeneralCollection /*  */, stateNumberOfQuestions])\n\n  function checkAnswerHandler(isCorrect, idx) {\n    setAnswers(state => [...state, idx])\n    \n    if (isCorrect) {\n      setCorrectAnswers(stateCorrectAnswers + 1)\n    }\n    \n    if (stateCurrentQuestion < stateTestingCollection.length - 1) {\n      setCurrentQuestion(stateCurrentQuestion + 1)\n    } else {\n      setTest(false)\n      setResult(true)\n    }\n  }\n\n  function resetHandler() {\n    setSetup(true)\n    setTest(false)\n    setResult(false)\n\n    setCardElements(null)\n    setCards([])\n    setAnswers([])\n    \n    setCurrentQuestion(null)\n    setCorrectAnswers(0)\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Testing</title>\n      </Helmet>\n      {\n        stateResult &&\n          <>\n            <div className='w-full md:w-1/2 lg:w-1/3 mx-auto mb-8'>\n              <div className='mb-8'>\n                <div className='text-center text-xl'>Your score:</div>\n                <div className='text-center text-6xl text-indigo-600'>{ stateCorrectAnswers } / { stateTestingCollection.length }</div>\n              </div>\n              <Button\n                variant='outlined'\n                color='primary'\n                className='w-full'\n                onClick={resetHandler}\n              >\n                <span className='text-xl'>Try again</span>\n              </Button>\n            </div>\n            <h2 className='text-3xl text-center mb-4'>Details</h2>\n            <div className='table mx-auto mb-4 px-2 py-1 bg-blue-100 rounded-md text-blue-700'>\n              <p>Mode:&nbsp;<b>{ mode[stateMode] }</b></p>\n              <p>Difficulty:&nbsp;<b>{ difficulty[stateDifficulty] }</b></p>\n              <p>\n                Collections:&nbsp;\n                <b>\n                {\n                  stateCollectionsValue.reduce((acc, item) => {\n                    acc.push(item.label)\n                    return acc\n                  }, []).join(', ')\n                }\n                </b>\n              </p>\n              <p>Number of qustions:&nbsp;<b>{ stateNumberOfQuestions }</b></p>\n            </div>\n            <ResultsTable\n              dir={ 'col'/* stateMode === 'jp-en' ? 'col' : 'row' */ }\n              cards={ stateCards }\n              answers={ stateAnswers }\n            />\n          </>\n      }\n      {\n        stateTest &&\n          <div className='w-full md:w-1/2 lg:w-1/3 mx-auto'>\n            <p className='mb-4 text-2xl text-center'>Question No { stateCurrentQuestion + 1 }</p>\n            {\n              stateCardElements !== null &&\n                <TrainingCard\n                  dir={ 'col'/* stateMode === 'jp-en' ? 'col' : 'row' */ }\n                  data={stateCardElements}\n                  checkAnswerHandler={checkAnswerHandler}\n                />\n            }\n          </div>\n      }\n      {\n        stateSetup &&\n          <div className='w-full md:w-1/2 lg:w-1/3 mx-auto'>\n            <div className='mb-4'>\n              <FormControl className='w-full'>\n                <label className='mb-1 text-sm text-gray-500'>Mode</label>\n                <ToggleButtonGroup\n                  value={stateMode}\n                  exclusive\n                  onChange={(event, value) => setMode(value)}\n                  aria-label='difficulty'\n                  className='w-full'\n                >\n                  <ToggleButton value='jp-en' aria-label='japanese mode' className='w-full'>\n                    日本語\n                  </ToggleButton>\n                  <ToggleButton value='en-jp' aria-label='english mode' className='w-full'>\n                    English\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </FormControl>\n            </div>\n\n            <div className='mb-10'>\n              <FormControl className='w-full'>\n                <label className='mb-1 text-sm text-gray-500'>Difficulty</label>\n                <ToggleButtonGroup\n                  value={stateDifficulty}\n                  exclusive\n                  onChange={(event, value) => setDifficulty(value)}\n                  aria-label='difficulty'\n                  className='w-full'\n                >\n                  <ToggleButton value={2} aria-label='easy' className='w-full'>\n                    Easy\n                  </ToggleButton>\n                  <ToggleButton value={3} aria-label='medium' className='w-full'>\n                    Medium\n                  </ToggleButton>\n                  <ToggleButton value={4} aria-label='hard' className='w-full'>\n                    Hard\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </FormControl>\n            </div>\n\n            <div className='mb-4'>\n              <FormControl\n                variant='outlined'\n                className='w-full'\n              >\n                <Autocomplete\n                  multiple\n                  disableCloseOnSelect\n                  autoHighlight\n                  options={\n                    collections.index.reduce((acc, group) => ([\n                      ...acc,\n                      ...group.options.map(\n                        (option, idx) => ({\n                          label: option.label, value: option.value, group: group.label\n                        })\n                      )\n                    ]), [])\n                  }\n                  groupBy={ option => option.group }\n                  getOptionLabel={ option => option.label }\n                  getOptionSelected={ (option, value) => option.value === value.value }\n                  renderInput={ params => <TextField {...params} label='Collections' /> }\n                  value={ stateCollectionsValue }\n                  onChange={(event, value) => {\n                    setCollectionsValue(value)\n                    setGeneralCollection(\n                      value.reduce((acc, item) => {\n                        return acc.concat(collections.data[item.value])\n                      }, [])\n                    )\n                  }}\n                />\n              </FormControl>\n            </div>\n\n            <div className='mb-8'>\n              <FormControl className='w-full'>\n                <label className='mb-1 text-sm text-gray-500'>Number of questions</label>\n                <ToggleButtonGroup\n                  value={stateNumberOfQuestions}\n                  exclusive\n                  onChange={(event, value) => setNumberOfQuestions(value)}\n                  aria-label='number of questions'\n                  className='w-full'\n                >\n                  <ToggleButton value={5} aria-label='5' className='w-full' disabled={ stateGeneralCollection.length < 5 }>\n                    <b className='text-xl'>5</b>\n                  </ToggleButton>\n                  <ToggleButton value={15} aria-label='15' className='w-full' disabled={ stateGeneralCollection.length < 15 }>\n                  <b className='text-xl'>15</b>\n                  </ToggleButton>\n                  <ToggleButton value={25} aria-label='25' className='w-full' disabled={ stateGeneralCollection.length < 25 }>\n                  <b className='text-xl'>25</b>\n                  </ToggleButton>\n                  <ToggleButton value={50} aria-label='50' className='w-full' disabled={ stateGeneralCollection.length < 50 }>\n                  <b className='text-xl'>50</b>\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </FormControl>\n            </div>\n\n            <Button\n              variant='contained'\n              disableElevation\n              color='secondary'\n              size='large'\n              className='w-full'\n              onClick={() => {\n                setSetup(false)\n                setTest(true)\n              }}\n              disabled={ stateCollectionsValue.length === 0 || stateNumberOfQuestions === null }\n            >\n              Start testing\n            </Button>\n          </div>\n      }\n    </>\n  )\n}","import React from 'react'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from 'react-router-dom'\nimport cn from 'classnames'\nimport { Helmet } from 'react-helmet'\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { teal } from '@material-ui/core/colors'\n\nimport { CollectionsProvider } from './collections/CollectionsProvider'\nimport Home from './pages/index'\nimport Learning from './pages/learning'\nimport Training from './pages/training'\nimport Testing from './pages/testing'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faBookReader, faUserGraduate, faBookOpen } from '@fortawesome/free-solid-svg-icons'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: teal,\n  },\n  overrides: {\n    MuiToggleButton: {\n      root: {\n        color: teal[500],\n        backgroundColor: teal[50],\n        '&$selected': {\n          color: 'white',\n          backgroundColor: teal[400],\n          '&:hover': {\n            backgroundColor: teal[400]\n          }\n        },\n        '&:hover': {\n          backgroundColor: teal[100]\n        }\n      },\n      selected: {\n      }\n    }\n  }\n});\n\nfunction Nav() {\n  const location = useLocation()\n  \n  return (\n    <footer className='shadow-inner fixed bottom-0 w-full bg-yellow-400'>\n      <div className='container mx-auto py-3'>\n        <nav className='w-full'>\n          <ul className='flex justify-between'>\n            <li className='px-3'>\n              <Link\n                to='/'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/'}\n                )}\n              >\n                <FontAwesomeIcon icon={faHome}/>\n              </Link>\n            </li>\n            <li className='px-3'>\n              <Link\n                to='/learning'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/learning'}\n                )}\n              >\n                <FontAwesomeIcon icon={faBookOpen}/>\n              </Link>\n            </li>\n            <li className='px-3'>\n              <Link\n                to='/training'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/training'}\n                )}\n              >\n                <FontAwesomeIcon icon={faBookReader}/>\n              </Link>\n            </li>\n            <li className='px-3'>\n              <Link\n                to='/testing'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/testing'}\n                )}\n              >\n                <FontAwesomeIcon icon={faUserGraduate}/>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </footer>\n  )\n}\n\nfunction App() {\n  return (\n    <CollectionsProvider>\n      <ThemeProvider theme={theme}>\n        <Helmet>\n          <title>正解 (Seikai)</title>\n        </Helmet>\n        <Router>\n          <div className='app-container'>\n            <main className='pt-8 pb-24 bg-yellow-200'>\n              <div className='container mx-auto px-4'>\n                <Switch>\n                  <Route exact path='/'>\n                    <Home/>\n                  </Route>\n                  <Route exact path='/learning'>\n                    <Learning/>\n                  </Route>\n                  <Route exact path='/training'>\n                    <Training/>\n                  </Route>\n                  <Route exact path='/testing'>\n                    <Testing/>\n                  </Route>\n                </Switch>\n              </div>\n            </main>  \n            <Nav/>\n          </div>\n        </Router>\n      </ThemeProvider>\n    </CollectionsProvider>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log)\n"],"sourceRoot":""}