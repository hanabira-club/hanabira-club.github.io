{"version":3,"sources":["collections/CollectionsProvider.js","pages/index.js","cards/LearningCard.js","pages/learning.js","cards/TrainingCard.js","helpers/array.js","cards/CreateCardData.js","cards/CreateCardElements.js","pages/training.js","cards/TestingCard.js","components/ResultsTable.js","pages/testing.js","App.js","reportWebVitals.js","index.js"],"names":["CollectionsContext","React","createContext","useCollections","useContext","CollectionsProvider","children","useState","index","data","stateCollections","setCollections","useEffect","reduce","acc","item","idx","findIndex","f","label","group","push","options","name","value","code","processData","_hiragana","_katakana","_kanji_numbers","_kanji_study","_kanji_calendar","Provider","collections","learningCollections","hiragana","_hiraganaForLearning","katakana","_katakanaForLearning","Home","colors","Helmet","className","to","text","map","section","cn","LearningCard","blind","style","willChange","height","jp","onyomi","native","transliteration","kunyomi","en","SimpleLearningCard","extended","rows","max","length","i","Learning","stateCollectionData","setCollectionData","stateCollection","setCollection","stateKanjiMode","setKanjiMode","stateKanaMode","setKanaMode","stateLearningSection","setLearningSection","renderEmptyRow","len","row","uuid","renderKanaTableRows","collection","color","collapse","grid","rowIdx","cell","cellIdx","find","indexOf","FormControl","id","ToggleButtonGroup","aria-labelledby","exclusive","onChange","event","ToggleButton","aria-label","variant","InputLabel","Select","labelId","defaultValue","target","filter","ListSubheader","option","optionIdx","MenuItem","card","splice","extra","renderKanaTable","TrainingCard","checkAnswerHandler","dir","riddle","onMouseUp","indexOfCorrect","Math","random","toString","shuffle","array","j","floor","pickElement","arr","exclude","Array","isArray","p","CreateCardElements","picks","mode","spelling","$riddle","$options","this","opt","undefined","translation","test","modeRiddle","split","modeOptions","createTrainingData","createTestingData","pick","isCorrect","Training","stateTotalAnswers","setTotalAnswers","stateCorrectAnswers","setCorrectAnswers","stateMode","setMode","stateSpelling","setSpelling","stateDifficulty","setDifficulty","stateCardElements","setCardElements","cardElements","exportTrainingCardElements","TestingCard","ResultsTable","cards","answers","cardIdx","prototype","exportResultsCardElements","call","optIdx","Testing","stateTranslation","setTranslation","stateCollectionsValue","setCollectionsValue","stateGeneralCollection","setGeneralCollection","stateNumberOfQuestions","setNumberOfQuestions","stateTestingCollection","setTestingCollection","stateCards","setCards","stateAnswers","setAnswers","stateCurrentQuestion","setCurrentQuestion","stateSetup","setSetup","stateTest","setTest","stateResult","setResult","Map","cardData","testingCardElements","exportTestingCardElements","state","Button","onClick","get","2","3","4","join","Autocomplete","multiple","disableCloseOnSelect","autoHighlight","groupBy","getOptionLabel","getOptionSelected","renderInput","params","TextField","concat","disabled","disableElevation","size","theme","createMuiTheme","palette","primary","teal","overrides","MuiToggleButton","root","backgroundColor","selected","Nav","location","useLocation","pathname","icon","faHome","faBookOpen","faBookReader","faUserGraduate","App","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.f23eb804.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\n\nimport _hiraganaForLearning from './json/hiragana-for-learning.json'\nimport _katakanaForLearning from './json/katakana-for-learning.json'\nimport _hiragana from './json/hiragana.json'\nimport _katakana from './json/katakana.json'\nimport _kanji_numbers from './json/kanji-numbers.json'\nimport _kanji_study from './json/kanji-study.json'\nimport _kanji_calendar from './json/kanji-calendar.json'\n\nconst CollectionsContext = React.createContext()\n\nfunction processData(data = []) {\n  return data.reduce((acc, item) => {\n    const idx = acc.index.findIndex(f => f.label === item.group)\n\n    if (idx === -1) {\n      acc.index.push({ label: item.group, options: [{ label: item.name , value: item.code }] })\n    } else {\n      acc.index[idx].options.push({ label: item.name , value: item.code })\n    }\n\n    acc.data[item.code] = item.data\n\n    return acc\n  }, {index: [], data: {}})\n}\n\nexport const useCollections = () => useContext(CollectionsContext)\n\nexport const CollectionsProvider = ({ children }) => {\n  const [stateCollections, setCollections] = useState({ index: [], data: {} })\n\n  useEffect(() => {\n    setCollections(processData([\n      _hiragana,\n      _katakana,\n      _kanji_numbers,\n      _kanji_study,\n      _kanji_calendar\n    ]))\n  }, [])\n\n  return (\n    <CollectionsContext.Provider value={{\n      collections: stateCollections,\n      learningCollections: {\n        hiragana: _hiraganaForLearning,\n        katakana: _katakanaForLearning\n      }\n    }}>\n      { children }\n    </CollectionsContext.Provider>\n  )\n}","import { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport cn from 'classnames'\n\nfunction Home() {\n  const sections = [\n    {\n      to: '/learning',\n      text: 'Start learn kana and kanji'\n    },\n    {\n      to: '/training',\n      text: 'Practice'\n    },\n    {\n      to: '/testing',\n      text: 'Test your knowledge'\n    }\n  ]\n  const colors = ['red', 'yellow', 'blue', 'green', 'purple', 'pink']\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Home page</title>\n      </Helmet>\n      <div className='flex flex-col justify-center h-full'>\n        <h1 className='table mb-8 text-3xl md:text-7xl text-center'>\n          <span className='inline-block pt-4 pb-6 bg-gradient-to-r from-blue-400 to-green-400 rounded-xl text-white'>\n            &nbsp;正解 (Seikai)&nbsp;\n          </span>\n        </h1>\n        <p className='mb-20 text-2xl text-center'>\n          The simple and fast web application for learning and practicing your <span className='inline-block pb-1 bg-gradient-to-r from-red-400 to-yellow-400 rounded-lg text-white'>&nbsp;&nbsp;japanese&nbsp;&nbsp;</span> language!\n        </p>\n        <div className='flex flex-col md:flex-row items-stretch w-full rounded-xl overflow-hidden'>\n          {\n            sections.map((section, idx) => (\n              <Link\n                key={idx}\n                to={section.to}\n                className={cn(\n                  'flex justify-center items-center w-full py-6 bg-gradient-to-r text-xl text-white text-center',\n                  `from-${colors[idx * 2 + 0]}-400 to-${colors[idx * 2 + 1]}-400`,\n                  `hover:from-${colors[idx * 2 + 0]}-500 hover:to-${colors[idx * 2 + 1]}-500`,\n                  {\n                    'border-t md:border-l md:border-t-0 border-white': idx \n                  }\n                )}\n              >\n                {section.text}\n              </Link>\n            ))\n          }\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Home","import cn from 'classnames'\n\nfunction LearningCard({\n  data,\n  blind,\n  className\n}) {\n  return (\n    <div\n      className={cn(\n        'group flex flex-col w-full rounded-lg cursor-pointer overflow-hidden',\n        className\n      )}\n    >\n      <div\n        className='flex justify-center items-center text-5xl'\n        style={{ willChange: 'background-color', height: '90px' }}\n      >\n        <span className={cn(\n          'shippori group-hover:opacity-100 transition-all duration-300',\n          {\n            'opacity-0': blind\n          }\n        )}>\n          { data.jp }\n        </span>\n      </div>\n      \n      <div\n        className='flex justify-center items-stretch border-t border-white'\n        style={{ willChange: 'background-color', height: '120px' }}\n      >\n        <div className='w-1/2 p-2 border-r border-white'>\n          <p className='mb-2 text-sm'>Onyomi:</p>\n          <p>{ data?.onyomi.native || <>&mdash;</> }</p>\n          <p>{ data?.onyomi.transliteration || <>&mdash;</> }</p>\n        </div>\n        <div className='w-1/2 p-2'>\n          <p className='mb-2 text-sm'>Kunyomi:</p>\n          <p>{ data?.kunyomi.native || <>&mdash;</> }</p>\n          <p>{ data?.kunyomi.transliteration || <>&mdash;</> }</p>\n        </div>\n      </div>\n      \n      <div\n        className='flex justify-center items-center border-t border-white'\n        style={{ willChange: 'background-color', height: '40px' }}\n      >\n        <b>{ data.en }</b>\n      </div>\n    </div>\n  )\n}\n\nfunction SimpleLearningCard({\n  data,\n  className,\n  extended = false\n}) {\n  const rows = []\n  const max = extended ? data.jp.length : 1\n\n  for (let i = 0; i < max ; i++) {\n    rows.push(\n      <div\n        key={ i }\n        className={cn(\n          'flex justify-center items-center w-full gap-1',\n          `${ extended ? 'flex-row' : 'flex-col' }`\n        )}\n      >\n        <div className={cn(\n          'font-light break-normal whitespace-nowrap',\n          `${ extended\n            ? 'w-1/2 text-right text-sm sm:text-xl md:text-sm lg:text-xl xl:text-2xl'\n            : 'w-full text-center text-lg sm:text-3xl md:text-2xl lg:text-3xl xl:text-5xl'\n          }`\n        )}>\n          { data?.jp[i] }\n        </div>\n        <div className={cn(\n          'font-light text-xs sm:text-lg md:text-sm lg:text-lg xl:text-xl break-normal whitespace-nowrap',\n          `${ extended\n            ? 'w-1/2 text-left'\n            : 'w-full text-center'\n          }`\n        )}>\n          { data?.en[i] }\n        </div>\n      </div>\n    )\n    \n  }\n  return (\n    <div className={cn(\n      'relative rounded-lg aspect-h-1 aspect-w-1 cursor-pointer',\n      className\n    )}>\n      <div className='absolute w-full h-full flex flex-col justify-center items-center'>\n        { rows }\n      </div>\n    </div>\n  )\n}\n\nexport { LearningCard, SimpleLearningCard }","import { useState, Fragment } from 'react'\nimport { Helmet } from 'react-helmet'\nimport {\n  Select, MenuItem, ListSubheader, InputLabel, FormControl,\n  ToggleButtonGroup, ToggleButton\n} from '@material-ui/core'\nimport cn from 'classnames'\nimport { v4 as uuid } from 'uuid'\n\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { LearningCard, SimpleLearningCard } from '../cards/LearningCard'\n\nexport default function Learning() {\n  const [stateCollectionData, setCollectionData] = useState([])\n  const [stateCollection, setCollection] = useState('')\n  const [stateKanjiMode, setKanjiMode] = useState('visible')\n  const [stateKanaMode, setKanaMode] = useState('basic')\n  const [stateLearningSection, setLearningSection] = useState('hiragana')\n  \n  const { collections, learningCollections } = useCollections()\n\n  const colors = ['red', 'yellow', 'purple', 'green', 'blue']\n\n  function renderEmptyRow(len, className) {\n    let row = []\n\n    for (let i = 0; i < len; i++) {\n      row.push(<div key={ uuid() }>&nbsp;</div>)\n    }\n\n    return (\n      <div\n        key={ uuid() }\n        className={cn('', className)}\n      >\n        { row }\n      </div>\n    )\n  }\n\n  function renderKanaTableRows(collection, color, className, collapse = false) {\n    return collection.grid.reduce((acc, row, rowIdx) => (\n      [\n        ...acc,\n        <div\n          key={ uuid() }\n          className={cn('', className)}\n        >\n          {\n            row.map((cell, cellIdx) => {\n              const data = collection.data.find(item => item.en[0] === cell)\n\n              return data\n                ? <SimpleLearningCard\n                    key={ cellIdx }\n                    data={ data }\n                    className={`\n                      bg-${color}-100\n                      hover:bg-red-200\n                      text-${color}-800\n                      hover:text-red-800\n                    `}\n                    extended={ ['nigori', 'extended'].indexOf(stateKanaMode) > -1 }\n                  />\n                : collapse ? null : <div key={ cellIdx } >&nbsp;</div>\n            })\n          }\n        </div>\n      ]\n    ), []) \n  }\n\n  function renderKanaTable(collection) {\n    const rows = renderKanaTableRows(learningCollections[collection], 'green',\n      'grid auto-rows-fr md:grid-cols-11 gap-1 lg:gap-2'\n    )\n\n    if (stateKanaMode === 'extended') {\n      /* Desktop */\n      rows.splice(2, 0, ...renderKanaTableRows(learningCollections[collection].extended, 'yellow',\n        'hidden md:grid md:grid-cols-11 gap-0.5 lg:gap-2'\n      ))\n      \n      /* Mobile */\n      const extra = renderKanaTableRows(learningCollections[collection].extended, 'yellow',\n        'grid md:hidden grid-rows-7 gap-0.5 lg:gap-2',\n        true\n      )\n      extra.splice(1, 0, renderEmptyRow(7, 'grid-rows-7 md:grid-rows-none md:grid-cols-7 gap-1 lg:gap-2 grid md:hidden'))\n      extra.splice(3, 0, renderEmptyRow(7, 'grid-rows-7 md:grid-rows-none md:grid-cols-7 gap-1 lg:gap-2 grid md:hidden'))\n      rows.push(...extra)\n    }\n\n    return <div className='grid grid-cols-5 md:grid-cols-none md:grid-flow-row md:auto-rows-max gap-1 lg:gap-2'>\n      { rows }\n    </div>\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Learning</title>\n      </Helmet>\n      <div className='w-full md:w-1/2 lg:w-1/3 mx-auto mb-8'>\n        <div className='mb-10'>\n          <FormControl className='w-full'>\n            <label\n              id='learning-section-label'\n              className='mb-1 text-sm text-gray-500'\n            >\n              Learning Section\n            </label>\n            <ToggleButtonGroup\n              aria-labelledby='learning-section-label'\n              value={stateLearningSection}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setLearningSection(value) }}\n              className='w-full'\n            >\n              <ToggleButton value='hiragana' aria-label='' className='w-full'>\n                ひらがな\n              </ToggleButton>\n              <ToggleButton value='katakana' aria-label='' className='w-full'>\n                カタカナ\n              </ToggleButton>\n              <ToggleButton value='kanji' aria-label='' className='w-full'>\n                漢字\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n        {\n          ['hiragana', 'katakana'].indexOf(stateLearningSection) > -1 &&\n            <div className='mb-10'>\n              <FormControl className='w-full'>\n                <label\n                  id='kana-mode-label'\n                  className='mb-1 text-sm text-gray-500'\n                >\n                  Kana mode\n                </label>\n                <ToggleButtonGroup\n                  aria-labelledby='kana-mode-label'\n                  value={stateKanaMode}\n                  exclusive\n                  onChange={(event, value) => { if (value !== null) setKanaMode(value) }}\n                  className='w-full'\n                >\n                  <ToggleButton value='basic' aria-label='' className='w-full'>\n                    Basic\n                  </ToggleButton>\n                  <ToggleButton value='nigori' aria-label='' className='w-full'>\n                    + Nigori\n                  </ToggleButton>\n                  <ToggleButton value='extended' aria-label='' className='w-full'>\n                    + Vowels\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </FormControl>\n            </div>\n        }\n        {\n          stateLearningSection === 'kanji' &&\n            <>\n              <div className='mb-4'>\n                <FormControl\n                  variant='outlined'\n                  className='w-full'\n                >\n                  <InputLabel id='collection-label'>Collection</InputLabel>\n                  <Select\n                    labelId='collection-label'\n                    defaultValue=''\n                    value={ stateCollection || '' }\n                    label='Collection'\n                    onChange={event => {\n                      setCollection(event.target.value)\n                      setCollectionData(collections.data[event.target.value])\n                    }}\n                  >\n                    {\n                      collections.index.filter(group => group.label !== 'ABC').reduce((acc, group) => {\n                        return [\n                          ...acc,\n                          <ListSubheader key={ group.label }>{ group.label }</ListSubheader>,\n                          group.options.map((option, optionIdx) => (\n                            <MenuItem key={ optionIdx } value={ option.value }>\n                              { option.label }\n                            </MenuItem>\n                          ))\n                        ]\n                      }, [])\n                    }\n                  </Select>\n                </FormControl>\n              </div>\n              <div>\n                <FormControl className='w-full'>\n                  <label\n                    id='kanji-mode-label'\n                    className='mb-1 text-sm text-gray-500'\n                  >\n                    Kanji mode\n                  </label>\n                  <ToggleButtonGroup\n                    aria-labelledby='kanji-mode-label'\n                    value={stateKanjiMode}\n                    exclusive\n                    onChange={(event, value) => { if (value !== null) setKanjiMode(value) }}\n                    className='w-full'\n                  >\n                    <ToggleButton value='visible' aria-label='visible mode' className='w-full'>\n                      Visible\n                    </ToggleButton>\n                    <ToggleButton value='hidden' aria-label='hidden mode' className='w-full'>\n                      Hidden\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                </FormControl>\n              </div>\n            </>\n        }\n      </div>\n      {\n        (stateCollectionData.length === 0 && stateLearningSection === 'kanji') &&\n          <div\n            className='text-3xl italic text-center text-gray-400'\n          >\n            Please, select collection to learn\n          </div>\n      }\n      {\n        stateLearningSection === 'kanji' &&\n          <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4'>\n            {\n              stateCollectionData.map((card, idx) => (\n                <LearningCard\n                  key={ idx }\n                  data={ card }\n                  blind={ stateKanjiMode === 'hidden' }\n                  className={`\n                    bg-gradient-to-r\n                    from-${colors[idx % colors.length]}-200\n                    to-${colors[(idx + 4) % colors.length]}-200\n                    text-${colors[(idx + 3) % colors.length]}-900\n                  `}\n                />\n              ))\n            }\n          </div>\n      }\n      {\n        ['hiragana', 'katakana'].indexOf(stateLearningSection) > -1 &&\n          renderKanaTable(stateLearningSection)\n      }\n    </>\n  )\n}","import cn from 'classnames'\n\nfunction TrainingCard({\n  data = null,\n  checkAnswerHandler,\n  dir = 'row'\n}) {\n  if (data === null) {\n    return <div className='w-full text-center'>No data provided for card</div>\n  }\n\n  return (\n    <div\n      className='w-full rounded-xl overflow-hidden'\n      style={{ height: '500px' }}\n    >\n      <div className={cn(\n        'flex justify-center items-center bg-gradient-to-r from-yellow-200 to-red-200 text-red-900',\n        {\n          'h-2/3': dir === 'row',\n          'h-1/3': dir === 'col'\n        }\n      )}>\n        { data.riddle }\n      </div>\n      <div className={cn(\n        'grid border-t border-white',\n        {\n          'grid-flow-col auto-cols-fr h-1/3': dir === 'row',\n          'grid-flow-row auto-rows-fr h-2/3': dir === 'col'\n        }\n      )}>\n        {\n          data.options.map((option, idx) => (\n            <div\n              key={ Math.random().toString() }\n              className={cn(\n                `flex justify-center items-center\n                bg-gradient-to-r from-green-200 to-blue-200 hover:from-green-300 hover:to-blue-300\n                text-blue-900 cursor-pointer`,\n                { 'border-l border-white': idx > 0 && dir === 'row' },\n                { 'border-t border-white': idx > 0 && dir === 'col' }\n              )}\n              onMouseUp={() => checkAnswerHandler(idx === data.indexOfCorrect, idx)}\n            >\n              { option }\n            </div>    \n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport { TrainingCard }","// https://javascript.info/task/shuffle\nexport function shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array\n}\n\nexport function pickElement(arr, exclude) {\n  if (arr.length === 0) return null\n\n  if (!Array.isArray(exclude)) {\n    return arr[Math.floor(Math.random() * arr.length)]\n  } else {\n    const p = arr[Math.floor(Math.random() * arr.length)]\n\n    if (exclude.indexOf(p) === -1) {\n      return p\n    } else {\n      return pickElement(arr, exclude)\n    }\n  }\n}","import { shuffle } from '../helpers/array'\n\nexport class CreateCardData {\n  riddle = {}\n  options = []\n  indexOfCorrect = -1\n\n  constructor({ picks, mode, spelling }) {\n    this.picks = picks\n    this.mode = mode\n    this.spelling = spelling\n\n    if (/^[a-z]{2}-[a-z]{2}$/.test(this.mode)) {\n      this.modeRiddle = mode.split('-')[0]\n      this.modeOptions = mode.split('-')[1]\n      this.createTrainingData()\n    }\n\n    if (['kana', 'kanji'].indexOf(this.mode) > -1) {\n      this.createTestingData()\n    }\n  }\n\n  createTrainingData() {\n    switch (this.modeRiddle) {\n      case 'jp':\n        this.riddle = {\n          jp: this.picks[0].jp,\n          onyomi: this.picks[0].onyomi?.[this.spelling],\n          kunyomi: this.picks[0].kunyomi?.[this.spelling]\n        }\n      break\n\n      case 'en':\n        this.riddle = {\n          en: this.picks[0].en,\n          onyomi: this.picks[0].onyomi?.[this.spelling],\n          kunyomi: this.picks[0].kunyomi?.[this.spelling]\n        }\n      break\n\n      default: \n        this.riddle = {}\n      break\n    }\n\n    switch (this.modeOptions) {\n      case 'jp':\n        this.options = shuffle(this.picks.map((pick, idx) => ({\n          isCorrect: !idx,\n          jp: pick.jp,\n          onyomi: pick.onyomi?.[this.spelling],\n          kunyomi: pick.kunyomi?.[this.spelling]\n        })))\n      break\n\n      case 'en':\n        this.options = shuffle(this.picks.map((pick, idx) => ({\n          isCorrect: !idx,\n          en: pick.en,\n          onyomi: pick.onyomi?.[this.spelling],\n          kunyomi: pick.kunyomi?.[this.spelling]\n        })))\n      break\n\n      default:\n        this.options = []\n      break\n    }\n\n    this.indexOfCorrect = this.options.findIndex(opt => opt.isCorrect)\n  }\n\n  createTestingData() {\n    switch (this.mode) {\n      case 'kana':\n        this.riddle = {\n          en: this.picks[0].en,\n          onyomi: this.picks[0].onyomi?.native,\n          kunyomi: this.picks[0].kunyomi?.native\n        }\n        this.options = shuffle(this.picks.map((pick, idx) => ({\n          isCorrect: !idx,\n          jp: pick.jp,\n        })))\n      break\n\n      case 'kanji':\n        this.riddle = {\n          jp: this.picks[0].jp,\n        }\n        this.options = shuffle(this.picks.map((pick, idx) => ({\n          isCorrect: !idx,\n          en: pick.en,\n          onyomi: pick.onyomi?.native,\n          kunyomi: pick.kunyomi?.native\n        })))\n      break\n    \n      default:\n        this.riddle = {}\n        this.options = []\n      break\n    }\n\n    this.indexOfCorrect = this.options.findIndex(opt => opt.isCorrect)\n  }\n}","import { CreateCardData } from './CreateCardData'\nimport cn from 'classnames'\n\nexport class CreateCardElements extends CreateCardData {\n  constructor({ picks, mode, spelling }) {\n    super({ picks, mode, spelling })\n  }\n\n  exportResultsCardElements() {\n    let $riddle\n    let $options\n\n    switch (this.mode) {\n      case 'kana':\n        $riddle =\n          <div className='w-full px-4'>\n            <div className='text-sm font-bold'>{ this.riddle.en }</div>\n            {\n              (!!this.riddle.onyomi) &&\n                <div className='text-md'>\n                  { this.riddle.onyomi || null }\n                </div>\n            }\n            {\n              (!!this.riddle.kunyomi) &&\n                <div className='text-md'>\n                  { this.riddle.kunyomi || null }\n                </div>\n            }\n          </div> \n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-2 py-1 text-3xl' key={idx}>\n            { opt.jp }\n          </div>\n        ))\n      break\n      \n      case 'kanji':\n        $riddle =\n          <span className='text-2xl'>\n            { this.riddle.jp }\n          </span>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-2 py-1' key={idx}>\n            { opt.en }\n            {\n              (!!opt.onyomi) &&\n                <span className='text-sm border-l border-current ml-2 pl-2'>\n                  { opt.onyomi || null }\n                </span>\n            }\n            {\n              (!!opt.kunyomi) &&\n                <span className='text-sm border-l border-current ml-2 pl-2'>\n                  { opt.kunyomi || null }\n                </span>\n            }\n          </div>\n        ))\n      break\n      \n      default:\n      break\n    }\n\n    return { \n      riddle: $riddle,\n      options: $options,\n      indexOfCorrect: this.indexOfCorrect\n    }\n  }\n\n  exportTrainingCardElements() {\n    let $riddle\n    let $options\n\n    switch (this.mode) {\n      case 'jp-en':\n        $riddle =\n          <div className='text-5xl text-center'>\n            { this.riddle.jp }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-4'>\n            <b>{ opt.en }</b>\n            {\n              (opt.onyomi !== undefined || opt.kunyomi !== undefined) &&\n                <div className='text-sm'>\n                  Onyomi:&nbsp;&nbsp;&nbsp;{ opt.onyomi || null }\n                  <br/>\n                  Kunyomi:&nbsp;&nbsp;&nbsp;{ opt.kunyomi || null }\n                </div>\n            }\n          </div>\n        ))\n      break\n\n      case 'en-jp':\n        $riddle =\n          <div className='w-full px-4'>\n            <div className='mb-2 text-2xl text-center'>\n              <b>{ this.riddle.en }</b>\n            </div>\n            {\n              (this.riddle.onyomi !== undefined || this.riddle.kunyomi !== undefined) &&\n                <>\n                  Onyomi:&nbsp;&nbsp;&nbsp;{ this.riddle.onyomi || null }\n                  <br/>\n                  Kunyomi:&nbsp;&nbsp;&nbsp;{ this.riddle.kunyomi || null }\n                </>\n            }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='flex items-center text-4xl'>\n            { opt.jp }\n          </div>\n        ))\n      break\n\n      default:\n      break\n    }\n    \n    return { \n      riddle: $riddle,\n      options: $options,\n      indexOfCorrect: this.indexOfCorrect\n    }\n  }\n\n  exportTestingCardElements({ translation }) {\n    let $riddle\n    let $options\n\n    switch (this.mode) {\n      case 'kana':\n        $riddle =\n          <div className='text-left'>\n            {\n              translation &&\n                <div className='text-lg text-center font-bold'>\n                  { this.riddle.en }\n                </div>\n            }\n            {\n              (!!this.riddle.onyomi) &&\n                <div className={cn(\n                  'text-center text-3xl',\n                  {\n                    'border-t border-white': translation\n                  }\n                )}>\n                  { this.riddle.onyomi || null }\n                </div>\n            }\n            {\n              (!!this.riddle.kunyomi) &&\n                <div className={cn(\n                  'text-center text-3xl',\n                  {\n                    'border-t border-white': this.riddle.onyomi || translation\n                  }\n                )}>\n                  { this.riddle.kunyomi || null }\n                </div>\n            }\n          </div>\n        $options = this.options.map((opt) => (\n          <div className='text-3xl text-center w-full px-4 py-1 select-none' key={opt.jp}>\n            { opt.jp }\n          </div>\n        ))\n      break\n\n      case 'kanji':\n        $riddle =\n          <div className='text-4xl text-center'>\n            { this.riddle.jp }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='px-8 select-none' key={idx}>\n            {\n              translation &&\n                <div className='text-lg text-center font-bold'>\n                  { opt.en }\n                </div>\n            }\n            {\n              (!!opt.onyomi) &&\n                <div className={cn(\n                  'text-2xl text-center',\n                  {\n                    'border-t border-white': translation\n                  }\n                )}>\n                  { opt.onyomi || null }\n                </div>\n            }\n            {\n              (!!opt.kunyomi) &&\n                <div className={cn(\n                  'text-2xl text-center',\n                  {\n                    'border-t border-white': this.riddle.onyomi || translation\n                  }\n                )}>\n                  { opt.kunyomi || null }\n                </div>\n            }\n          </div>\n        ))\n      break\n\n      default:\n      break\n    }\n    \n    return { \n      riddle: $riddle,\n      options: $options,\n      indexOfCorrect: this.indexOfCorrect\n    }\n  }\n}","import { useEffect, useState } from 'react'\nimport {\n  Select, MenuItem, ListSubheader, InputLabel, FormControl,\n  ToggleButtonGroup, ToggleButton\n} from '@material-ui/core'\nimport { Helmet } from 'react-helmet'\n\nimport { TrainingCard } from '../cards/TrainingCard'\nimport { CreateCardElements } from '../cards/CreateCardElements'\nimport { pickElement } from '../helpers/array'\nimport { useCollections } from '../collections/CollectionsProvider'\n\nexport default function Training() {\n  const [stateTotalAnswers, setTotalAnswers] = useState(0)\n  const [stateCorrectAnswers, setCorrectAnswers] = useState(0)\n\n  const [stateMode, setMode] = useState('jp-en')\n  const [stateSpelling, setSpelling] = useState('transliteration')\n  const [stateDifficulty, setDifficulty] = useState(2)\n  const [stateCollection, setCollection] = useState()\n  const [stateCollectionData, setCollectionData] = useState([])\n  \n  const [stateCardElements, setCardElements] = useState(null)\n  const { collections } = useCollections()\n  \n  useEffect(() => {\n    if (stateCollectionData.length > 0) {\n      const pick = pickElement(stateCollectionData)\n      let picks = [pick]\n  \n      for (let i = 0; i < stateDifficulty - 1; i++) {\n        picks.push(pickElement(stateCollectionData, picks));\n      }\n\n      const cardElements = (new CreateCardElements({ picks, mode: stateMode, spelling: stateSpelling })).exportTrainingCardElements()\n\n      setCardElements(cardElements)\n    }\n  }, [stateTotalAnswers, stateCollectionData, stateDifficulty, stateMode, stateSpelling])\n\n\n  function checkAnswerHandler(isCorrect) {\n    setTotalAnswers(stateTotalAnswers + 1)\n    if (isCorrect) {\n      setCorrectAnswers(stateCorrectAnswers + 1)\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Training</title>\n      </Helmet>\n      <div className='w-full md:w-1/2 lg:w-1/3 mx-auto'>\n        <div className='mb-4'>\n          <FormControl className='w-full'>\n            <label className='mb-1 text-sm text-gray-500'>Mode</label>\n            <ToggleButtonGroup\n              value={stateMode}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setMode(value) }}\n              aria-label='difficulty'\n              className='w-full'\n            >\n              <ToggleButton value='jp-en' aria-label='japanese mode' className='w-full'>\n                日本語\n              </ToggleButton>\n              <ToggleButton value='en-jp' aria-label='english mode' className='w-full'>\n                English\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n\n        <div className='mb-4'>\n          <FormControl className='w-full'>\n            <label className='mb-1 text-sm text-gray-500'>Spelling</label>\n            <ToggleButtonGroup\n              value={stateSpelling}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setSpelling(value) }}\n              aria-label='spelling'\n              className='w-full'\n            >\n              <ToggleButton value='transliteration' aria-label='transliteration' className='w-full'>\n                Transliteration\n              </ToggleButton>\n              <ToggleButton value='native' aria-label='native' className='w-full'>\n                Native\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n\n        <div className='mb-10'>\n          <FormControl className='w-full'>\n            <label className='mb-1 text-sm text-gray-500'>Difficulty</label>\n            <ToggleButtonGroup\n              value={stateDifficulty}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setDifficulty(value) }}\n              aria-label='difficulty'\n              className='w-full'\n            >\n              <ToggleButton value={2} aria-label='easy' className='w-full'>\n                Easy\n              </ToggleButton>\n              <ToggleButton value={3} aria-label='medium' className='w-full'>\n                Medium\n              </ToggleButton>\n              <ToggleButton value={4} aria-label='hard' className='w-full'>\n                Hard\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n\n        <div className='mb-8'>\n          <FormControl\n            variant='outlined'\n            className='w-full'\n          >\n            <InputLabel id='collection-label'>Collection</InputLabel>\n            <Select\n              labelId='collection-label'\n              defaultValue=''\n              value={ stateCollection || '' }\n              label='Collection'\n              onChange={event => {\n                setCollection(event.target.value)\n                setCollectionData(collections.data[event.target.value])\n              }}\n            >\n              {\n                collections.index.reduce((acc, group) => {\n                  return [\n                    ...acc,\n                    <ListSubheader key={ group.label }>{ group.label }</ListSubheader>,\n                    group.options.map((option, optionIdx) => (\n                      <MenuItem key={ optionIdx } value={ option.value }>\n                        { option.label }\n                      </MenuItem>\n                    ))\n                  ]\n                }, [])\n              }\n            </Select>\n          </FormControl>\n        </div>\n        \n        {\n          stateCardElements === null &&\n          <div\n            className='text-3xl italic text-center text-gray-400'\n          >\n            Please, select collection to practice\n          </div>\n        }\n        {\n          stateCardElements !== null &&\n            <div className='relative'>\n              <div className='absolute w-full -top-1'>\n                <div className='table mx-auto px-2 py-1 rounded-md border border-white bg-gradient-to-r from-green-200 to-blue-200 text-md text-blue-900'>\n                  Score: <b>{ stateTotalAnswers } / { stateCorrectAnswers }</b>\n                </div>\n              </div>\n              <div className='flex justify-center'>\n                <div className='w-full'>\n                  <TrainingCard\n                    dir={ 'col'/* stateMode === 'jp-en' ? 'col' : 'row' */ }\n                    data={stateCardElements}\n                    checkAnswerHandler={checkAnswerHandler}\n                  />\n                </div>\n              </div>\n            </div>\n        }\n      </div>\n    </>\n  )\n}","import cn from 'classnames'\n\nfunction TestingCard({\n  data = null,\n  checkAnswerHandler\n}) {\n  if (data === null) {\n    return <div className='w-full text-center'>No data provided for card</div>\n  }\n\n  return (\n    <div\n      className='w-full rounded-xl overflow-hidden'\n      style={{ height: '550px' }}\n    >\n      <div className='flex justify-center items-center h-1/3 bg-gradient-to-r from-yellow-200 to-red-200 text-red-900'>\n        { data.riddle }\n      </div>\n      <div className='grid grid-flow-row auto-rows-fr h-2/3 border-t border-white'>\n        {\n          data.options.map((option, idx) => (\n            <div\n              key={ Math.random().toString() }\n              className={cn(\n                `flex justify-center items-center\n                bg-gradient-to-r from-green-200 to-blue-200 hover:from-green-300 hover:to-blue-300\n                text-blue-900 cursor-pointer`,\n                { 'border-t border-white': idx > 0 }\n              )}\n              onMouseUp={() => checkAnswerHandler(idx === data.indexOfCorrect, idx)}\n            >\n              { option }\n            </div>    \n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport { TestingCard }","import cn from 'classnames'\nimport { CreateCardElements } from '../cards/CreateCardElements'\n\nexport function ResultsTable({\n  cards = [],\n  answers = []\n}) {\n  return (\n    <div className={cn(\n      'w-full rounded-xl overflow-hidden',\n      \n    )}>\n      {\n        cards.map((card, cardIdx) => {\n          const { riddle, options, indexOfCorrect } = CreateCardElements.prototype.exportResultsCardElements.call(card)\n\n          return (\n            <div\n              key={cardIdx}\n              className={cn(\n                'flex flex-wrap w-full bg-gradient-to-r text-indigo-900',\n                {\n                  'border-t-8 border-white': cardIdx,\n                  'from-blue-100 to-blue-400': cardIdx % 2 === 0,\n                  'from-purple-100 to-purple-400': cardIdx % 2 === 1\n                }\n              )}\n            >\n              <div\n                className='flex justify-center items-center w-full md:w-1/3 h-20 md:h-auto'\n              >\n                { riddle }\n              </div>\n              <div\n                className='grid grid-flow-row auto-rows-fr md:w-2/3 w-full border-t md:border-t-0 md:border-l border-white'\n              >\n                {\n                  options.map((option, optIdx) => (\n                    <div\n                      key={optIdx}\n                      className={cn(\n                        'flex justify-center items-center w-full h-20 md:h-auto',\n                        {\n                          'border-t border-white': optIdx,\n                          'bg-gradient-to-r from-green-100 to-green-300 text-green-800': indexOfCorrect === optIdx,\n                          'bg-gradient-to-r from-red-100 to-red-300 text-red-700': answers[cardIdx] === optIdx && indexOfCorrect !== optIdx\n                        },\n                      )}\n                    >\n                      { option }\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}","import { useEffect, useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport {\n  Autocomplete, TextField,\n  FormControl,\n  ToggleButtonGroup, ToggleButton,\n  Button\n} from '@material-ui/core'\n// import cn from 'classnames'\n\nimport { CreateCardElements } from '../cards/CreateCardElements'\nimport { TestingCard } from '../cards/TestingCard'\nimport { ResultsTable } from '../components/ResultsTable'\nimport { pickElement } from '../helpers/array'\nimport { useCollections } from '../collections/CollectionsProvider'\n\nexport default function Testing() {\n  const [stateMode, setMode] = useState('kana')\n  const [stateTranslation, setTranslation] = useState(false)\n  const [stateDifficulty, setDifficulty] = useState(2)\n  const [stateCollectionsValue, setCollectionsValue] = useState([])\n  const [stateGeneralCollection, setGeneralCollection] = useState([])\n  const [stateNumberOfQuestions, setNumberOfQuestions] = useState(null)\n  \n  const [stateTestingCollection, setTestingCollection] = useState([])\n  const [stateCardElements, setCardElements] = useState(null)\n  const [stateCards, setCards] = useState([])\n  const [stateAnswers, setAnswers] = useState([])\n  \n  const [stateCurrentQuestion, setCurrentQuestion] = useState(null)\n  const [stateCorrectAnswers, setCorrectAnswers] = useState(0)\n  \n  const [stateSetup, setSetup] = useState(true)\n  const [stateTest, setTest] = useState(false)\n  const [stateResult, setResult] = useState(false)\n\n  const { collections } = useCollections()\n\n  const mode = {\n    'kana': 'Kana',\n    'kanji': 'Kanji',\n  }\n  const translation = new Map([\n    [false, 'Disabled'],\n    [true, 'Enabled']\n  ])\n  const difficulty = {\n    2: 'Easy',\n    3: 'Medium',\n    4: 'Hard',\n  }\n\n  /* Generate testing collection */\n  useEffect(() => {\n    if (stateTest) {\n      let collection = []\n  \n      for (let i = 0; i < stateNumberOfQuestions; i++) {\n        collection.push(pickElement(stateGeneralCollection, collection))\n      }\n\n      setTestingCollection(collection)\n      setCurrentQuestion(0)\n    }\n  }, [stateTest /*  */, stateNumberOfQuestions, stateGeneralCollection])\n\n  /* Generate question card */\n  useEffect(() => {\n    if (stateTest /* && stateCurrentQuestion !== null */) {\n      const pick = stateTestingCollection[stateCurrentQuestion]\n      let picks = [pick]\n  \n      for (let i = 0; i < stateDifficulty - 1; i++) {\n        picks.push(pickElement(stateGeneralCollection, picks));\n      }\n\n      const cardData = new CreateCardElements({ picks, mode: stateMode, spelling: 'native' })\n      const testingCardElements = cardData.exportTestingCardElements({ translation: stateTranslation })\n      // const resultsCardElements = cardData.exportResultsCardElements()\n  \n      setCardElements(testingCardElements)\n      setCards(state => [...state, cardData])\n    }\n  }, [stateCurrentQuestion /*  */, stateTestingCollection, stateDifficulty, stateGeneralCollection, stateMode/* , stateTest */])\n\n  /* Validate number of question */\n  useEffect(() => {\n    if (stateGeneralCollection.length < stateNumberOfQuestions) {\n      setNumberOfQuestions(null)\n    }\n  }, [stateGeneralCollection /*  */, stateNumberOfQuestions])\n\n  function checkAnswerHandler(isCorrect, idx) {\n    setAnswers(state => [...state, idx])\n    \n    if (isCorrect) {\n      setCorrectAnswers(stateCorrectAnswers + 1)\n    }\n    \n    if (stateCurrentQuestion < stateTestingCollection.length - 1) {\n      setCurrentQuestion(stateCurrentQuestion + 1)\n    } else {\n      setTest(false)\n      setResult(true)\n    }\n  }\n\n  function resetHandler() {\n    setSetup(true)\n    setTest(false)\n    setResult(false)\n\n    setCardElements(null)\n    setCards([])\n    setAnswers([])\n    \n    setCurrentQuestion(null)\n    setCorrectAnswers(0)\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Testing</title>\n      </Helmet>\n      {\n        stateResult &&\n          <>\n            <div className='w-full md:w-1/2 lg:w-1/3 mx-auto mb-8'>\n              <div className='mb-8'>\n                <div className='text-center text-xl'>Your score:</div>\n                <div className='text-center text-6xl text-indigo-600'>{ stateCorrectAnswers } / { stateTestingCollection.length }</div>\n              </div>\n              <Button\n                variant='outlined'\n                color='primary'\n                className='w-full'\n                onClick={resetHandler}\n              >\n                <span className='text-xl'>Try again</span>\n              </Button>\n            </div>\n            <h2 className='text-3xl text-center mb-4'>Details</h2>\n            <div className='table mx-auto mb-4 px-2 py-1 bg-gradient-to-r from-blue-50 to-blue-200 rounded-md text-blue-700'>\n              <p>Mode:&nbsp;<b>{ mode[stateMode] }</b></p>\n              <p>Translation:&nbsp;<b>{ translation.get(stateTranslation) }</b></p>\n              <p>Difficulty:&nbsp;<b>{ difficulty[stateDifficulty] }</b></p>\n              <p>\n                Collections:&nbsp;\n                <b>\n                {\n                  stateCollectionsValue.reduce((acc, item) => {\n                    acc.push(item.label)\n                    return acc\n                  }, []).join(', ')\n                }\n                </b>\n              </p>\n              <p>Number of qustions:&nbsp;<b>{ stateNumberOfQuestions }</b></p>\n            </div>\n            <ResultsTable\n              cards={ stateCards }\n              answers={ stateAnswers }\n            />\n          </>\n      }\n      {\n        stateTest &&\n          <div className='relative w-full md:w-1/2 lg:w-1/3 mx-auto'>\n            <div className='absolute w-full -top-1'>\n              <p className='table mx-auto px-2 py-1 rounded-md border border-white bg-gradient-to-r from-green-200 to-blue-200 text-md text-blue-900'>Question #{ stateCurrentQuestion + 1 }</p>\n            </div>\n            {\n              stateCardElements !== null &&\n                <TestingCard\n                  data={stateCardElements}\n                  checkAnswerHandler={checkAnswerHandler}\n                />\n            }\n          </div>\n      }\n      {\n        stateSetup &&\n          <div className='w-full md:w-1/2 lg:w-1/3 mx-auto'>\n            <div className='mb-4'>\n              <FormControl className='w-full'>\n                <label className='mb-1 text-sm text-gray-500'>Mode</label>\n                <ToggleButtonGroup\n                  value={stateMode}\n                  exclusive\n                  onChange={(event, value) => setMode(value)}\n                  aria-label='mode'\n                  className='w-full'\n                >\n                  <ToggleButton value='kana' aria-label='kana mode' className='w-full'>\n                    仮名\n                  </ToggleButton>\n                  <ToggleButton value='kanji' aria-label='kanji mode' className='w-full'>\n                    漢字\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </FormControl>\n            </div>\n\n            <div className='mb-4'>\n              <FormControl className='w-full'>\n                <label className='mb-1 text-sm text-gray-500'>Translation</label>\n                <ToggleButtonGroup\n                  value={stateTranslation}\n                  exclusive\n                  onChange={(event, value) => setTranslation(value)}\n                  aria-label='translation'\n                  className='w-full'\n                >\n                  <ToggleButton value={false} aria-label='translation disabled' className='w-full'>\n                    Disabled\n                  </ToggleButton>\n                  <ToggleButton value={true} aria-label='translation enabled' className='w-full'>\n                    Enabled\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </FormControl>\n            </div>\n\n            <div className='mb-10'>\n              <FormControl className='w-full'>\n                <label className='mb-1 text-sm text-gray-500'>Difficulty</label>\n                <ToggleButtonGroup\n                  value={stateDifficulty}\n                  exclusive\n                  onChange={(event, value) => setDifficulty(value)}\n                  aria-label='difficulty'\n                  className='w-full'\n                >\n                  <ToggleButton value={2} aria-label='easy' className='w-full'>\n                    Easy\n                  </ToggleButton>\n                  <ToggleButton value={3} aria-label='medium' className='w-full'>\n                    Medium\n                  </ToggleButton>\n                  <ToggleButton value={4} aria-label='hard' className='w-full'>\n                    Hard\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </FormControl>\n            </div>\n\n            <div className='mb-4'>\n              <FormControl\n                variant='outlined'\n                className='w-full'\n              >\n                <Autocomplete\n                  multiple\n                  disableCloseOnSelect\n                  autoHighlight\n                  options={\n                    collections.index.filter(group => group.label !== 'ABC').reduce((acc, group) => ([\n                      ...acc,\n                      ...group.options.map(\n                        (option, idx) => ({\n                          label: option.label, value: option.value, group: group.label\n                        })\n                      )\n                    ]), [])\n                  }\n                  groupBy={ option => option.group }\n                  getOptionLabel={ option => option.label }\n                  getOptionSelected={ (option, value) => option.value === value.value }\n                  renderInput={ params => <TextField {...params} label='Collections' /> }\n                  value={ stateCollectionsValue || '' }\n                  onChange={(event, value) => {\n                    setCollectionsValue(value)\n                    setGeneralCollection(\n                      value.reduce((acc, item) => {\n                        return acc.concat(collections.data[item.value])\n                      }, [])\n                    )\n                  }}\n                />\n              </FormControl>\n            </div>\n\n            <div className='mb-8'>\n              <FormControl className='w-full'>\n                <label className='mb-1 text-sm text-gray-500'>Number of questions</label>\n                <ToggleButtonGroup\n                  value={stateNumberOfQuestions}\n                  exclusive\n                  onChange={(event, value) => setNumberOfQuestions(value)}\n                  aria-label='number of questions'\n                  className='w-full'\n                >\n                  <ToggleButton value={5} aria-label='5' className='w-full' disabled={ stateGeneralCollection.length < 5 }>\n                    <b className='text-xl'>5</b>\n                  </ToggleButton>\n                  <ToggleButton value={15} aria-label='15' className='w-full' disabled={ stateGeneralCollection.length < 15 }>\n                    <b className='text-xl'>15</b>\n                  </ToggleButton>\n                  <ToggleButton value={25} aria-label='25' className='w-full' disabled={ stateGeneralCollection.length < 25 }>\n                    <b className='text-xl'>25</b>\n                  </ToggleButton>\n                  <ToggleButton value={50} aria-label='50' className='w-full' disabled={ stateGeneralCollection.length < 50 }>\n                    <b className='text-xl'>50</b>\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </FormControl>\n            </div>\n\n            <Button\n              variant='contained'\n              disableElevation\n              color='secondary'\n              size='large'\n              className='w-full'\n              onClick={() => {\n                setSetup(false)\n                setTest(true)\n              }}\n              disabled={ stateCollectionsValue.length === 0 || stateNumberOfQuestions === null }\n            >\n              Start testing\n            </Button>\n          </div>\n      }\n    </>\n  )\n}","import React from 'react'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from 'react-router-dom'\nimport cn from 'classnames'\nimport { Helmet } from 'react-helmet'\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { teal } from '@material-ui/core/colors'\n\nimport { CollectionsProvider } from './collections/CollectionsProvider'\nimport Home from './pages/index'\nimport Learning from './pages/learning'\nimport Training from './pages/training'\nimport Testing from './pages/testing'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faBookReader, faUserGraduate, faBookOpen } from '@fortawesome/free-solid-svg-icons'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: teal,\n  },\n  overrides: {\n    MuiToggleButton: {\n      root: {\n        color: teal[500],\n        backgroundColor: teal[50],\n        '&$selected': {\n          color: 'white',\n          backgroundColor: teal[400],\n          '&:hover': {\n            backgroundColor: teal[400]\n          }\n        },\n        '&:hover': {\n          backgroundColor: teal[100]\n        }\n      },\n      selected: {\n      }\n    }\n  }\n});\n\nfunction Nav() {\n  const location = useLocation()\n  \n  return (\n    <footer className='fixed bottom-0 w-full border-t border-gray-300 bg-white'>\n      <div className='container mx-auto py-3'>\n        <nav className='w-full'>\n          <ul className='flex justify-between'>\n            <li className='px-3'>\n              <Link\n                to='/'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/'}\n                )}\n              >\n                <FontAwesomeIcon icon={faHome}/>\n              </Link>\n            </li>\n            <li className='px-3'>\n              <Link\n                to='/learning'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/learning'}\n                )}\n              >\n                <FontAwesomeIcon icon={faBookOpen}/>\n              </Link>\n            </li>\n            <li className='px-3'>\n              <Link\n                to='/training'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/training'}\n                )}\n              >\n                <FontAwesomeIcon icon={faBookReader}/>\n              </Link>\n            </li>\n            <li className='px-3'>\n              <Link\n                to='/testing'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/testing'}\n                )}\n              >\n                <FontAwesomeIcon icon={faUserGraduate}/>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </footer>\n  )\n}\n\nfunction App() {\n  return (\n    <CollectionsProvider>\n      <ThemeProvider theme={theme}>\n        <Helmet>\n          <title>正解 (Seikai)</title>\n        </Helmet>\n        <Router>\n          <div className='app-container'>\n            <main className='pt-8 pb-24 bg-white'>\n              <div className='container min-h-full h-full mx-auto px-2'>\n                <Switch>\n                  <Route exact path='/'>\n                    <Home/>\n                  </Route>\n                  <Route exact path='/learning'>\n                    <Learning/>\n                  </Route>\n                  <Route exact path='/training'>\n                    <Training/>\n                  </Route>\n                  <Route exact path='/testing'>\n                    <Testing/>\n                  </Route>\n                </Switch>\n              </div>\n            </main>  \n            <Nav/>\n          </div>\n        </Router>\n      </ThemeProvider>\n    </CollectionsProvider>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log)\n"],"sourceRoot":""}