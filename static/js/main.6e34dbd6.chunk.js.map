{"version":3,"sources":["collections/CollectionsProvider.js","pages/index.js","cards/LearningCard.js","pages/learning.js","cards/TrainingCard.js","helpers/array.js","pages/training.js","helpers/card.js","pages/testing.js","App.js","reportWebVitals.js","index.js"],"names":["CollectionsContext","React","createContext","useCollections","useContext","CollectionsProvider","children","useState","stateCollections","setCollections","useEffect","reduce","acc","item","idx","index","findIndex","f","label","group","push","options","name","value","code","data","processData","_hiragana","_katakana","_kanji_numbers","Provider","Home","Helmet","className","to","LearningCard","blind","cn","style","willChange","jp","onyomi","kunyomi","en","Learning","stateCollection","setCollection","stateBlind","setBlind","collections","placeholder","onChange","checked","id","icons","event","target","htmlFor","length","map","card","TrainingCard","checkAnswerHandler","riddle","option","onClick","isCorrect","jsx","shuffle","array","i","j","Math","floor","random","pickElement","arr","exclude","Array","isArray","p","indexOf","Training","stateTotalAnswers","setTotalAnswers","stateCorrectAnswers","setCorrectAnswers","stateMode","setMode","stateDifficulty","setDifficulty","stateCardElements","setCardElements","picks","mode","split","modeRiddle","modeOptions","opt","createTrainingCardElements","ToggleButtonGroup","exclusive","aria-label","ToggleButton","Testing","Nav","location","useLocation","pathname","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.6e34dbd6.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\n\nimport _hiragana from './json/hiragana.json'\nimport _katakana from './json/katakana.json'\nimport _kanji_numbers from './json/kanji-numbers.json'\n\nconst CollectionsContext = React.createContext()\n\nfunction processData(data = []) {\n  return data.reduce((acc, item) => {\n    const idx = acc.index.findIndex(f => f.label === item.group)\n\n    if (idx === -1) {\n      acc.index.push({ label: item.group, options: [{ label: item.name , value: item.code }] })\n    } else {\n      acc.index[idx].options.push({ label: item.name , value: item.code })\n    }\n\n    acc.data[item.code] = item.data\n\n    return acc\n  }, {index: [], data: {}})\n}\n\nexport const useCollections = () => useContext(CollectionsContext)\n\nexport const CollectionsProvider = ({ children }) => {\n  const [stateCollections, setCollections] = useState([])\n\n  useEffect(() => {\n    setCollections(processData([_hiragana, _katakana, _kanji_numbers]))\n  }, [])\n\n  return (\n    <CollectionsContext.Provider value={stateCollections}>\n      { children }\n    </CollectionsContext.Provider>\n  )\n}","import { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nfunction Home() {\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Home page</title>\n      </Helmet>\n      <h1 className='mb-8 text-7xl text-center'>正解 (Seikai)</h1>\n      <p className='mb-4'>\n        Seikai is the simple and fast web application for learning and practicing your japanese language!\n      </p>\n      <div className='flex flex-col md:flex-row items-center w-full border border-indigo-600 rounded-lg overflow-hidden'>\n        <Link\n          to='/learning'\n          className='block w-full px-1 py-8 text-3xl text-center hover:bg-indigo-100 border-b md:border-r md:border-b-0 border-indigo-600'\n        >\n          Start learn kana and kanji\n        </Link>\n        <Link\n          to='/training'\n          className='block w-full px-1 py-8 text-3xl text-center hover:bg-indigo-100'\n        >\n          Practice\n        </Link>\n      </div>\n    </>\n  )\n}\n\nexport default Home","import cn from 'classnames'\nfunction LearningCard({\n  data,\n  blind,  \n}) {\n  return (\n    <div className='group border border-indigo-600 rounded hover:bg-indigo-100 w-full px-2 cursor-pointer'>\n      <div\n        className={cn(\n          {\n            'opacity-0': blind\n          },\n          'group-hover:opacity-100 transition-all duration-200 flex justify-center text-8xl m-4'\n        )}\n        style={{willChange: 'opacity'}}\n      >\n        { data.jp }\n      </div>\n      {\n        (data.onyomi || data.kunyomi) &&\n          <div className='py-2 border-t border-b border-indigo-600'>\n            <div>\n              Onyomi: <b>{ data.onyomi || <>&mdash;</> }</b>\n            </div>\n            <div>\n              Kunyomi: <b>{ data.kunyomi || <>&mdash;</> }</b>\n            </div>\n          </div>\n      }\n      <div className='py-1 text-center'>\n        <b>{ data.en }</b>\n      </div>\n    </div>\n  )\n}\n\nexport { LearningCard }","import { useState } from 'react'\nimport Select from 'react-select'\nimport Toggle from 'react-toggle'\nimport 'react-toggle/style.css'\nimport { Helmet } from 'react-helmet'\n\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { LearningCard } from '../cards/LearningCard'\n\nexport default function Learning() {\n  const [stateCollection, setCollection] = useState([])\n  const [stateBlind, setBlind] = useState(false)\n  const collections = useCollections()\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Learning</title>\n      </Helmet>\n      <div className='flex flex-col md:flex-row justify-between items-center mb-8'>\n        <div className='w-full md:w-1/3 py-3'>\n          <Select\n            placeholder='Select collection...'\n            options={ collections.index }\n            onChange={(value) => { setCollection(collections.data[value.value]) }}\n          />\n        </div>\n        <div className='flex items-center py-3 cursor-pointer'>\n          <Toggle\n            checked={stateBlind}\n            className='mr-4'\n            id='blindMode'\n            icons={false}\n            onChange={(event) => { setBlind(event.target.checked) }}\n          />\n          <label htmlFor='blindMode'>\n            Blind mode\n          </label>\n        </div>\n      </div>\n      {\n        stateCollection.length === 0 &&\n          <div\n            className='text-3xl italic text-center text-gray-400'\n          >\n            Please, select collection to learn\n          </div>\n      }\n      <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4'>\n        {\n          stateCollection.map((card, idx) => (\n            <LearningCard\n              key={idx}\n              data={card}\n              blind={stateBlind}\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}","import cn from 'classnames';\nfunction TrainingCard({\n  data = [],\n  checkAnswerHandler,\n}) {\n  return (\n    <div\n      className='border border-indigo-600 rounded w-full'\n    >\n      <div className='flex justify-center items-center h-60 p-1'>\n        { data.riddle }\n      </div>\n      <div className='flex border-t border-indigo-600'>\n        {\n          data.options.map((option, idx) => (\n            <div\n              key={idx}\n              className={cn(\n                'w-full cursor-pointer hover:bg-indigo-100 p-1',\n                { 'border-l border-indigo-600': idx > 0 }\n              )}\n              onClick={() => checkAnswerHandler(option.isCorrect)}\n            >\n              { option.jsx }\n            </div>    \n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport { TrainingCard }","// https://javascript.info/task/shuffle\nexport function shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array\n}\n\nexport function pickElement(arr, exclude) {\n  if (arr.length === 0) return null\n\n  if (!Array.isArray(exclude)) {\n    return arr[Math.floor(Math.random() * arr.length)]\n  } else {\n    const p = arr[Math.floor(Math.random() * arr.length)]\n\n    if (exclude.indexOf(p) === -1) {\n      return p\n    } else {\n      return pickElement(arr, exclude)\n    }\n  }\n}","import { useEffect, useState } from 'react'\nimport Select from 'react-select'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\nimport { Helmet } from 'react-helmet'\n\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { TrainingCard } from '../cards/TrainingCard'\nimport { pickElement } from '../helpers/array'\nimport { createTrainingCardElements } from '../helpers/card';\n\nexport default function Training() {\n  const [stateTotalAnswers, setTotalAnswers] = useState(0)\n  const [stateCorrectAnswers, setCorrectAnswers] = useState(0)\n\n  const [stateMode, setMode] = useState('jp-en')\n  const [stateDifficulty, setDifficulty] = useState(2)\n  const [stateCollection, setCollection] = useState([])\n  \n  const [stateCardElements, setCardElements] = useState(null)\n  const collections = useCollections()\n  \n  useEffect(() => {\n    if (stateCollection.length > 0) {\n      const pick = pickElement(stateCollection)\n      let options = [pick]\n  \n      for (let i = 0; i < stateDifficulty - 1; i++) {\n        options.push(pickElement(stateCollection, options));\n      }\n\n      // options = shuffle(options)\n\n      setCardElements(createTrainingCardElements(options, stateMode))\n    }\n  }, [stateTotalAnswers, stateCollection, stateDifficulty, stateMode])\n\n\n  function checkAnswerHandler(isCorrect) {\n    setTotalAnswers(stateTotalAnswers + 1)\n    if (isCorrect) {\n      setCorrectAnswers(stateCorrectAnswers + 1)\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Training</title>\n      </Helmet>\n      <div>Total answers count: <b>{ stateTotalAnswers }</b></div>\n      <div className='mb-8 text-green-600'>Correct answers count: <b>{ stateCorrectAnswers }</b></div>\n      <div className='flex justify-center mb-4'>\n        <ToggleButtonGroup\n          value={stateMode}\n          exclusive\n          onChange={(event, value) => setMode(value)}\n          aria-label='difficulty'\n          className='w-full md:w-1/2 lg:w-1/3'\n        >\n          <ToggleButton value='jp-en' aria-label='japanese mode' className='w-full'>\n            日本語\n          </ToggleButton>\n          <ToggleButton value='en-jp' aria-label='english mode' className='w-full'>\n            English\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </div>\n      <div className='flex justify-center mb-4'>\n        <ToggleButtonGroup\n          value={stateDifficulty}\n          exclusive\n          onChange={(event, value) => setDifficulty(value)}\n          aria-label='difficulty'\n          className='w-full md:w-1/2 lg:w-1/3'\n        >\n          <ToggleButton value={2} aria-label='easy' className='w-full'>\n            Easy\n          </ToggleButton>\n          <ToggleButton value={3} aria-label='medium' className='w-full'>\n            Medium\n          </ToggleButton>\n          <ToggleButton value={4} aria-label='hard' className='w-full'>\n            Hard\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </div>\n      <div className='flex justify-center items-center mb-8'>\n        <div className='w-full md:w-1/2 lg:w-1/3'>\n          <Select\n            placeholder='Select collection...'\n            options={ collections.index }\n            onChange={(value) => { setCollection(collections.data[value.value]) }}\n          />\n        </div>\n      </div>\n      {\n        stateCardElements === null &&\n        <div\n          className='text-3xl italic text-center text-gray-400'\n        >\n          Please, select collection to practice\n        </div>\n      }\n      {\n        stateCardElements !== null &&\n          <div className='flex justify-center'>\n            <div className='w-full md:w-1/2 lg:w-1/3'>\n              <TrainingCard\n                data={stateCardElements}\n                checkAnswerHandler={checkAnswerHandler}\n              />\n            </div>\n          </div>\n      }\n    </>\n  )\n}","import { shuffle } from './array'\n\nexport function createTrainingCardElements(picks, mode) {\n  const [modeRiddle, modeOptions] = mode.split('-')\n  let riddle = []\n  let options = []\n\n  if (modeRiddle === 'jp') {\n    riddle = \n      <div className='text-8xl'>\n        { picks[0].jp }\n      </div>\n  } else if (modeRiddle === 'en') {\n    riddle =\n      <div className='flex flex-col'>\n        <div className='flex justify-center items-center h-10 text-xl'>\n          <b>{ picks[0].en }</b>\n        </div>\n        {\n          (picks[0].onyomi || picks[0].kunyomi) &&\n            <div className='flex flex-col justify-center items-center h-40 border-indigo-600'>\n              <div className='mb-4 text-center'>\n                Onyomi:\n                <br/>\n                <b>{ picks[0].onyomi || <>&mdash;</> }</b>\n              </div>\n              <div className='text-center'>\n                Kunyomi:\n                <br/>\n                <b>{ picks[0].kunyomi || <>&mdash;</> }</b>\n              </div>\n            </div>\n        }\n      </div>\n  }\n\n  if (modeOptions === 'en') {\n    options = shuffle(picks.map((opt, idx) => ({\n      isCorrect: !idx,\n      jsx: <>\n        {\n          (opt.onyomi || opt.kunyomi) &&\n            <div className='flex flex-col justify-center items-center h-40 border-b border-indigo-600'>\n              <div className='mb-4 text-center'>\n                Onyomi:\n                <br/>\n                <b>{ opt.onyomi || <>&mdash;</> }</b>\n              </div>\n              <div className='text-center'>\n                Kunyomi:\n                <br/>\n                <b>{ opt.kunyomi || <>&mdash;</> }</b>\n              </div>\n            </div>\n        }\n        <div className='flex justify-center items-center h-10'>\n          <b>{ opt.en }</b>\n        </div>\n      </>\n    })))\n  } else if (modeOptions === 'jp') {\n    options = shuffle(picks.map((opt, idx) => ({\n      isCorrect: !idx,\n      jsx:\n        <div className='p-4 text-3xl text-center'>\n          { opt.jp }\n        </div>\n    })))\n  }\n\n  return { riddle, options }\n}","import { Helmet } from 'react-helmet'\n\nexport default function Testing() {\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Testing</title>\n      </Helmet>\n    </>\n  )\n}","import React from 'react'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from 'react-router-dom'\nimport cn from 'classnames'\nimport { Helmet } from 'react-helmet';\n\nimport { CollectionsProvider } from './collections/CollectionsProvider'\nimport Home from './pages/index'\nimport Learning from './pages/learning'\nimport Training from './pages/training'\nimport Testing from './pages/testing';\n\nfunction Nav() {\n  const location = useLocation()\n  \n  return (\n    <header className='border-b shadow-lg'>\n      <div className='container mx-auto flex px-4 py-5'>\n        <div className='mr-8'>\n          <Link to='/'>\n            正解\n          </Link>\n        </div>\n        <nav>\n          <ul className='flex'>\n            {/* <li className='mr-6'>\n              <Link\n                to='/'\n                className={cn(\n                  'font-semibold',\n                  {'text-red-500': location.pathname === '/'}\n                )}\n              >Home</Link>\n            </li> */}\n            {/* TODO: rework with useRouteMatch */}\n            <li className='mr-6'>\n              <Link\n                to='/learning'\n                className={cn(\n                  'font-semibold',\n                  {'text-red-500': location.pathname === '/learning'}\n                )}\n              >Learning</Link>\n            </li>\n            <li className='mr-6'>\n              <Link\n                to='/training'\n                className={cn(\n                  'font-semibold',\n                  {'text-red-500': location.pathname === '/training'}\n                )}\n              >Training</Link>\n            </li>\n            <li className='mr-6'>\n              <Link\n                to='/testing'\n                className={cn(\n                  'font-semibold',\n                  {'text-red-500': location.pathname === '/testing'}\n                )}\n              >Testing</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nfunction App() {\n  return (\n    <CollectionsProvider>\n      <Helmet>\n        <title>正解 (Seikai)</title>\n      </Helmet>\n      <Router>\n        <Nav/>\n        <div className='container mx-auto px-4'>\n          <main className='py-16'>\n            <Switch>\n              <Route exact path='/'>\n                <Home/>\n              </Route>\n              <Route exact path='/learning'>\n                <Learning/>\n              </Route>\n              <Route exact path='/training'>\n                <Training/>\n              </Route>\n              <Route exact path='/testing'>\n                <Testing/>\n              </Route>\n            </Switch>\n          </main>  \n        </div>\n      </Router>\n    </CollectionsProvider>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log)\n"],"sourceRoot":""}