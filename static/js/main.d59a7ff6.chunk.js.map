{"version":3,"sources":["collections/CollectionsProvider.js","pages/index.js","cards/LearningCard.js","pages/learning.js","cards/TrainingCard.js","helpers/array.js","helpers/card.js","pages/training.js","components/ResultsTable.js","pages/testing.js","App.js","reportWebVitals.js","index.js"],"names":["CollectionsContext","React","createContext","useCollections","useContext","CollectionsProvider","children","useState","index","data","stateCollections","setCollections","useEffect","reduce","acc","item","idx","findIndex","f","label","group","push","options","name","value","code","processData","_hiragana","_katakana","_kanji_numbers","_kanji_study","_kanji_calendar","Provider","collections","learningCollections","hiragana","_hiraganaForLearning","katakana","_katakanaForLearning","Home","colors","Helmet","className","to","text","map","section","cn","LearningCard","blind","style","willChange","height","jp","kunyomi","native","transliteration","onyomi","en","SimpleLearningCard","Learning","stateCollectionData","setCollectionData","stateCollection","setCollection","stateKanjiMode","setKanjiMode","stateLearningSection","setLearningSection","FormControl","id","ToggleButtonGroup","aria-labelledby","exclusive","onChange","event","ToggleButton","aria-label","variant","InputLabel","Select","labelId","defaultValue","target","filter","ListSubheader","option","optionIdx","MenuItem","length","card","indexOf","grid","row","rowIdx","cell","cellIdx","find","TrainingCard","checkAnswerHandler","dir","riddle","onMouseUp","indexOfCorrect","Math","random","toString","shuffle","array","i","j","floor","pickElement","arr","exclude","Array","isArray","p","CreateCard","picks","mode","spelling","this","modeRiddle","split","modeOptions","createData","pick","isCorrect","opt","$riddle","$options","undefined","Training","stateTotalAnswers","setTotalAnswers","stateCorrectAnswers","setCorrectAnswers","stateMode","setMode","stateSpelling","setSpelling","stateDifficulty","setDifficulty","stateCardElements","setCardElements","cardElements","exportTrainingCardElements","ResultsTable","cards","answers","cardIdx","prototype","exportResultsCardElements","call","optIdx","Testing","stateCollectionsValue","setCollectionsValue","stateGeneralCollection","setGeneralCollection","stateNumberOfQuestions","setNumberOfQuestions","stateTestingCollection","setTestingCollection","stateCards","setCards","stateAnswers","setAnswers","stateCurrentQuestion","setCurrentQuestion","stateSetup","setSetup","stateTest","setTest","stateResult","setResult","collection","cardData","testingCardElements","exportTestingCardElements","state","Button","color","onClick","2","3","4","join","Autocomplete","multiple","disableCloseOnSelect","autoHighlight","groupBy","getOptionLabel","getOptionSelected","renderInput","params","TextField","concat","disabled","disableElevation","size","theme","createMuiTheme","palette","primary","teal","overrides","MuiToggleButton","root","backgroundColor","selected","Nav","location","useLocation","pathname","icon","faHome","faBookOpen","faBookReader","faUserGraduate","App","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.d59a7ff6.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\n\nimport _hiraganaForLearning from './json/hiragana-for-learning.json'\nimport _katakanaForLearning from './json/katakana-for-learning.json'\nimport _hiragana from './json/hiragana.json'\nimport _katakana from './json/katakana.json'\nimport _kanji_numbers from './json/kanji-numbers.json'\nimport _kanji_study from './json/kanji-study.json'\nimport _kanji_calendar from './json/kanji-calendar.json'\n\nconst CollectionsContext = React.createContext()\n\nfunction processData(data = []) {\n  return data.reduce((acc, item) => {\n    const idx = acc.index.findIndex(f => f.label === item.group)\n\n    if (idx === -1) {\n      acc.index.push({ label: item.group, options: [{ label: item.name , value: item.code }] })\n    } else {\n      acc.index[idx].options.push({ label: item.name , value: item.code })\n    }\n\n    acc.data[item.code] = item.data\n\n    return acc\n  }, {index: [], data: {}})\n}\n\nexport const useCollections = () => useContext(CollectionsContext)\n\nexport const CollectionsProvider = ({ children }) => {\n  const [stateCollections, setCollections] = useState({ index: [], data: {} })\n\n  useEffect(() => {\n    setCollections(processData([\n      _hiragana,\n      _katakana,\n      _kanji_numbers,\n      _kanji_study,\n      _kanji_calendar\n    ]))\n  }, [])\n\n  return (\n    <CollectionsContext.Provider value={{\n      collections: stateCollections,\n      learningCollections: {\n        hiragana: _hiraganaForLearning,\n        katakana: _katakanaForLearning\n      }\n    }}>\n      { children }\n    </CollectionsContext.Provider>\n  )\n}","import { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport cn from 'classnames'\n\nfunction Home() {\n  const sections = [\n    {\n      to: '/learning',\n      text: 'Start learn kana and kanji'\n    },\n    {\n      to: '/training',\n      text: 'Practice'\n    },\n    {\n      to: '/testing',\n      text: 'Test your knowledge'\n    }\n  ]\n  const colors = ['red', 'yellow', 'blue', 'green', 'purple', 'pink']\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Home page</title>\n      </Helmet>\n      <div className='flex flex-col justify-center h-full'>\n        <h1 className='table mb-8 text-3xl md:text-7xl text-center'>\n          <span className='inline-block pt-4 pb-6 bg-gradient-to-r from-blue-400 to-green-400 rounded-xl text-white'>\n            &nbsp;正解 (Seikai)&nbsp;\n          </span>\n        </h1>\n        <p className='mb-20 text-2xl text-center'>\n          The simple and fast web application for learning and practicing your <span className='inline-block pb-1 bg-gradient-to-r from-red-400 to-yellow-400 rounded-lg text-white'>&nbsp;&nbsp;japanese&nbsp;&nbsp;</span> language!\n        </p>\n        <div className='flex flex-col md:flex-row items-stretch w-full rounded-xl overflow-hidden'>\n          {\n            sections.map((section, idx) => (\n              <Link\n                key={idx}\n                to={section.to}\n                className={cn(\n                  'flex justify-center items-center w-full py-6 bg-gradient-to-r text-xl text-white text-center',\n                  `from-${colors[idx * 2 + 0]}-400 to-${colors[idx * 2 + 1]}-400`,\n                  `hover:from-${colors[idx * 2 + 0]}-500 hover:to-${colors[idx * 2 + 1]}-500`,\n                  {\n                    'border-t md:border-l md:border-t-0 border-white': idx \n                  }\n                )}\n              >\n                {section.text}\n              </Link>\n            ))\n          }\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Home","import cn from 'classnames'\n\nfunction LearningCard({\n  data,\n  blind,\n  className\n}) {\n  return (\n    <div\n      className={cn(\n        'group flex flex-col w-full rounded-lg cursor-pointer overflow-hidden',\n        className\n      )}\n    >\n      <div\n        className='flex justify-center items-center text-5xl'\n        style={{ willChange: 'background-color', height: '90px' }}\n      >\n        <span className={cn(\n          'font-thin group-hover:opacity-100 transition-all duration-300',\n          {\n            'opacity-0': blind\n          }\n        )}>\n          { data.jp }\n        </span>\n      </div>\n      \n      <div\n        className='flex justify-center items-stretch border-t border-white'\n        style={{ willChange: 'background-color', height: '120px' }}\n      >\n        <div className='w-1/2 p-2 border-r border-white'>\n          <p className='mb-2 text-sm'>Kunyomi:</p>\n          <p>{ data?.kunyomi.native || <>&mdash;</> }</p>\n          <p>{ data?.kunyomi.transliteration || <>&mdash;</> }</p>\n        </div>\n        <div className='w-1/2 p-2'>\n          <p className='mb-2 text-sm'>Onyomi:</p>\n          <p>{ data?.onyomi.native || <>&mdash;</> }</p>\n          <p>{ data?.onyomi.transliteration || <>&mdash;</> }</p>\n        </div>\n      </div>\n      \n      <div\n        className='flex justify-center items-center border-t border-white'\n        style={{ willChange: 'background-color', height: '40px' }}\n      >\n        <b>{ data.en }</b>\n      </div>\n    </div>\n  )\n}\n\nfunction SimpleLearningCard({\n  data,\n  className\n}) {\n  return (\n    <div className={cn('rounded-lg aspect-h-1 aspect-w-1 cursor-pointer', className)}>\n      <div className='flex flex-col justify-center items-center'>\n        <div className='text-sm sm:text-lg md:text-md lg:text-xl xl:text-2xl'>\n          { data?.jp[0] }\n        </div>\n        <div className='text-sm sm:text-md md:text-md lg:text-lg xl:text-xl'>\n          { data?.en[0] }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { LearningCard, SimpleLearningCard }","import { useState, Fragment } from 'react'\nimport { Helmet } from 'react-helmet'\nimport {\n  Select, MenuItem, ListSubheader, InputLabel, FormControl,\n  ToggleButtonGroup, ToggleButton\n} from '@material-ui/core'\n\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { LearningCard, SimpleLearningCard } from '../cards/LearningCard'\n\nexport default function Learning() {\n  const [stateCollectionData, setCollectionData] = useState([])\n  const [stateCollection, setCollection] = useState('')\n  const [stateKanjiMode, setKanjiMode] = useState('visible')\n  const [stateLearningSection, setLearningSection] = useState('hiragana')\n  \n  const { collections, learningCollections } = useCollections()\n\n  const colors = ['red', 'yellow', 'purple', 'green', 'blue']\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Learning</title>\n      </Helmet>\n      <div className='w-full md:w-1/2 lg:w-1/3 mx-auto mb-8'>\n        <div className='mb-10'>\n          <FormControl className='w-full'>\n            <label\n              id='kana-and-kanji-mode-label'\n              className='mb-1 text-sm text-gray-500'\n            >\n              Learning Section\n            </label>\n            <ToggleButtonGroup\n              aria-labelledby=''\n              value={stateLearningSection}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setLearningSection(value) }}\n              className='w-full'\n            >\n              <ToggleButton value='hiragana' aria-label='' className='w-full'>\n                ひらがな\n              </ToggleButton>\n              <ToggleButton value='katakana' aria-label='' className='w-full'>\n                カタカナ\n              </ToggleButton>\n              <ToggleButton value='kanji' aria-label='' className='w-full'>\n                漢字\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n        {\n          stateLearningSection === 'kanji' &&\n            <>\n              <div className='mb-4'>\n                <FormControl\n                  variant='outlined'\n                  className='w-full'\n                >\n                  <InputLabel id='collection-label'>Collection</InputLabel>\n                  <Select\n                    labelId='collection-label'\n                    defaultValue=''\n                    value={ stateCollection }\n                    label='Collection'\n                    onChange={event => {\n                      setCollection(event.target.value)\n                      setCollectionData(collections.data[event.target.value])\n                    }}\n                  >\n                    {\n                      collections.index.filter(group => group.label !== 'ABC').reduce((acc, group) => {\n                        return [\n                          ...acc,\n                          <ListSubheader key={ group.label }>{ group.label }</ListSubheader>,\n                          group.options.map((option, optionIdx) => (\n                            <MenuItem key={ optionIdx } value={ option.value }>\n                              { option.label }\n                            </MenuItem>\n                          ))\n                        ]\n                      }, [])\n                    }\n                  </Select>\n                </FormControl>\n              </div>\n              <div>\n                <FormControl className='w-full'>\n                  <label\n                    id='kanji-mode-label'\n                    className='mb-1 text-sm text-gray-500'\n                  >\n                    Kanji mode\n                  </label>\n                  <ToggleButtonGroup\n                    aria-labelledby='kanji-mode-label'\n                    value={stateKanjiMode}\n                    exclusive\n                    onChange={(event, value) => { if (value !== null) setKanjiMode(value) }}\n                    className='w-full'\n                  >\n                    <ToggleButton value='visible' aria-label='visible mode' className='w-full'>\n                      Visible\n                    </ToggleButton>\n                    <ToggleButton value='hidden' aria-label='hidden mode' className='w-full'>\n                      Hidden\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                </FormControl>\n              </div>\n            </>\n        }\n      </div>\n      {\n        (stateCollectionData.length === 0 && stateLearningSection === 'kanji') &&\n          <div\n            className='text-3xl italic text-center text-gray-400'\n          >\n            Please, select collection to learn\n          </div>\n      }\n      {\n        stateLearningSection === 'kanji' &&\n          <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4'>\n            {\n              stateCollectionData.map((card, idx) => (\n                <LearningCard\n                  key={ idx }\n                  data={ card }\n                  blind={ stateKanjiMode === 'hidden' }\n                  className={`\n                    bg-gradient-to-r\n                    from-${colors[idx % colors.length]}-200\n                    to-${colors[(idx + 4) % colors.length]}-200\n                    text-${colors[(idx + 3) % colors.length]}-900\n                  `}\n                />\n              ))\n            }\n          </div>\n      }\n      {\n        ['hiragana', 'katakana'].indexOf(stateLearningSection) > -1 &&\n          <div className='grid grid-cols-6 md:grid-cols-none md:grid-flow-row md:auto-rows-max gap-1 lg:gap-2'>\n            {\n              learningCollections[stateLearningSection].grid.reduce((acc, row, rowIdx) => (\n                [\n                  ...acc,\n                  <div\n                    key={ rowIdx }\n                    className='grid grid-rows-10 md:grid-rows-none md:grid-cols-10 gap-1 lg:gap-2'\n                  >\n                    {\n                      row.map((cell, cellIdx) => {\n                        const data = learningCollections[stateLearningSection].data.find(item => item.en[0] === cell)\n\n                        return data\n                          ? <SimpleLearningCard\n                              key={ cellIdx }\n                              data={ data }\n                              className={`\n                                bg-green-300 bg-opacity-${ (rowIdx + 2) * 10 }\n                                hover:bg-red-300 hover:bg-opacity-${ (rowIdx + 2) * 10 }\n                                text-green-800\n                                hover:text-red-800\n                              `}\n                            />\n                          : <div key={ cellIdx } >&nbsp;</div>\n                      }\n                      )\n                    }\n                  </div>\n                ]\n              ), [])\n            }\n          </div>\n      }\n    </>\n  )\n}","import cn from 'classnames'\n\nfunction TrainingCard({\n  data = null,\n  checkAnswerHandler,\n  dir = 'row'\n}) {\n  if (data === null) {\n    return <div className='w-full text-center'>No data provided for card</div>\n  }\n\n  return (\n    <div\n      className='w-full rounded-xl overflow-hidden'\n      style={{ height: '500px' }}\n    >\n      <div className={cn(\n        'flex justify-center items-center bg-gradient-to-r from-yellow-200 to-red-200 text-red-900',\n        {\n          'h-2/3': dir === 'row',\n          'h-1/3': dir === 'col'\n        }\n      )}>\n        { data.riddle }\n      </div>\n      <div className={cn(\n        'grid border-t border-white',\n        {\n          'grid-flow-col auto-cols-fr h-1/3': dir === 'row',\n          'grid-flow-row auto-rows-fr h-2/3': dir === 'col'\n        }\n      )}>\n        {\n          data.options.map((option, idx) => (\n            <div\n              key={ Math.random().toString() }\n              className={cn(\n                `flex justify-center items-center\n                bg-gradient-to-r from-green-200 to-blue-200 hover:from-green-300 hover:to-blue-300\n                text-blue-900 cursor-pointer`,\n                { 'border-l border-white': idx > 0 && dir === 'row' },\n                { 'border-t border-white': idx > 0 && dir === 'col' }\n              )}\n              onMouseUp={() => checkAnswerHandler(idx === data.indexOfCorrect, idx)}\n            >\n              { option }\n            </div>    \n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport { TrainingCard }","// https://javascript.info/task/shuffle\nexport function shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array\n}\n\nexport function pickElement(arr, exclude) {\n  if (arr.length === 0) return null\n\n  if (!Array.isArray(exclude)) {\n    return arr[Math.floor(Math.random() * arr.length)]\n  } else {\n    const p = arr[Math.floor(Math.random() * arr.length)]\n\n    if (exclude.indexOf(p) === -1) {\n      return p\n    } else {\n      return pickElement(arr, exclude)\n    }\n  }\n}","import { shuffle } from './array'\n\nexport class CreateCard {\n  constructor({ picks, mode, spelling }) {\n    this.picks = picks\n    this.mode = mode\n    this.spelling = spelling\n    this.modeRiddle = mode.split('-')[0]\n    this.modeOptions = mode.split('-')[1]\n\n    this.riddle = {}\n    this.options = []\n    this.indexOfCorrect = -1\n\n    this.createData()\n  }\n\n  createData() {\n    switch (this.modeRiddle) {\n      case 'jp':\n        this.riddle = {\n          jp: this.picks[0].jp,\n          onyomi: this.picks[0].onyomi?.[this.spelling],\n          kunyomi: this.picks[0].kunyomi?.[this.spelling]\n        }\n      break\n\n      case 'en':\n        this.riddle = {\n          en: this.picks[0].en,\n          onyomi: this.picks[0].onyomi?.[this.spelling],\n          kunyomi: this.picks[0].kunyomi?.[this.spelling]\n        }\n      break\n\n      default: \n        this.riddle = {}\n      break\n    }\n\n    switch (this.modeOptions) {\n      case 'jp':\n        this.options = shuffle(this.picks.map((pick, idx) => ({\n          isCorrect: !idx,\n          jp: pick.jp,\n          onyomi: pick.onyomi?.[this.spelling],\n          kunyomi: pick.kunyomi?.[this.spelling]\n        })))\n      break\n\n      case 'en':\n        this.options = shuffle(this.picks.map((pick, idx) => ({\n          isCorrect: !idx,\n          en: pick.en,\n          onyomi: pick.onyomi?.[this.spelling],\n          kunyomi: pick.kunyomi?.[this.spelling]\n        })))\n      break\n\n      default:\n        this.options = []\n      break\n    }\n\n    this.indexOfCorrect = this.options.findIndex(opt => opt.isCorrect)\n  }\n\n  exportResultsCardElements() {\n    let $riddle\n    let $options\n\n    switch (this.mode) {\n      case 'jp-en':\n        $riddle = \n          <span className='text-3xl'>\n            { this.riddle.jp }\n          </span>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-2 py-1'>\n            <b>{ opt.en }</b>\n            {\n              (opt.onyomi !== undefined || opt.kunyomi !== undefined) &&\n                <span className='text-sm'>\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\n                  音読み:&nbsp;&nbsp;&nbsp;{ opt.onyomi || null }\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\n                  訓読み:&nbsp;&nbsp;&nbsp;{ opt.kunyomi || null }\n                </span>\n            }\n          </div>\n        ))\n      break\n      \n      case 'en-jp':\n        $riddle =\n          <b className='text-xl'>\n            { this.riddle.en }\n          </b>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-2 py-1'>\n          { opt.jp }\n          {\n            (opt.onyomi !== undefined || opt.kunyomi !== undefined) &&\n              <span className='text-sm'>\n                &nbsp;&nbsp;|&nbsp;&nbsp;\n                音読み:&nbsp;&nbsp;&nbsp;{ opt.onyomi || null }\n                &nbsp;&nbsp;|&nbsp;&nbsp;\n                訓読み:&nbsp;&nbsp;&nbsp;{ opt.kunyomi || null }\n              </span>\n          }\n        </div>\n        ))\n      break\n      \n      default:\n      break\n    }\n\n    return { \n      riddle: $riddle,\n      options: $options,\n      indexOfCorrect: this.indexOfCorrect\n    }\n  }\n\n  exportTrainingCardElements() {\n    let $riddle\n    let $options\n\n    switch (this.mode) {\n      case 'jp-en':\n        $riddle =\n          <div className='text-5xl text-center'>\n            { this.riddle.jp }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-4'>\n            <b>{ opt.en }</b>\n            {\n              (opt.onyomi !== undefined || opt.kunyomi !== undefined) &&\n                <div className='text-sm'>\n                  Onyomi:&nbsp;&nbsp;&nbsp;{ opt.onyomi || null }\n                  <br/>\n                  Kunyomi:&nbsp;&nbsp;&nbsp;{ opt.kunyomi || null }\n                </div>\n            }\n          </div>\n        ))\n      break\n\n      case 'en-jp':\n        $riddle =\n          <div className='w-full px-4'>\n            <div className='mb-2 text-2xl text-center'>\n              <b>{ this.riddle.en }</b>\n            </div>\n            {\n              (this.riddle.onyomi !== undefined || this.riddle.kunyomi !== undefined) &&\n                <>\n                  Onyomi:&nbsp;&nbsp;&nbsp;{ this.riddle.onyomi || null }\n                  <br/>\n                  Kunyomi:&nbsp;&nbsp;&nbsp;{ this.riddle.kunyomi || null }\n                </>\n            }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='flex items-center text-4xl'>\n            { opt.jp }\n          </div>\n        ))\n      break\n\n      default:\n      break\n    }\n    \n    return { \n      riddle: $riddle,\n      options: $options,\n      indexOfCorrect: this.indexOfCorrect\n    }\n  }\n\n  exportTestingCardElements() {\n    let $riddle\n    let $options\n\n    switch (this.mode) {\n      case 'jp-en':\n        $riddle =\n          <div className='text-5xl text-center'>\n            { this.riddle.jp }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-4 py-1'>\n            { opt.en }\n            {\n              (opt.onyomi !== undefined || opt.kunyomi !== undefined) &&\n                <div className='w-full border-t border-white'>\n                  音読み:&nbsp;{ opt.onyomi || null }\n                  <br/>\n                  訓読み:&nbsp;{ opt.kunyomi || null }\n                </div>\n            }\n          </div>\n        ))\n      break\n\n      case 'en-jp':\n        $riddle =\n          <div className='text-3xl text-center'>\n            { this.riddle.en }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-8'>\n            { opt.jp }\n            {\n              ( opt.onyomi !== undefined || opt.kunyomi !== undefined) &&\n                <div className='w-full border-t border-white'>\n                  音読み:&nbsp;&nbsp;&nbsp;{ opt.onyomi || null }\n                  <br/>\n                  訓読み:&nbsp;&nbsp;&nbsp;{ opt.kunyomi || null }\n                </div>\n            }\n          </div>\n        ))\n      break\n\n      default:\n      break\n    }\n    \n    return { \n      riddle: $riddle,\n      options: $options,\n      indexOfCorrect: this.indexOfCorrect\n    }\n  }\n}","import { useEffect, useState } from 'react'\nimport {\n  Select, MenuItem, ListSubheader, InputLabel, FormControl,\n  ToggleButtonGroup, ToggleButton\n} from '@material-ui/core'\nimport { Helmet } from 'react-helmet'\n\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { TrainingCard } from '../cards/TrainingCard'\nimport { pickElement } from '../helpers/array'\nimport { CreateCard } from '../helpers/card'\n\nexport default function Training() {\n  const [stateTotalAnswers, setTotalAnswers] = useState(0)\n  const [stateCorrectAnswers, setCorrectAnswers] = useState(0)\n\n  const [stateMode, setMode] = useState('jp-en')\n  const [stateSpelling, setSpelling] = useState('transliteration')\n  const [stateDifficulty, setDifficulty] = useState(2)\n  const [stateCollection, setCollection] = useState()\n  const [stateCollectionData, setCollectionData] = useState([])\n  \n  const [stateCardElements, setCardElements] = useState(null)\n  const { collections } = useCollections()\n  \n  useEffect(() => {\n    if (stateCollectionData.length > 0) {\n      const pick = pickElement(stateCollectionData)\n      let picks = [pick]\n  \n      for (let i = 0; i < stateDifficulty - 1; i++) {\n        picks.push(pickElement(stateCollectionData, picks));\n      }\n\n      const cardElements = (new CreateCard({ picks, mode: stateMode, spelling: stateSpelling })).exportTrainingCardElements()\n\n      setCardElements(cardElements)\n    }\n  }, [stateTotalAnswers, stateCollectionData, stateDifficulty, stateMode, stateSpelling])\n\n\n  function checkAnswerHandler(isCorrect) {\n    setTotalAnswers(stateTotalAnswers + 1)\n    if (isCorrect) {\n      setCorrectAnswers(stateCorrectAnswers + 1)\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Training</title>\n      </Helmet>\n      <div className='w-full md:w-1/2 lg:w-1/3 mx-auto'>\n        <div className='mb-4'>\n          <FormControl className='w-full'>\n            <label className='mb-1 text-sm text-gray-500'>Mode</label>\n            <ToggleButtonGroup\n              value={stateMode}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setMode(value) }}\n              aria-label='difficulty'\n              className='w-full'\n            >\n              <ToggleButton value='jp-en' aria-label='japanese mode' className='w-full'>\n                日本語\n              </ToggleButton>\n              <ToggleButton value='en-jp' aria-label='english mode' className='w-full'>\n                English\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n\n        <div className='mb-4'>\n          <FormControl className='w-full'>\n            <label className='mb-1 text-sm text-gray-500'>Spelling</label>\n            <ToggleButtonGroup\n              value={stateSpelling}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setSpelling(value) }}\n              aria-label='spelling'\n              className='w-full'\n            >\n              <ToggleButton value='transliteration' aria-label='transliteration' className='w-full'>\n                Transliteration\n              </ToggleButton>\n              <ToggleButton value='native' aria-label='native' className='w-full'>\n                Native\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n\n        <div className='mb-10'>\n          <FormControl className='w-full'>\n            <label className='mb-1 text-sm text-gray-500'>Difficulty</label>\n            <ToggleButtonGroup\n              value={stateDifficulty}\n              exclusive\n              onChange={(event, value) => { if (value !== null) setDifficulty(value) }}\n              aria-label='difficulty'\n              className='w-full'\n            >\n              <ToggleButton value={2} aria-label='easy' className='w-full'>\n                Easy\n              </ToggleButton>\n              <ToggleButton value={3} aria-label='medium' className='w-full'>\n                Medium\n              </ToggleButton>\n              <ToggleButton value={4} aria-label='hard' className='w-full'>\n                Hard\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n        </div>\n\n        <div className='mb-8'>\n          <FormControl\n            variant='outlined'\n            className='w-full'\n          >\n            <InputLabel id='collection-label'>Collection</InputLabel>\n            <Select\n              labelId='collection-label'\n              defaultValue=''\n              value={ stateCollection }\n              label='Collection'\n              onChange={event => {\n                setCollection(event.target.value)\n                setCollectionData(collections.data[event.target.value])\n              }}\n            >\n              {\n                collections.index.reduce((acc, group) => {\n                  return [\n                    ...acc,\n                    <ListSubheader key={ group.label }>{ group.label }</ListSubheader>,\n                    group.options.map((option, optionIdx) => (\n                      <MenuItem key={ optionIdx } value={ option.value }>\n                        { option.label }\n                      </MenuItem>\n                    ))\n                  ]\n                }, [])\n              }\n            </Select>\n          </FormControl>\n        </div>\n        \n        {\n          stateCardElements === null &&\n          <div\n            className='text-3xl italic text-center text-gray-400'\n          >\n            Please, select collection to practice\n          </div>\n        }\n        {\n          stateCardElements !== null &&\n            <div className='relative'>\n              <div className='absolute w-full'>\n                <div className='table mx-auto px-2 py-1 rounded-b-md bg-white text-sm text-pink-800'>\n                  Score: <b>{ stateTotalAnswers } / { stateCorrectAnswers }</b>\n                </div>\n              </div>\n              <div className='flex justify-center'>\n                <div className='w-full'>\n                  <TrainingCard\n                    dir={ 'col'/* stateMode === 'jp-en' ? 'col' : 'row' */ }\n                    data={stateCardElements}\n                    checkAnswerHandler={checkAnswerHandler}\n                  />\n                </div>\n              </div>\n            </div>\n        }\n      </div>\n    </>\n  )\n}","import cn from 'classnames'\nimport { CreateCard } from '../helpers/card'\n\nexport function ResultsTable({\n  cards = [],\n  answers = [],\n  dir='row'\n}) {\n  return (\n    <div className={cn(\n      'w-full rounded-xl overflow-hidden',\n      \n    )}>\n      {\n        cards.map((card, cardIdx) => {\n          const { riddle, options, indexOfCorrect } = CreateCard.prototype.exportResultsCardElements.call(card)\n\n          return (\n            <div\n              key={cardIdx}\n              className={cn(\n                'flex flex-wrap w-full bg-gradient-to-r text-indigo-900',\n                {\n                  'border-t-4 border-white': cardIdx,\n                  'from-blue-100 to-blue-400': cardIdx % 2 === 0,\n                  'from-purple-100 to-purple-400': cardIdx % 2 === 1\n                }\n              )}\n            >\n              <div\n                className={cn(\n                  'flex justify-center items-center w-full h-20 md:h-auto',\n                  {\n                    'md:w-1/2': dir === 'row',\n                    'md:w-1/3': dir === 'col',\n                  }\n                )}\n              >\n                { riddle }\n              </div>\n              <div\n                className={cn(\n                  'grid w-full border-t md:border-t-0 md:border-l border-white',\n                  {\n                    'grid-flow-col auto-cols-fr md:w-1/2': dir === 'row',\n                    'grid-flow-row auto-rows-fr md:w-2/3': dir === 'col'\n                  }\n                )}\n              >\n                {\n                  options.map((option, optIdx) => (\n                    <div\n                      key={optIdx}\n                      className={cn(\n                        'flex justify-center items-center w-full h-20 md:h-auto',\n                        {\n                          'border-l border-white': optIdx && dir === 'row',\n                          'border-t border-white': optIdx && dir === 'col',\n                          'bg-gradient-to-r from-green-100 to-green-300 text-green-800': indexOfCorrect === optIdx,\n                          'bg-gradient-to-r from-red-100 to-red-300 text-red-700': answers[cardIdx] === optIdx && indexOfCorrect !== optIdx\n                        },\n                      )}\n                    >\n                      { option }\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}","import { useEffect, useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport {\n  Autocomplete, TextField,\n  FormControl,\n  ToggleButtonGroup, ToggleButton,\n  Button\n} from '@material-ui/core'\n// import cn from 'classnames'\n\nimport { TrainingCard } from '../cards/TrainingCard'\nimport { ResultsTable } from '../components/ResultsTable'\nimport { pickElement } from '../helpers/array'\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { CreateCard } from '../helpers/card'\n\nexport default function Testing() {\n  const [stateMode, setMode] = useState('jp-en')\n  const [stateDifficulty, setDifficulty] = useState(2)\n  const [stateCollectionsValue, setCollectionsValue] = useState([])\n  const [stateGeneralCollection, setGeneralCollection] = useState([])\n  const [stateNumberOfQuestions, setNumberOfQuestions] = useState(null)\n  \n  const [stateTestingCollection, setTestingCollection] = useState([])\n  const [stateCardElements, setCardElements] = useState(null)\n  const [stateCards, setCards] = useState([])\n  const [stateAnswers, setAnswers] = useState([])\n  \n  const [stateCurrentQuestion, setCurrentQuestion] = useState(null)\n  const [stateCorrectAnswers, setCorrectAnswers] = useState(0)\n  \n  const [stateSetup, setSetup] = useState(true)\n  const [stateTest, setTest] = useState(false)\n  const [stateResult, setResult] = useState(false)\n\n  const { collections } = useCollections()\n\n  const mode = {\n    'jp-en': 'Japanese to English',\n    'en-jp': 'English to Japanese',\n  }\n  const difficulty = {\n    2: 'Easy',\n    3: 'Medium',\n    4: 'Hard',\n  }\n\n  /* Generate testing collection */\n  useEffect(() => {\n    if (stateTest) {\n      let collection = []\n  \n      for (let i = 0; i < stateNumberOfQuestions; i++) {\n        collection.push(pickElement(stateGeneralCollection, collection))\n      }\n\n      setTestingCollection(collection)\n      setCurrentQuestion(0)\n    }\n  }, [stateTest /*  */, stateNumberOfQuestions, stateGeneralCollection])\n\n  /* Generate question card */\n  useEffect(() => {\n    if (stateTest /* && stateCurrentQuestion !== null */) {\n      const pick = stateTestingCollection[stateCurrentQuestion]\n      let picks = [pick]\n  \n      for (let i = 0; i < stateDifficulty - 1; i++) {\n        picks.push(pickElement(stateGeneralCollection, picks));\n      }\n\n      const cardData = new CreateCard({ picks, mode: stateMode, spelling: 'native' })\n      const testingCardElements = cardData.exportTestingCardElements()\n      // const resultsCardElements = cardData.exportResultsCardElements()\n  \n      setCardElements(testingCardElements)\n      setCards(state => [...state, cardData])\n    }\n  }, [stateCurrentQuestion /*  */, stateTestingCollection, stateDifficulty, stateGeneralCollection, stateMode/* , stateTest */])\n\n  /* Validate number of question */\n  useEffect(() => {\n    if (stateGeneralCollection.length < stateNumberOfQuestions) {\n      setNumberOfQuestions(null)\n    }\n  }, [stateGeneralCollection /*  */, stateNumberOfQuestions])\n\n  function checkAnswerHandler(isCorrect, idx) {\n    setAnswers(state => [...state, idx])\n    \n    if (isCorrect) {\n      setCorrectAnswers(stateCorrectAnswers + 1)\n    }\n    \n    if (stateCurrentQuestion < stateTestingCollection.length - 1) {\n      setCurrentQuestion(stateCurrentQuestion + 1)\n    } else {\n      setTest(false)\n      setResult(true)\n    }\n  }\n\n  function resetHandler() {\n    setSetup(true)\n    setTest(false)\n    setResult(false)\n\n    setCardElements(null)\n    setCards([])\n    setAnswers([])\n    \n    setCurrentQuestion(null)\n    setCorrectAnswers(0)\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Testing</title>\n      </Helmet>\n      {\n        stateResult &&\n          <>\n            <div className='w-full md:w-1/2 lg:w-1/3 mx-auto mb-8'>\n              <div className='mb-8'>\n                <div className='text-center text-xl'>Your score:</div>\n                <div className='text-center text-6xl text-indigo-600'>{ stateCorrectAnswers } / { stateTestingCollection.length }</div>\n              </div>\n              <Button\n                variant='outlined'\n                color='primary'\n                className='w-full'\n                onClick={resetHandler}\n              >\n                <span className='text-xl'>Try again</span>\n              </Button>\n            </div>\n            <h2 className='text-3xl text-center mb-4'>Details</h2>\n            <div className='table mx-auto mb-4 px-2 py-1 bg-gradient-to-r from-blue-50 to-blue-200 rounded-md text-blue-700'>\n              <p>Mode:&nbsp;<b>{ mode[stateMode] }</b></p>\n              <p>Difficulty:&nbsp;<b>{ difficulty[stateDifficulty] }</b></p>\n              <p>\n                Collections:&nbsp;\n                <b>\n                {\n                  stateCollectionsValue.reduce((acc, item) => {\n                    acc.push(item.label)\n                    return acc\n                  }, []).join(', ')\n                }\n                </b>\n              </p>\n              <p>Number of qustions:&nbsp;<b>{ stateNumberOfQuestions }</b></p>\n            </div>\n            <ResultsTable\n              dir={ 'col'/* stateMode === 'jp-en' ? 'col' : 'row' */ }\n              cards={ stateCards }\n              answers={ stateAnswers }\n            />\n          </>\n      }\n      {\n        stateTest &&\n          <div className='w-full md:w-1/2 lg:w-1/3 mx-auto'>\n            <p className='mb-4 text-2xl text-center'>Question No { stateCurrentQuestion + 1 }</p>\n            {\n              stateCardElements !== null &&\n                <TrainingCard\n                  dir={ 'col'/* stateMode === 'jp-en' ? 'col' : 'row' */ }\n                  data={stateCardElements}\n                  checkAnswerHandler={checkAnswerHandler}\n                />\n            }\n          </div>\n      }\n      {\n        stateSetup &&\n          <div className='w-full md:w-1/2 lg:w-1/3 mx-auto'>\n            <div className='mb-4'>\n              <FormControl className='w-full'>\n                <label className='mb-1 text-sm text-gray-500'>Mode</label>\n                <ToggleButtonGroup\n                  value={stateMode}\n                  exclusive\n                  onChange={(event, value) => setMode(value)}\n                  aria-label='difficulty'\n                  className='w-full'\n                >\n                  <ToggleButton value='jp-en' aria-label='japanese mode' className='w-full'>\n                    日本語\n                  </ToggleButton>\n                  <ToggleButton value='en-jp' aria-label='english mode' className='w-full'>\n                    English\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </FormControl>\n            </div>\n\n            <div className='mb-10'>\n              <FormControl className='w-full'>\n                <label className='mb-1 text-sm text-gray-500'>Difficulty</label>\n                <ToggleButtonGroup\n                  value={stateDifficulty}\n                  exclusive\n                  onChange={(event, value) => setDifficulty(value)}\n                  aria-label='difficulty'\n                  className='w-full'\n                >\n                  <ToggleButton value={2} aria-label='easy' className='w-full'>\n                    Easy\n                  </ToggleButton>\n                  <ToggleButton value={3} aria-label='medium' className='w-full'>\n                    Medium\n                  </ToggleButton>\n                  <ToggleButton value={4} aria-label='hard' className='w-full'>\n                    Hard\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </FormControl>\n            </div>\n\n            <div className='mb-4'>\n              <FormControl\n                variant='outlined'\n                className='w-full'\n              >\n                <Autocomplete\n                  multiple\n                  disableCloseOnSelect\n                  autoHighlight\n                  options={\n                    collections.index.reduce((acc, group) => ([\n                      ...acc,\n                      ...group.options.map(\n                        (option, idx) => ({\n                          label: option.label, value: option.value, group: group.label\n                        })\n                      )\n                    ]), [])\n                  }\n                  groupBy={ option => option.group }\n                  getOptionLabel={ option => option.label }\n                  getOptionSelected={ (option, value) => option.value === value.value }\n                  renderInput={ params => <TextField {...params} label='Collections' /> }\n                  value={ stateCollectionsValue }\n                  onChange={(event, value) => {\n                    setCollectionsValue(value)\n                    setGeneralCollection(\n                      value.reduce((acc, item) => {\n                        return acc.concat(collections.data[item.value])\n                      }, [])\n                    )\n                  }}\n                />\n              </FormControl>\n            </div>\n\n            <div className='mb-8'>\n              <FormControl className='w-full'>\n                <label className='mb-1 text-sm text-gray-500'>Number of questions</label>\n                <ToggleButtonGroup\n                  value={stateNumberOfQuestions}\n                  exclusive\n                  onChange={(event, value) => setNumberOfQuestions(value)}\n                  aria-label='number of questions'\n                  className='w-full'\n                >\n                  <ToggleButton value={5} aria-label='5' className='w-full' disabled={ stateGeneralCollection.length < 5 }>\n                    <b className='text-xl'>5</b>\n                  </ToggleButton>\n                  <ToggleButton value={15} aria-label='15' className='w-full' disabled={ stateGeneralCollection.length < 15 }>\n                  <b className='text-xl'>15</b>\n                  </ToggleButton>\n                  <ToggleButton value={25} aria-label='25' className='w-full' disabled={ stateGeneralCollection.length < 25 }>\n                  <b className='text-xl'>25</b>\n                  </ToggleButton>\n                  <ToggleButton value={50} aria-label='50' className='w-full' disabled={ stateGeneralCollection.length < 50 }>\n                  <b className='text-xl'>50</b>\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </FormControl>\n            </div>\n\n            <Button\n              variant='contained'\n              disableElevation\n              color='secondary'\n              size='large'\n              className='w-full'\n              onClick={() => {\n                setSetup(false)\n                setTest(true)\n              }}\n              disabled={ stateCollectionsValue.length === 0 || stateNumberOfQuestions === null }\n            >\n              Start testing\n            </Button>\n          </div>\n      }\n    </>\n  )\n}","import React from 'react'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from 'react-router-dom'\nimport cn from 'classnames'\nimport { Helmet } from 'react-helmet'\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { teal } from '@material-ui/core/colors'\n\nimport { CollectionsProvider } from './collections/CollectionsProvider'\nimport Home from './pages/index'\nimport Learning from './pages/learning'\nimport Training from './pages/training'\nimport Testing from './pages/testing'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faBookReader, faUserGraduate, faBookOpen } from '@fortawesome/free-solid-svg-icons'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: teal,\n  },\n  overrides: {\n    MuiToggleButton: {\n      root: {\n        color: teal[500],\n        backgroundColor: teal[50],\n        '&$selected': {\n          color: 'white',\n          backgroundColor: teal[400],\n          '&:hover': {\n            backgroundColor: teal[400]\n          }\n        },\n        '&:hover': {\n          backgroundColor: teal[100]\n        }\n      },\n      selected: {\n      }\n    }\n  }\n});\n\nfunction Nav() {\n  const location = useLocation()\n  \n  return (\n    <footer className='fixed bottom-0 w-full border-t border-gray-300 bg-white'>\n      <div className='container mx-auto py-3'>\n        <nav className='w-full'>\n          <ul className='flex justify-between'>\n            <li className='px-3'>\n              <Link\n                to='/'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/'}\n                )}\n              >\n                <FontAwesomeIcon icon={faHome}/>\n              </Link>\n            </li>\n            <li className='px-3'>\n              <Link\n                to='/learning'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/learning'}\n                )}\n              >\n                <FontAwesomeIcon icon={faBookOpen}/>\n              </Link>\n            </li>\n            <li className='px-3'>\n              <Link\n                to='/training'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/training'}\n                )}\n              >\n                <FontAwesomeIcon icon={faBookReader}/>\n              </Link>\n            </li>\n            <li className='px-3'>\n              <Link\n                to='/testing'\n                className={cn(\n                  'text-2xl',\n                  {'text-red-500': location.pathname === '/testing'}\n                )}\n              >\n                <FontAwesomeIcon icon={faUserGraduate}/>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </footer>\n  )\n}\n\nfunction App() {\n  return (\n    <CollectionsProvider>\n      <ThemeProvider theme={theme}>\n        <Helmet>\n          <title>正解 (Seikai)</title>\n        </Helmet>\n        <Router>\n          <div className='app-container'>\n            <main className='pt-8 pb-24 bg-white'>\n              <div className='container min-h-full h-full mx-auto px-4'>\n                <Switch>\n                  <Route exact path='/'>\n                    <Home/>\n                  </Route>\n                  <Route exact path='/learning'>\n                    <Learning/>\n                  </Route>\n                  <Route exact path='/training'>\n                    <Training/>\n                  </Route>\n                  <Route exact path='/testing'>\n                    <Testing/>\n                  </Route>\n                </Switch>\n              </div>\n            </main>  \n            <Nav/>\n          </div>\n        </Router>\n      </ThemeProvider>\n    </CollectionsProvider>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log)\n"],"sourceRoot":""}