{"version":3,"sources":["collections/CollectionsProvider.js","pages/index.js","cards/LearningCard.js","pages/learning.js","cards/TrainingCard.js","helpers/array.js","helpers/card.js","pages/training.js","components/ResultsTable.js","pages/testing.js","App.js","reportWebVitals.js","index.js"],"names":["CollectionsContext","React","createContext","useCollections","useContext","CollectionsProvider","children","useState","stateCollections","setCollections","useEffect","reduce","acc","item","idx","index","findIndex","f","label","group","push","options","name","value","code","data","processData","_hiragana","_katakana","_kanji_numbers","Provider","Home","Helmet","className","to","text","map","section","cn","LearningCard","blind","style","willChange","jp","onyomi","kunyomi","en","Learning","stateCollection","setCollection","stateBlind","setBlind","collections","placeholder","onChange","checked","id","icons","event","target","htmlFor","length","card","TrainingCard","checkAnswerHandler","dir","height","riddle","option","onMouseUp","indexOfCorrect","Math","random","toString","shuffle","array","i","j","floor","pickElement","arr","exclude","Array","isArray","p","indexOf","CreateCard","picks","mode","this","modeRiddle","split","modeOptions","createData","pick","isCorrect","opt","$riddle","$options","Training","stateTotalAnswers","setTotalAnswers","stateCorrectAnswers","setCorrectAnswers","stateMode","setMode","stateDifficulty","setDifficulty","stateCardElements","setCardElements","cardElements","exportTrainingCardElements","ToggleButtonGroup","exclusive","aria-label","ToggleButton","ResultsTable","cards","answers","cardIdx","prototype","exportResultsCardElements","call","optIdx","Testing","stateCollectionsValue","setCollectionsValue","stateGeneralCollection","setGeneralCollection","stateNumberOfQuestions","setNumberOfQuestions","stateTestingCollection","setTestingCollection","stateCards","setCards","stateAnswers","setAnswers","stateCurrentQuestion","setCurrentQuestion","stateSetup","setSetup","stateTest","setTest","stateResult","setResult","collection","cardData","trainingCardElements","state","Button","variant","color","onClick","2","3","4","join","isMulti","closeMenuOnSelect","defaultValue","concat","disabled","Nav","location","useLocation","pathname","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.9feaa8f9.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\n\nimport _hiragana from './json/hiragana.json'\nimport _katakana from './json/katakana.json'\nimport _kanji_numbers from './json/kanji-numbers.json'\n\nconst CollectionsContext = React.createContext()\n\nfunction processData(data = []) {\n  return data.reduce((acc, item) => {\n    const idx = acc.index.findIndex(f => f.label === item.group)\n\n    if (idx === -1) {\n      acc.index.push({ label: item.group, options: [{ label: item.name , value: item.code }] })\n    } else {\n      acc.index[idx].options.push({ label: item.name , value: item.code })\n    }\n\n    acc.data[item.code] = item.data\n\n    return acc\n  }, {index: [], data: {}})\n}\n\nexport const useCollections = () => useContext(CollectionsContext)\n\nexport const CollectionsProvider = ({ children }) => {\n  const [stateCollections, setCollections] = useState([])\n\n  useEffect(() => {\n    setCollections(processData([_hiragana, _katakana, _kanji_numbers]))\n  }, [])\n\n  return (\n    <CollectionsContext.Provider value={stateCollections}>\n      { children }\n    </CollectionsContext.Provider>\n  )\n}","import { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport cn from 'classnames'\n\nfunction Home() {\n  const SECTIONS = [\n    {\n      to: '/learning',\n      text: 'Start learn kana and kanji'\n    },\n    {\n      to: '/training',\n      text: 'Practice'\n    },\n    {\n      to: '/testing',\n      text: 'Test your knowledge'\n    }\n  ]\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Home page</title>\n      </Helmet>\n      <h1 className='mb-8 text-7xl text-center text-indigo-800'>正解 (Seikai)</h1>\n      <p className='mb-4'>\n        Seikai is the simple and fast web application for learning and practicing your japanese language!\n      </p>\n      <div className='flex flex-col md:flex-row items-stretch w-full rounded-xl overflow-hidden'>\n        {\n          SECTIONS.map((section, idx) => (\n            <Link\n              key={idx}\n              to={section.to}\n              className={cn(\n                'flex justify-center items-center w-full px-1 py-8 bg-blue-100 hover:bg-blue-200 text-3xl text-center text-blue-800',\n                {\n                  'border-t md:border-l md:border-t-0 border-white': idx \n                }\n              )}\n            >\n              {section.text}\n            </Link>\n          ))\n        }\n      </div>\n    </>\n  )\n}\n\nexport default Home","import cn from 'classnames'\n\nfunction LearningCard({\n  data,\n  blind,  \n}) {\n  return (\n    <div className='group w-full px-2 rounded-xl bg-indigo-100 hover:bg-indigo-200 text-indigo-900 cursor-pointer transition-all duration-300'>\n      <div\n        className={cn(\n          {\n            'opacity-0': blind\n          },\n          'group-hover:opacity-100 flex justify-center text-8xl m-4 transition-all duration-300'\n        )}\n        style={{willChange: 'opacity'}}\n      >\n        { data.jp }\n      </div>\n      {\n        (data.onyomi || data.kunyomi) &&\n          <div className='py-2 border-t-2 border-b-2 border-white'>\n            <div>\n              Onyomi: <b>{ data.onyomi || <>&mdash;</> }</b>\n            </div>\n            <div>\n              Kunyomi: <b>{ data.kunyomi || <>&mdash;</> }</b>\n            </div>\n          </div>\n      }\n      <div className='py-1 text-center'>\n        <b>{ data.en }</b>\n      </div>\n    </div>\n  )\n}\n\nexport { LearningCard }","import { useState } from 'react'\nimport Select from 'react-select'\nimport Toggle from 'react-toggle'\nimport 'react-toggle/style.css'\nimport { Helmet } from 'react-helmet'\n\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { LearningCard } from '../cards/LearningCard'\n\nexport default function Learning() {\n  const [stateCollection, setCollection] = useState([])\n  const [stateBlind, setBlind] = useState(false)\n  const collections = useCollections()\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Learning</title>\n      </Helmet>\n      <div className='w-full md:w-1/3 mx-auto'>\n        <div className='flex flex-col justify-between items-center mb-8'>\n          <div className='w-full'>\n            <Select\n              placeholder='Select collection...'\n              options={ collections.index }\n              onChange={(value) => { setCollection(collections.data[value.value]) }}\n            />\n          </div>\n          <div className='flex items-center py-3 cursor-pointer'>\n            <Toggle\n              checked={stateBlind}\n              className='mr-4'\n              id='blindMode'\n              icons={false}\n              onChange={(event) => { setBlind(event.target.checked) }}\n            />\n            <label htmlFor='blindMode'>\n              Blind mode\n            </label>\n          </div>\n        </div>\n        {\n          stateCollection.length === 0 &&\n            <div\n              className='text-3xl italic text-center text-gray-400'\n            >\n              Please, select collection to learn\n            </div>\n        }\n        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4'>\n          {\n            stateCollection.map((card, idx) => (\n              <LearningCard\n                key={idx}\n                data={card}\n                blind={stateBlind}\n              />\n            ))\n          }\n        </div>\n      </div>\n    </>\n  )\n}","import cn from 'classnames'\n\nfunction TrainingCard({\n  data = null,\n  checkAnswerHandler,\n  dir = 'row'\n}) {\n  if (data === null) {\n    return <div className='w-full text-center'>No data provided for card</div>\n  }\n\n  return (\n    <div\n      className='border border-white w-full rounded-xl overflow-hidden'\n      style={{ height: '500px' }}\n    >\n      <div className={cn(\n        'flex justify-center items-center bg-purple-100 text-purple-800',\n        {\n          'h-2/3': dir === 'row',\n          'h-1/3': dir === 'col'\n        }\n      )}>\n        { data.riddle }\n      </div>\n      <div className={cn(\n        'grid border-t border-white',\n        {\n          'grid-flow-col auto-cols-fr h-1/3': dir === 'row',\n          'grid-flow-row auto-rows-fr h-2/3': dir === 'col'\n        }\n      )}>\n        {\n          data.options.map((option, idx) => (\n            <div\n              key={ Math.random().toString() }\n              className={cn(\n                'flex justify-center items-center bg-indigo-100 hover:bg-indigo-200 text-indigo-900 cursor-pointer',\n                { 'border-l border-white': idx > 0 && dir === 'row' },\n                { 'border-t border-white': idx > 0 && dir === 'col' }\n              )}\n              onMouseUp={() => checkAnswerHandler(idx === data.indexOfCorrect, idx)}\n            >\n              { option }\n            </div>    \n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport { TrainingCard }","// https://javascript.info/task/shuffle\nexport function shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array\n}\n\nexport function pickElement(arr, exclude) {\n  if (arr.length === 0) return null\n\n  if (!Array.isArray(exclude)) {\n    return arr[Math.floor(Math.random() * arr.length)]\n  } else {\n    const p = arr[Math.floor(Math.random() * arr.length)]\n\n    if (exclude.indexOf(p) === -1) {\n      return p\n    } else {\n      return pickElement(arr, exclude)\n    }\n  }\n}","import { shuffle } from './array'\n\nexport class CreateCard {\n  constructor(picks, mode) {\n    this.picks = picks\n    this.mode = mode\n    this.modeRiddle = mode.split('-')[0]\n    this.modeOptions = mode.split('-')[1]\n\n    this.riddle = {}\n    this.options = []\n    this.indexOfCorrect = -1\n\n    this.createData()\n  }\n\n  createData() {\n    switch (this.modeRiddle) {\n      case 'jp':\n        this.riddle = {\n          jp: this.picks[0].jp\n        }\n      break\n\n      case 'en':\n        this.riddle = {\n          en: this.picks[0].en,\n          onyomi: this.picks[0].onyomi,\n          kunyomi: this.picks[0].kunyomi\n        }\n      break\n\n      default: \n        this.riddle = {}\n      break\n    }\n\n    switch (this.modeOptions) {\n      case 'jp':\n        this.options = shuffle(this.picks.map((pick, idx) => ({\n          isCorrect: !idx,\n          jp: pick.jp\n        })))\n      break\n\n      case 'en':\n        this.options = shuffle(this.picks.map((pick, idx) => ({\n          isCorrect: !idx,\n          en: pick.en,\n          onyomi: pick.onyomi,\n          kunyomi: pick.kunyomi\n        })))\n      break\n\n      default:\n        this.options = []\n      break\n    }\n\n    this.indexOfCorrect = this.options.findIndex(opt => opt.isCorrect)\n  }\n\n  exportResultsCardElements() {\n    let $riddle\n    let $options\n\n    switch (this.mode) {\n      case 'jp-en':\n        $riddle = \n          <span className='text-5xl'>\n            { this.riddle.jp }\n          </span>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-2 py-1'>\n            <b>{ opt.en }</b>\n            {\n              (opt.onyomi || opt.kunyomi) &&\n                <span className='text-sm'>\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\n                  Onyomi:&nbsp;<b>{ opt.onyomi || <>&mdash;</> }</b>\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\n                  Kunyomi:&nbsp;<b>{ opt.kunyomi || <>&mdash;</> }</b>\n                </span>\n            }\n          </div>\n        ))\n      break\n      \n      case 'en-jp':\n        $riddle =\n          <div className='w-full px-4 py-1'>\n            <div className='text-xl'>\n              <b>{ this.riddle.en }</b>\n            </div>\n            {\n              (this.riddle.onyomi || this.riddle.kunyomi) &&\n                <p>\n                  Onyomi:&nbsp;<b>{ this.riddle.onyomi || <>&mdash;</> }</b>\n                  <br/>\n                  Kunyomi:&nbsp;<b>{ this.riddle.kunyomi || <>&mdash;</> }</b>\n                </p>\n            }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <span className='text-5xl'>\n            { opt.jp }\n          </span>\n        ))\n      break\n      \n      default:\n      break\n    }\n\n    return { \n      riddle: $riddle,\n      options: $options,\n      indexOfCorrect: this.indexOfCorrect\n    }\n  }\n\n  exportTrainingCardElements() {\n    let $riddle\n    let $options\n\n    switch (this.mode) {\n      case 'jp-en':\n        $riddle =\n          <div className='flex items-center h-32 text-8xl'>\n            { this.riddle.jp }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='w-full px-4 py-1'>\n            <b>{ opt.en }</b>\n            {\n              (opt.onyomi || opt.kunyomi) &&\n                <p className='text-sm'>\n                  Onyomi:&nbsp;<b>{ opt.onyomi || <>&mdash;</> }</b>\n                  <br/>\n                  Kunyomi:&nbsp;<b>{ opt.kunyomi || <>&mdash;</> }</b>\n                </p>\n            }\n          </div>\n        ))\n      break\n\n      case 'en-jp':\n        $riddle =\n          <div className='w-full px-4 py-1'>\n            <div className='text-3xl text-center'>\n              <b>{ this.riddle.en }</b>\n            </div>\n            {\n              (this.riddle.onyomi || this.riddle.kunyomi) &&\n                <p>\n                  Onyomi:&nbsp;<b>{ this.riddle.onyomi || <>&mdash;</> }</b>\n                  <br/>\n                  Kunyomi:&nbsp;<b>{ this.riddle.kunyomi || <>&mdash;</> }</b>\n                </p>\n            }\n          </div>\n        $options = this.options.map((opt, idx) => (\n          <div className='flex items-center h-20 text-5xl'>\n            { opt.jp }\n          </div>\n        ))\n      break\n\n      default:\n      break\n    }\n    \n    return { \n      riddle: $riddle,\n      options: $options,\n      indexOfCorrect: this.indexOfCorrect\n    }\n  }\n}","import { useEffect, useState } from 'react'\nimport Select from 'react-select'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\nimport { Helmet } from 'react-helmet'\n\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { TrainingCard } from '../cards/TrainingCard'\nimport { pickElement } from '../helpers/array'\nimport { CreateCard } from '../helpers/card'\n\nexport default function Training() {\n  const [stateTotalAnswers, setTotalAnswers] = useState(0)\n  const [stateCorrectAnswers, setCorrectAnswers] = useState(0)\n\n  const [stateMode, setMode] = useState('jp-en')\n  const [stateDifficulty, setDifficulty] = useState(2)\n  const [stateCollection, setCollection] = useState([])\n  \n  const [stateCardElements, setCardElements] = useState(null)\n  const collections = useCollections()\n  \n  useEffect(() => {\n    if (stateCollection.length > 0) {\n      const pick = pickElement(stateCollection)\n      let picks = [pick]\n  \n      for (let i = 0; i < stateDifficulty - 1; i++) {\n        picks.push(pickElement(stateCollection, picks));\n      }\n\n      const cardElements = (new CreateCard(picks, stateMode)).exportTrainingCardElements()\n\n      setCardElements(cardElements)\n    }\n  }, [stateTotalAnswers, stateCollection, stateDifficulty, stateMode])\n\n\n  function checkAnswerHandler(isCorrect) {\n    setTotalAnswers(stateTotalAnswers + 1)\n    if (isCorrect) {\n      setCorrectAnswers(stateCorrectAnswers + 1)\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Training</title>\n      </Helmet>\n      <div className='w-full md:w-1/2 lg:w-1/3 mx-auto'>\n        <div className='mb-4'>\n          <ToggleButtonGroup\n            value={stateMode}\n            exclusive\n            onChange={(event, value) => setMode(value)}\n            aria-label='difficulty'\n            className='w-full'\n          >\n            <ToggleButton value='jp-en' aria-label='japanese mode' className='w-full'>\n              日本語\n            </ToggleButton>\n            <ToggleButton value='en-jp' aria-label='english mode' className='w-full'>\n              English\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        <div className='mb-4'>\n          <ToggleButtonGroup\n            value={stateDifficulty}\n            exclusive\n            onChange={(event, value) => setDifficulty(value)}\n            aria-label='difficulty'\n            className='w-full'\n          >\n            <ToggleButton value={2} aria-label='easy' className='w-full'>\n              Easy\n            </ToggleButton>\n            <ToggleButton value={3} aria-label='medium' className='w-full'>\n              Medium\n            </ToggleButton>\n            <ToggleButton value={4} aria-label='hard' className='w-full'>\n              Hard\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        <div className='mb-8'>\n          <div className='w-full'>\n            <Select\n              placeholder='Select collection...'\n              options={ collections.index }\n              onChange={(value) => { setCollection(collections.data[value.value]) }}\n            />\n          </div>\n        </div>\n        <div className='mb-8'>\n          <div className='table mx-auto px-2 py-1 bg-blue-100 rounded-md text-blue-700'>\n            Score: <b>{ stateTotalAnswers } / { stateCorrectAnswers }</b>\n          </div>\n        </div>\n        {\n          stateCardElements === null &&\n          <div\n            className='text-3xl italic text-center text-gray-400'\n          >\n            Please, select collection to practice\n          </div>\n        }\n        {\n          stateCardElements !== null &&\n            <div className='flex justify-center'>\n              <div className='w-full'>\n                <TrainingCard\n                  dir={ stateMode === 'jp-en' ? 'col' : 'row' }\n                  data={stateCardElements}\n                  checkAnswerHandler={checkAnswerHandler}\n                />\n              </div>\n            </div>\n        }\n      </div>\n    </>\n  )\n}","import cn from 'classnames'\nimport { CreateCard } from '../helpers/card'\n\nexport function ResultsTable({\n  cards = [],\n  answers = [],\n  dir='row'\n}) {\n  return (\n    <div className='w-full border border-white rounded-xl overflow-hidden'>\n      {\n        cards.map((card, cardIdx) => {\n          const { riddle, options, indexOfCorrect } = CreateCard.prototype.exportResultsCardElements.call(card)\n\n          return (\n            <div\n              key={cardIdx}\n              className={cn(\n                'flex flex-wrap w-full text-indigo-900',\n                {\n                  'border-t-4 border-white': cardIdx,\n                  'bg-indigo-100': cardIdx % 2 === 0,\n                  'bg-indigo-200': cardIdx % 2 === 1\n                }\n              )}\n            >\n              <div\n                className={cn(\n                  'flex justify-center items-center w-full h-20 md:h-auto',\n                  {\n                    'md:w-1/2': dir === 'row',\n                    'md:w-1/3': dir === 'col',\n                  }\n                )}\n              >\n                { riddle }\n              </div>\n              <div\n                className={cn(\n                  'grid w-full border-t md:border-t-0 md:border-l border-white',\n                  {\n                    'grid-flow-col auto-cols-fr md:w-1/2': dir === 'row',\n                    'grid-flow-row auto-rows-fr md:w-2/3': dir === 'col'\n                  }\n                )}\n              >\n                {\n                  options.map((option, optIdx) => (\n                    <div\n                      key={optIdx}\n                      className={cn(\n                        'flex justify-center items-center w-full h-20 md:h-auto',\n                        {\n                          'border-l border-white': optIdx && dir === 'row',\n                          'border-t border-white': optIdx && dir === 'col',\n                          'bg-green-200 text-green-700': indexOfCorrect === optIdx,\n                          'bg-red-200 text-red-700': answers[cardIdx] === optIdx && indexOfCorrect !== optIdx\n                        },\n                      )}\n                    >\n                      { option }\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}","import { useEffect, useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Select from 'react-select'\nimport { Button } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\n// import cn from 'classnames'\n/* TODO: rework select with Material-UI components */\n// import Chip from '@material-ui/core/Chip'\n// import Autocomplete from '@material-ui/lab/Autocomplete'\n// import TextField from '@material-ui/core/TextField'\n\nimport { TrainingCard } from '../cards/TrainingCard'\nimport { ResultsTable } from '../components/ResultsTable'\nimport { pickElement } from '../helpers/array'\nimport { useCollections } from '../collections/CollectionsProvider'\nimport { CreateCard } from '../helpers/card'\n\nexport default function Testing() {\n  const [stateMode, setMode] = useState('jp-en')\n  const [stateDifficulty, setDifficulty] = useState(2)\n  const [stateCollectionsValue, setCollectionsValue] = useState([])\n  const [stateGeneralCollection, setGeneralCollection] = useState([])\n  const [stateNumberOfQuestions, setNumberOfQuestions] = useState(null)\n  \n  const [stateTestingCollection, setTestingCollection] = useState([])\n  const [stateCardElements, setCardElements] = useState(null)\n  const [stateCards, setCards] = useState([])\n  const [stateAnswers, setAnswers] = useState([])\n  \n  const [stateCurrentQuestion, setCurrentQuestion] = useState(null)\n  const [stateCorrectAnswers, setCorrectAnswers] = useState(0)\n  \n  const [stateSetup, setSetup] = useState(true)\n  const [stateTest, setTest] = useState(false)\n  const [stateResult, setResult] = useState(false)\n\n  const collections = useCollections()\n\n  const mode = {\n    'jp-en': 'Japanese to English',\n    'en-jp': 'English to Japanese',\n  }\n  const difficulty = {\n    2: 'Easy',\n    3: 'Medium',\n    4: 'Hard',\n  }\n\n  /* Generate testing collection */\n  useEffect(() => {\n    if (stateTest) {\n      let collection = []\n  \n      for (let i = 0; i < stateNumberOfQuestions; i++) {\n        collection.push(pickElement(stateGeneralCollection, collection))\n      }\n\n      setTestingCollection(collection)\n      setCurrentQuestion(0)\n    }\n  }, [stateTest /*  */, stateNumberOfQuestions, stateGeneralCollection])\n\n  /* Generate question card */\n  useEffect(() => {\n    if (stateTest /* && stateCurrentQuestion !== null */) {\n      const pick = stateTestingCollection[stateCurrentQuestion]\n      let picks = [pick]\n  \n      for (let i = 0; i < stateDifficulty - 1; i++) {\n        picks.push(pickElement(stateGeneralCollection, picks));\n      }\n\n      const cardData = new CreateCard(picks, stateMode)\n      const trainingCardElements = cardData.exportTrainingCardElements()\n      // const resultsCardElements = cardData.exportResultsCardElements()\n  \n      setCardElements(trainingCardElements)\n      setCards(state => [...state, cardData])\n    }\n  }, [stateCurrentQuestion /*  */, stateTestingCollection, stateDifficulty, stateGeneralCollection, stateMode/* , stateTest */])\n\n  /* Validate number of question */\n  useEffect(() => {\n    if (stateGeneralCollection.length < stateNumberOfQuestions) {\n      setNumberOfQuestions(null)\n    }\n  }, [stateGeneralCollection /*  */, stateNumberOfQuestions])\n\n  function checkAnswerHandler(isCorrect, idx) {\n    setAnswers(state => [...state, idx])\n    \n    if (isCorrect) {\n      setCorrectAnswers(stateCorrectAnswers + 1)\n    }\n    \n    if (stateCurrentQuestion < stateTestingCollection.length - 1) {\n      setCurrentQuestion(stateCurrentQuestion + 1)\n    } else {\n      setTest(false)\n      setResult(true)\n    }\n  }\n\n  function resetHandler() {\n    setSetup(true)\n    setTest(false)\n    setResult(false)\n\n    setCardElements(null)\n    setCards([])\n    setAnswers([])\n    \n    setCurrentQuestion(null)\n    setCorrectAnswers(0)\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>正解 (Seikai) | Testing</title>\n      </Helmet>\n      {\n        stateResult &&\n          <>\n            <div className='w-full md:w-1/2 lg:w-1/3 mx-auto mb-8'>\n              <div className='mb-8'>\n                <div className='text-center text-xl'>Your score:</div>\n                <div className='text-center text-6xl text-indigo-600'>{ stateCorrectAnswers } / { stateTestingCollection.length }</div>\n              </div>\n              <Button\n                variant='outlined'\n                color='primary'\n                className='w-full'\n                onClick={resetHandler}\n              >\n                <span className='text-xl'>Try again</span>\n              </Button>\n            </div>\n            <h2 className='text-3xl text-center mb-4'>Details</h2>\n            <div className='table mx-auto mb-4 px-2 py-1 bg-blue-100 rounded-md text-blue-700'>\n              <p>Mode:&nbsp;<b>{ mode[stateMode] }</b></p>\n              <p>Difficulty:&nbsp;<b>{ difficulty[stateDifficulty] }</b></p>\n              <p>\n                Collections:&nbsp;\n                <b>\n                {\n                  stateCollectionsValue.reduce((acc, item) => {\n                    acc.push(item.label)\n                    return acc\n                  }, []).join(', ')\n                }\n                </b>\n              </p>\n              <p>Number of qustions:&nbsp;<b>{ stateNumberOfQuestions }</b></p>\n            </div>\n            <ResultsTable\n              dir={ stateMode === 'jp-en' ? 'col' : 'row' }\n              cards={ stateCards }\n              answers={ stateAnswers }\n            />\n          </>\n      }\n      {\n        stateTest &&\n          <div className='w-full md:w-1/2 lg:w-1/3 mx-auto'>\n            <p className='mb-4 text-2xl text-center'>Question No { stateCurrentQuestion + 1 }</p>\n            {\n              stateCardElements !== null &&\n                <TrainingCard\n                  dir={ stateMode === 'jp-en' ? 'col' : 'row' }\n                  data={stateCardElements}\n                  checkAnswerHandler={checkAnswerHandler}\n                />\n            }\n          </div>\n      }\n      {\n        stateSetup &&\n          <div className='w-full md:w-1/2 lg:w-1/3 mx-auto'>\n            <p className='text-sm mb-1'>Mode</p>\n            <div className='flex justify-center mb-4'>\n              <ToggleButtonGroup\n                value={stateMode}\n                exclusive\n                onChange={(event, value) => setMode(value)}\n                aria-label='difficulty'\n                className='w-full'\n              >\n                <ToggleButton value='jp-en' aria-label='japanese mode' className='w-full'>\n                  日本語\n                </ToggleButton>\n                <ToggleButton value='en-jp' aria-label='english mode' className='w-full'>\n                  English\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </div>\n\n            <p className='text-sm mb-1'>Difficulty</p>\n            <div className='flex justify-center mb-4'>\n              <ToggleButtonGroup\n                value={stateDifficulty}\n                exclusive\n                onChange={(event, value) => setDifficulty(value)}\n                aria-label='difficulty'\n                className='w-full'\n              >\n                <ToggleButton value={2} aria-label='easy' className='w-full'>\n                  Easy\n                </ToggleButton>\n                <ToggleButton value={3} aria-label='medium' className='w-full'>\n                  Medium\n                </ToggleButton>\n                <ToggleButton value={4} aria-label='hard' className='w-full'>\n                  Hard\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </div>\n\n            <p className='text-sm mb-1'>Collections</p>\n            <div className='flex justify-center items-center mb-4'>\n              <Select\n                className='w-full'\n                isMulti\n                closeMenuOnSelect={false}\n                placeholder='Select collection...'\n                options={ collections.index }\n                defaultValue={ stateCollectionsValue }\n                onChange={(value) => {\n                  setCollectionsValue(value)\n                  setGeneralCollection(\n                    value.reduce((acc, item) => {\n                      return acc.concat(collections.data[item.value])\n                    }, [])\n                  )\n                }}\n              />\n            </div>\n\n            <p className='text-sm mb-1'>Number of questions</p>\n            <div className='flex justify-center mb-8'>\n              <ToggleButtonGroup\n                value={stateNumberOfQuestions}\n                exclusive\n                onChange={(event, value) => setNumberOfQuestions(value)}\n                aria-label='number of questions'\n                className='w-full'\n              >\n                <ToggleButton value={5} aria-label='5' className='w-full' disabled={ stateGeneralCollection.length < 5 }>\n                  <b className='text-xl'>5</b>\n                </ToggleButton>\n                <ToggleButton value={15} aria-label='15' className='w-full' disabled={ stateGeneralCollection.length < 15 }>\n                <b className='text-xl'>15</b>\n                </ToggleButton>\n                <ToggleButton value={25} aria-label='30' className='w-full' disabled={ stateGeneralCollection.length < 25 }>\n                <b className='text-xl'>30</b>\n                </ToggleButton>\n                <ToggleButton value={50} aria-label='50' className='w-full' disabled={ stateGeneralCollection.length < 50 }>\n                <b className='text-xl'>50</b>\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </div>\n\n            <Button\n              variant='outlined'\n              color='secondary'\n              className='w-full'\n              onClick={() => {\n                setSetup(false)\n                setTest(true)\n              }}\n              disabled={ stateCollectionsValue.length === 0 || stateNumberOfQuestions === null }\n            >\n              <span className='text-xl'>Start testing</span>\n            </Button>\n          </div>\n      }\n    </>\n  )\n}","import React from 'react'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from 'react-router-dom'\nimport cn from 'classnames'\nimport { Helmet } from 'react-helmet'\n\nimport { CollectionsProvider } from './collections/CollectionsProvider'\nimport Home from './pages/index'\nimport Learning from './pages/learning'\nimport Training from './pages/training'\nimport Testing from './pages/testing'\n\nfunction Nav() {\n  const location = useLocation()\n  \n  return (\n    <header className='border-b shadow-lg'>\n      <div className='container mx-auto flex px-4 py-5'>\n        <div className='mr-8'>\n          <Link to='/'>\n            正解\n          </Link>\n        </div>\n        <nav>\n          <ul className='flex'>\n            {/* <li className='mr-6'>\n              <Link\n                to='/'\n                className={cn(\n                  'font-semibold',\n                  {'text-red-500': location.pathname === '/'}\n                )}\n              >Home</Link>\n            </li> */}\n            {/* TODO: rework with useRouteMatch */}\n            <li className='mr-6'>\n              <Link\n                to='/learning'\n                className={cn(\n                  'font-semibold',\n                  {'text-red-500': location.pathname === '/learning'}\n                )}\n              >Learning</Link>\n            </li>\n            <li className='mr-6'>\n              <Link\n                to='/training'\n                className={cn(\n                  'font-semibold',\n                  {'text-red-500': location.pathname === '/training'}\n                )}\n              >Training</Link>\n            </li>\n            <li className='mr-6'>\n              <Link\n                to='/testing'\n                className={cn(\n                  'font-semibold',\n                  {'text-red-500': location.pathname === '/testing'}\n                )}\n              >Testing</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nfunction App() {\n  return (\n    <CollectionsProvider>\n      <Helmet>\n        <title>正解 (Seikai)</title>\n      </Helmet>\n      <Router>\n        <Nav/>\n        <div className='container mx-auto px-4'>\n          <main className='py-8'>\n            <Switch>\n              <Route exact path='/'>\n                <Home/>\n              </Route>\n              <Route exact path='/learning'>\n                <Learning/>\n              </Route>\n              <Route exact path='/training'>\n                <Training/>\n              </Route>\n              <Route exact path='/testing'>\n                <Testing/>\n              </Route>\n            </Switch>\n          </main>  \n        </div>\n      </Router>\n    </CollectionsProvider>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log)\n"],"sourceRoot":""}